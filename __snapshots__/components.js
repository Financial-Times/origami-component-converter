exports['occ ignore-in-bower-manifest-only ignore-in-bower-manifest-only without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".\na\nb*\nc"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-bower-manifest\",\n\t\"ignore\": [\".\", \"a\", \"b*\", \"c\"]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-bower-manifest\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-bower-manifest\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-bower-manifest-only ignore-in-bower-manifest-only with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".\na\nb*\nc.\na\nb*\nc"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-bower-manifest\",\n\t\"ignore\": [\".\", \"a\", \"b*\", \"c\"]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-bower-manifest\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-bower-manifest\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-every-file ignore-in-every-file without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "3-npmignore\n4-npmignore\n1-bower\n2-bower5-gitignore\n6-gitignore\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-every-file\",\n\t\"ignore\": [\n\t\t\"1-bower\",\n\t\t\"2-bower\"\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-every-file\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-every-file\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-every-file ignore-in-every-file with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "3-npmignore\n4-npmignore\n1-bower\n2-bower5-gitignore\n6-gitignore\n1-bower\n2-bower5-gitignore\n6-gitignore\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-every-file\",\n\t\"ignore\": [\n\t\t\"1-bower\",\n\t\t\"2-bower\"\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-every-file\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-every-file\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-gitignore-only ignore-in-gitignore-only without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "an-item/*\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-gitignore\"\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-gitignore\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-gitignore\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-gitignore-only ignore-in-gitignore-only with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "an-item/*\nan-item/*\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-gitignore\"\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-gitignore\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-gitignore\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-npmignore-only ignore-in-npmignore-only without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "b*\nhonk\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-npmignore\"\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-npmignore\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-npmignore\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ ignore-in-npmignore-only ignore-in-npmignore-only with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "b*\nhonk\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"ignore-in-npmignore\"\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/ignore-in-npmignore\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"ignore-in-npmignore\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    }
  ]
}

exports['occ o-colors-4.0.0 o-colors-4.0.0 without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "test\n.travis.yml.idea/\n.sass-cache/\nbuild/\ntest/output/\ndemos/local\n.DS_Store\nnode_modules/\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-colors\n\nThe color palette for the FT masterbrand and sub-brand products.\n\n- [Usage](#usage)\n\t- [Sass](#sass)\n\t- [Markup](#markup)\n\t- [CSS Variables](#css-variables)\n- [Migration guide](#migration-guide)\n\t- [Upgrading from v3.x.x to v4.x.x](#upgrading-from-v3.x.x-to-v4.x.x)\n- [Contact](#contact)\n- [Licence](#licence)\n\n\n## Usage\n\nThere are a number of ways of using colors in your component or product. o-colors can be used via the [Build Service](https://www.ft.com/__origami/service/build/v2/), but it is recommended you import the Sass into your project to make use of the many Sass mixins and functions available.\n\n\n### Sass:\n\nAs with all Origami components, o-colors has a [silent mode](http://origami.ft.com/docs/syntax/scss/#silent-styles). To use its compiled CSS (rather than incorporating its mixins into your own Sass) set `$o-colors-is-silent : false;` in your Sass before you import the o-colors Sass:\n\n```scss\n$o-colors-is-silent: false;\n@import 'o-colors/main';\n```\n\n#### colors and accessibility\n\no-colors has been built to help bridge the gap between design and development by providing functionality to help create colors dynamically from a central palette as well as generate contrasted text colors based on an elements background color.\n\nYou can create tints of a color with the [`oColorsGetTint`](#tint-palette-colors) function. The function takes a palette color name and a brightness value (based on HSB color) to return a tint of the palette color.\n\nTo work with text colors the [`oColorsFor`](#use-case-mixin) mixin and [`oColorsGetTextColor`](#generated-text-colors) function will output a text color based on the background color, which will be a mix of either black or white with the background at the percentage requested. You can also mix two colors manually using the [`oColorsMix`](#mix-colors) function, providing two colors (either hex or palette color names) and a percentage at which to mix them.\n\nWhen working with the `oColorsFor` and `oColorsGetTextColor` features, the Sass will also automatically test the background color with the generated text color to see if the combination passes Web Content Accessibility Guidelines (WCAG). If the combination fails to pass at least WCAG AA you will see an error, if the combination passes AA but only at a larger font size (18px+), there will be a warning.\n\nFor manually testing color contrasts, you can use [Lea Verou's Contrast Ratio tool](http://leaverou.github.io/contrast-ratio/).\n\n#### Mixins and functions\n\no-colors has a number of mixins and functions for you to access the color palette in your project, here they are listed from the most to least preferred methods of working with o-colors.\n\n##### Use case mixin\n\nUse the `oColorsFor` mixin to add color-related properties to your ruleset:\n\n```scss\n.my-thing {\n\t@include oColorsFor(custom-box box, background text, 80);\n}\n```\n\nWill output:\n\n```css\n.my-thing {\n\tbackground-color: #f2dfce;\n\tcolor: #302d29; // black mixed with #f2dfce at 80%\n}\n```\n\nIt takes three arguments:\n\n* **Use case list**: a list of color use cases in order of preference.  The first one that is defined will be returned.\n* **Property list**: a list of all the properties you want the color applied to (background, border, text). They each correspond to `background-color`, `border-color` and `color`. Default is _all_ which includes all three properties.\n* **Text Level**: the opacity (1-100) for the text color derived from the background color of the use case. _If a text use case exists already, this will have no effect_.\n\nIn the example above, the background and text colors are set, preferably from the *custom-box* use case, and if either of those properties are not available for that use case, from the *box* use case. If the text use case is not set, the function will output a text color based on either black or white (depending on the brightness of the background) blended with the background color at the text level specified.\n\n### Use case function\n\nIf you need to use a color value as part of a more complex CSS rule, e.g. a border color for just one side, or a gradient background, use the `oColorsGetColorFor` function:\n\n```scss\n.my-thing {\n\tcolor: oColorsGetColorFor(article-life-arts-body article-body body, text, (default: blue));\n}\n```\n\nThe `oColorsGetColorFor` function takes three arguments:\n\n* **Use case list**: a list of color use cases in order of preference.  The first one that is defined for the specified property will be returned\n* **Property**: The property that you want to use the color for (background, border, or text).  Note that in contrast to the `oColorsFor` mixin, you must specify only one property.   Options are `background`, `border`, `text`, and `all`.\n* **Options**: A Sass *map* of additional options, all of which are optional, and may comprise:\n\t* **default**: The name of a palette color to return if none of the specified use cases are defined for the desired property.  May also be set to `null` or `undefined` to return that instead of the built in default (which is transparent)\n\n_This function will not generate a text color based on the use case like `oColorsFor` to get a text color based on a use case, use `oColorsGetTextColor`_\n\n### Palette color function\n\nIf you have a color use case not covered by those built into the colors module, consider defining a custom use case (see below) and then using the use case mixin or function described above.  However, if you need to use a particular color in one single place only, it may be worth using the `oColorsGetPaletteColor` function, which returns the CSS color for a palette color name:\n\n```scss\n.my-thing {\n\tcolor: oColorsGetPaletteColor('white-50');\n}\n```\n\n#### Generated text colors\n\n`oColorsGetTextColor` will return a text color based on the background and an opacity specified. The base of the text color is either black or white depending on the brightness of the background color and then mixed with the background at the specified opacity using `oColorsMix`.\n\n_Warning_: if the combination of background and text color created by the function would not pass WCAG AA level, o-colors will throw an error.\n\nUsage:\n\n```scss\n.o-colors-palette-teal {\n\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('teal'), 80);\n}\n```\n\nOutput:\n\n```css\n.o-colors-palette-teal {\n\tcolor: #cce3e5;\n}\n```\n\n#### Tint palette colors\n\n`oColorsGetTint` will return a tinted palette color based on a specified brightness.\nThe function takes the name of a palette color and a brightness value between 0-100.\n\nUsage:\n\n```scss\n.o-colors-tinted-color {\n\tbackground-color: oColorsGetTint('jade', 90);\n}\n```\n\nOutput:\n\n```css\n.o-colors-tinted-color {\n\tbackground-color: #177ee6;\n}\n```\n\n#### Mix colors\n\n`oColorsMix` will mix two colors based on a percentage. This gives the impression of the base color appearing at the percentage opacity over the background color. `oColorsMix` will accept either a color value or the name of an o-colors palette color as arguments.\n\nUsage:\n\n```scss\n.o-colors-palette-white {\n\tborder: 1px solid oColorsMix(black, white, 20);\n}\n```\n\nOutput:\n\n```css\n.o-colors-palette-white {\n\tborder: 1px solid #cccccc;\n}\n```\n\n## Defining custom use cases\n\nYou can add use cases for your particular component or product. This is done using the `oColorsSetUseCase` mixin:\n\n```scss\n@include oColorsSetUseCase(email, text, 'black-60');\n```\n\nIt takes three arguments:\n\n* **Use case**: your particular use case\n* **Property**: the property for which the color should be used for (background, border, or text)\n* **Color**: a color from the palette\n\nIf you are creating a use case for a component, you *must* namespace your use case name with the name of your component.\n\n### Markup\n\nWhen using the build service or importing the module with [silent mode](http://origami.ft.com/docs/syntax/scss/#silent-styles) set to false, o-colors provides you with helper classes to access the color palette. All palette colors are available as `.o-colors-palette-[NAME]` (which style just `background-color`) and use cases are available as `.o-colors-[USECASE]-[PROPERTY]` (which style the appropriate property):\n\n```html\n<p class=\"o-colors-body-text\">Article text</p>\n```\n\n### CSS Variables\n\nWhen using the build service or importing the module with silent mode set to false, o-colors will output all the palette colors as [CSS Variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables). These will use the format `--o-colors-{name}` (e.g. `--o-colors-black` and `--o-colors-teal`).\n\n\n## Migration guide\n\n### Upgrading from v3.x.x to v4.x.x\n\no-colors v4.x.x updates the entire palette of colors and adds a lot more functionality through new mixins and functions. The palette has been reduced from over 60 colors to a base palette of around 20 colors. These colors can be manipulated using new mixins to get a wide range of on brand colors accessibility compliant colors.\n\nTo migrate from v3.x.x to use v4.x.x you will need to update the palette colors you are requesting using `oColorsFor`, `oColorsSetUseCase`, and `oColorsGetPaletteColor`. To work out which color names you need to update, we've created a [table showing which colors should now be used in place of the old v3.x.x palette colors](migration-guide.md).\n\nNew use cases have been added for `opinion`, `hero` and `highlight` branding.\nThe `product-brand` use case has been removed.\n\n----\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-colors/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n\n----\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n    \"name\": \"o-colors\",\n    \"main\": [\"main.scss\"],\n    \"ignore\": [\n    \t\"test\",\n    \t\".travis.yml\"\n    ]\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "const wrappers = Array.from(document.querySelectorAll('.demo-wrapper'));\nconst demoColors = Array.from(document.querySelectorAll('.demo-color'));\nlet activeUseCase = '';\nlet clickToCopy = false;\n\nfunction oColorsDemoPalette() {\n\t// AO: To be used at a later stage to do overlay tints demos\n\t// const colorTints = ['white', 'black', 'claret', 'oxford', 'teal'];\n\n\t// Get the content property from the body element.\n\t// See demo.scss where a JSON-like string is added.\n\tconst elem = document.querySelector('body');\n\tlet CSSContent = window.getComputedStyle(elem, null).getPropertyValue(\"content\");\n\n\t// Remove backslashes and first and last characters (quotes)\n\t// from string, then convert to object.\n\tCSSContent = CSSContent.replace(/\\\\/gi, '').slice(1, -1);\n\tconst palette = JSON.parse(CSSContent);\n\n\tconst swatches = document.querySelectorAll('.swatch');\n\n\tfor (let swatch of swatches) {\n\t\tlet oColor = swatch.getAttribute('data-o-color');\n\t\tlet hexInput = swatch.querySelector('.hex');\n\t\thexInput.value = palette[oColor];\n\n\t\tif (clickToCopy) {\n\t\t\tswatch.addEventListener('click', oColorsCopy, false);\n\t\t}\n\t}\n\n\t// AO: To be used at a later stage to do overlay tints demos\n\t// populateTintDemos(palette, colorTints);\n}\n\n\nfunction oColorsUseCases() {\n\tconst useCaseElems = document.querySelectorAll('.use-cases');\n\n\tfor(let elem of useCaseElems) {\n\t\tconst useCases = elem.textContent.split(', ');\n\t\telem.innerHTML = '';\n\n\t\tfor (let use of useCases) {\n\t\t\tlet useClass = 'demo-color-for-' + use;\n\t\t\telem.parentNode.classList.add(useClass);\n\n\t\t\tlet button = document.createElement('button');\n\t\t\tbutton.textContent = use;\n\t\t\tbutton.className = 'o-buttons o-buttons--small o-buttons--uncolored';\n\t\t\tbutton.addEventListener('click', oColorsShowUseCases, false);\n\t\t\telem.appendChild(button);\n\t\t}\n\t};\n}\n\nfunction oColorsShowUseCases() {\n\tconst useCase = this.textContent;\n\tconst useCaseClass = '.demo-color-for-' + useCase;\n\n\tconst colors = document.querySelectorAll(useCaseClass);\n\n\tdemoColors.forEach((color) => {\n\t\tcolor.classList.remove('use-case-active');\n\t});\n\n\tif (activeUseCase === useCase) {\n\t\twrappers.forEach((wrapper) => {\n\t\t\twrapper.classList.remove('use-cases-fade-out');\n\t\t});\n\t\tactiveUseCase = '';\n\t\treturn;\n\t}\n\n\twrappers.forEach((wrapper) => {\n\t\twrapper.classList.add('use-cases-fade-out');\n\t});\n\n\tcolors.forEach((color) => {\n\t\tcolor.classList.add('use-case-active');\n\t});\n\n\tactiveUseCase = useCase;\n}\n\n/* AO: To be used at a later stage with overlay tint demos\nfunction populateTintDemos(palette, colors) {\n\tconst tints = colors.map((color) => {\n\t\tlet tintPalette = {'name': color};\n\t\ttintPalette.tints = Object.keys(palette).filter((palette_color) => {\n\t\t\treturn palette_color.startsWith(color + '-');\n\t\t});\n\t\treturn tintPalette;\n\t});\n\n\ttints.forEach((color) => {\n\t\tlet name = color.name;\n\t\tlet colorTints = color.tints;\n\t\tlet colorElem = document.querySelector('.swatch.o-colors-palette-' + name + ' .demo-tints-container');\n\n\t\tlet tintButton = document.querySelector('.demo-tint-button--' + name);\n\t\ttintButton.addEventListener('click', oColorsShowTints, false);\n\n\t\tcolorTints.forEach((tint) => {\n\t\t\tlet tintDiv = document.createElement('div');\n\t\t\ttintDiv.className = 'demo-tint o-colors-palette-' + tint;\n\t\t\tcolorElem.appendChild(tintDiv);\n\t\t});\n\t});\n}\n\nfunction oColorsShowTints() {\n\tlet tintContainer = this.closest('.demo-color').querySelector('.demo-tints-container');\n\ttintContainer.classList.toggle('show-me');\n}\n*/\n\nfunction oColorsCopy(event) {\n\t// find target element\n\tlet input = event.target.querySelector('.hex');\n\tlet parent = event.target;\n\tif (input === null && event.target.localName === 'input') {\n\t\tinput = event.target.parentNode.querySelector('.hex');\n\t\tparent = event.target.parentNode;\n\t}\n\n\t// is element selectable?\n\tif (input && input.select) {\n\t\t// select text\n\t\tinput.focus();\n\t\tinput.select();\n\n\t\ttry {\n\t\t\t// copy text\n\t\t\tdocument.execCommand('copy');\n\t\t\tinput.blur();\n\t\t\t// Setting the class changes the :after content to read \"Copied!\"\n\t\t\tparent.classList.add('copied');\n\t\t\t// Remove the class after 2s\n\t\t\tsetTimeout(function() {\n\t\t\t\tparent.classList.remove('copied');\n\t\t\t}, 2000);\n\n\t\t} catch (err) {}\n\t}\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\tlet randomInput = document.querySelectorAll('input')[0];\n\tif (randomInput.select && document.execCommand) {\n\t\tdocument.body.classList.add('o-copy-true');\n\t\tclickToCopy = true;\n\t}\n\n\toColorsDemoPalette();\n\toColorsUseCases();\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-colors-is-silent: false;\n\n// Import colors module\n@import '../../main';\n\n@function oColorsJSONifyMap($map) {\n\t$json: '{';\n\t$comma: false;\n\n\t@each $key, $value in $map {\n\t\t@if $comma {\n\t\t\t$json: '#{$json}, ';\n\t\t} @else {\n\t\t\t$comma: true;\n\t\t}\n\n\t\t$json: '#{$json}\"#{$key}\": \"#{$value}\"';\n\t}\n\n\t$json: '#{$json}}';\n\n\t@return $json;\n}\n\nbody {\n\tcontent: \"#{oColorsJSONifyMap($o-colors-palette)}\";\n\tbox-sizing: border-box;\n\tfont-family: Helvetica, Arial, sans-serif;\n\n\t*,\n\t*:before,\n\t*:after {\n\t\tbox-sizing: inherit;\n\t}\n}\n\n@each $name, $csscolor in $o-colors-palette {\n\t@if $csscolor != 'transparent' and $csscolor != 'inherit' {\n\t\t.o-colors-palette-#{$name} .hex,\n\t\t.o-colors-palette-#{$name}:after {\n\t\t\t// Text at 90% does not pass contrast tests so increase\n\t\t\t// the shade to pass\n\t\t\t@if $name == 'jade' {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 95);\n\t\t\t} @else {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 90);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.o-colors-palette-org-b2c {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c'), 90);\n\t}\n}\n\n.o-colors-palette-org-b2c-light {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c-light'), 90);\n\t}\n}\n\n.o-colors-palette-org-b2c-dark {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c-dark'), 90);\n\t}\n}\n\n.container {\n\twidth: 100%;\n\tmax-width: 1100px;\n\tmargin: 0 auto;\n}\n\n.demo-wrapper {\n\twidth: 100%;\n\tdisplay: flex;\n\tmargin-left: -10px;\n\tmargin-right: -10px;\n\tjustify-content: flex-start;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-content: space-between;\n}\n\n.use-cases-fade-out .demo-color { opacity: 0.37; }\n.use-cases-fade-out .demo-color.use-case-active { opacity: 1; }\n\n.demo-color {\n\tflex: 0 0 30%;\n\tmargin: 0 10px 20px;\n\ttransition: opacity 0.3s ease-out;\n\n\t.o-buttons {\n\t\tmargin-right: 5px;\n\t\tcolor: oColorsMix(black, white, 80);\n\t\tborder-color: oColorsMix(black, white, 20);\n\t}\n\n\th3 {\n\t\tposition: relative;\n\t\tmargin: 0;\n\t\tpadding: 8px;\n\t\tfont-weight: normal;\n\t\tfont-size: 16px;\n\t\tline-height: 24px;\n\t\tborder: 1px solid oColorsMix(black, white, 20);\n\t\tborder-bottom: 0;\n\t}\n}\n\n.demo-tint-button {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\theight: 40px;\n\tpadding: 0 10px;\n\tbackground-color: oColorsGetPaletteColor('white');\n\tcursor: pointer;\n\tborder: 0;\n\tborder-left: 1px solid oColorsMix(black, white, 20);\n}\n\n.demo-tints-container {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-flow: row wrap;\n\tjustify-content: center;\n\talign-content: stretch;\n\ttransform: translateY(-100%);\n\ttransition: transform 0.3s ease-in;\n\n\t&.show-me {\n\t\ttransform: translateY(0);\n\t}\n\n\t.demo-tint {\n\t\tflex: 1 0 25%;\n\t\tcursor: pointer;\n\t}\n}\n\n.swatch {\n\tposition: relative;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-content: center;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\theight: 120px;\n\tmargin-bottom: 10px;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: \"Click to copy\";\n\t\tbottom: 20px;\n\t\tdisplay: block;\n\t\topacity: 0;\n\t\ttransition: opacity 0.2s ease-in;\n\t}\n\n\t&.copied:after {\n\t\tcontent: \"Copied!\";\n\t}\n\n\t.o-copy-true &:hover:after {\n\t\topacity: 1;\n\t}\n\n\t&.o-colors-palette-white,\n\t&.o-colors-palette-paper {\n\t\tborder: 1px solid oColorsMix(black, white, 20);\n\t}\n\n\t.hex {\n\t\twidth: 100%;\n\t\theight: 120px;\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\ttext-transform: uppercase;\n\t\tborder: 0;\n\t\tbackground: transparent;\n\t\tfont-size: 18px;\n\t\tcursor: pointer;\n\t}\n}\n\n\n.demo-wrapper--tints {\n\tjustify-content: space-between;\n}\n\n.demo-tint-column {\n\tmargin: 0 5px;\n\tflex: 1 0;\n\n\th3 {\n\t\ttext-align: center;\n\t}\n\n\t.swatch--tint {\n\t\tmargin-bottom: 0;\n\t\theight: 100px;\n\t\tpadding-top: 0px;\n\t\tpadding-bottom: 30px;\n\n\t\tlabel {\n\t\t\twidth: 100%;\n\t\t\tpadding-left: 10px;\n\t\t\ttext-align: left;\n\t\t\tpadding-top: 10px;\n\t\t\tmargin-bottom: 5px;\n\t\t\tfont-size: 14px;\n\t\t}\n\n\t\t.hex {\n\t\t\tfont-size: 16px;\n\t\t}\n\n\t\t&:after {\n\t\t\tbottom: 15px;\n\t\t\tfont-size: 12px;\n\t\t}\n\t}\n}\n\n.my-thing {\n\t@include oColorsFor(custom-box box, background text, 80);\n}\n\n.o-colors-tinted-color {\n\tbackground-color: oColorsGetTint('oxford', 90);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "<div class=\"container\">\n\t{{#primary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Primary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label> {{#tints}}<button class=\"demo-tint-button demo-tint-button--{{name}}\">Tints</button>{{/tints}}</h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t\t{{#tints}}<div class=\"demo-tints-container\"></div>{{/tints}}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/primary}}\n\n\t{{#secondary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Secondary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/secondary}}\n\n\t{{#tertiary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tertiary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tertiary}}\n\n\t{{#b2c}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>B2C colors</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/b2c}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/palette.json",
      "contents": "{\n\t\"primary\" : {\n\t\t\"description\": \"color is a fundamental attribute of the FT visual language. Consistent use of the primary palette across the platform strengthens our brand by evoking familiarity and trust.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"paper\",\n\t\t\t\t\"tints\": false,\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"black\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds, buttons, icons\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"white\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds, buttons, icons\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"claret\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"oxford\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"teal\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, backgrounds, buttons, links\"\n\t\t\t}\n\t\t]\n\t},\n\t\"secondary\" : {\n\t\t\"description\": \"Secondary colors provide visual hierarchy to differentiate content and are brand identifiers of the FT.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"wheat\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"sky\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"slate\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"velvet\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"mandarin\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"lemon\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t}\n\t\t]\n\t},\n\t\"tertiary\" : {\n\t\t\"description\": \"Used sparingly, these colors provide contrast for highlighting and messaging.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"jade\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"crimson\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"candy\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"wasabi\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t}\n\t\t]\n\t},\n\t\"tints\" : {\n\t\t\"description\": \"Dynamic tinting of the primary palette can be used to produce a broad spectrum of lighter and darker variations for creating scale and depth to your designs.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"black\",\n\t\t\t\t\"tint-levels\": [5, 10, 20, 30, 40, 50, 60, 70, 80, 90]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"white\",\n\t\t\t\t\"tint-levels\": [10, 20, 40, 60, 80]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"claret\",\n\t\t\t\t\"tint-levels\": [30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"oxford\",\n\t\t\t\t\"tint-levels\": [30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"teal\",\n\t\t\t\t\"tint-levels\": [20, 30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t}\n\t\t]\n\t},\n\t\"b2c\" : {\n\t\t\"description\": \"These colors are specifically designed for use in B2C products.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c-dark\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c-light\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t}\n\t\t]\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/palette.mustache",
      "contents": "<div class=\"container\">\n\t{{#primary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Primary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<label for=\"o-color-input-{{name}}\">{{name}}</label>\n\t\t\t\t\t\t{{! Button to show tints of the color in the swatch }}\n\t\t\t\t\t<!-- {{#tints}}<button class=\"demo-tint-button demo-tint-button--{{name}}\">Tints</button>{{/tints}} -->\n\t\t\t\t\t</h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t\t{{! Where the tints will display }}\n\t\t\t\t\t\t<!-- {{#tints}}<div class=\"demo-tints-container\"></div>{{/tints}} -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/primary}}\n\n\t{{#secondary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Secondary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/secondary}}\n\n\t{{#tertiary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tertiary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tertiary}}\n\n\t{{#b2c}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>B2C colors</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/b2c}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/tints.mustache",
      "contents": "<div class=\"container\">\n\t{{#tints}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tinting</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper demo-wrapper--tints\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-tint-column\">\n\t\t\t\t\t<h3>{{name}}</h3>\n\t\t\t\t\t{{#tint-levels}}\n\t\t\t\t\t\t<div class=\"swatch swatch--tint o-colors-palette-{{name}}-{{.}}\" data-o-color=\"{{name}}-{{.}}\">\n\t\t\t\t\t\t\t<label for=\"o-color-input-{{name}}-{{.}}\">{{name}}-{{.}}</label>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}-{{.}}\" value=\"\" readonly>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{{/tint-levels}}\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tints}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/use-cases.mustache",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "designguidelines.md",
      "contents": "o-colors are a fundamental attribute of the FT visual language and provide brand consistency across all products.\n\n**The color palette is optimised to comply with WCAG 2.0 level AA with a minimum contrast ratio of 4.5:1.**\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_functions.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Return the CSS color for a palette color name\n///\n/// @param {String} $name\n@function oColorsGetPaletteColor($name) {\n\t@if (map-has-key($o-colors-palette, $name)) {\n\t\t@return map-get($o-colors-palette, $name);\n\t} @else {\n\t\t@warn \"Color name '#{inspect($name)}' is not defined in the palette\";\n\t\t@return null;\n\t}\n}\n\n/// Returns a color based on the background context and base color\n/// at the supplied percentage\n///\n/// @param {String} $background [paper] - palette name of background color\n/// @param {String} $color [black] - palette name of color\n/// @param {Number} $percentage [60] - percentage opacity of the color over the background\n@function oColorsMix($color: 'black', $background: 'paper', $percentage: 80) {\n\t$context: $background;\n\t$base: $color;\n\n\t@if type-of($background) != color {\n\t\t$context: oColorsGetPaletteColor($background);\n\t}\n\n\t@if type-of($color) != color {\n\t\t$base: oColorsGetPaletteColor($color);\n\t}\n\n\t@return mix($base, $context, $percentage);\n}\n\n/// Return the defined palette color name for a use case / property combination\n///\n/// @access private\n///\n/// @param {String} $usecase\n/// @param {String} $property - 'text', 'background', 'border' or 'all'\n@function _oColorsGetUseCase($usecase, $property) {\n\t@if (not map-has-key($o-colors-usecases, $usecase)) {\n\t\t@return null;\n\t}\n\n\t$props: map-get($o-colors-usecases, $usecase);\n\n\t$color: map-get($props, $property);\n\n\t@if ($color == null and $property != 'all') {\n\t\t$color: map-get($props, all);\n\t}\n\n\t@if (map-has-key($props, '_deprecated')) {\n\t\t@warn \"Color use case '#{inspect($usecase)}' is deprecated (property '#{inspect($property)}' was requested): #{inspect(map-get($props, '_deprecated'))}\";\n\t}\n\n\t@return $color;\n}\n\n/// Return the CSS color name of the first defined use case in a prioritised list for a use case / property combination\n///\n/// @example scss\n/// // Single use case:\n/// body { color: oColorsGetColorFor(page, text); }\n///\n/// // Use case with one or multiple fallbacks:\n/// // Use \"my-box\" color if available. If not, fall back to the \"box\" use case.\n/// .box { background-color: oColorsGetColorFor(my-box box, background); }\n///\n/// // No specific property:\n/// .money-wrapper { background-color: oColorsGetColorFor(section-money); }\n/// .money-headline { color: oColorsGetColorFor(section-money); }\n///\n/// // Assign a different fallback if the use case doesn't exist\n/// .foo { background-color: oColorsGetColorFor(foo, background, $options: ('default': 'black-5')); }\n///\n/// @param {list} $namelist\n/// @param {String} $property [all]\n/// @param {map} $options [('default': false)] - default: fallback value (false, null, or one of $o-colors-palette)\n@function oColorsGetColorFor($namelist, $property: all, $options: ('default': false)) {\n\t$default: map-get($options, 'default');\n\t$color: null;\n\n\t@each $name in $namelist {\n\t\t@if ($color == null) {\n\t\t\t$color: _oColorsGetUseCase($name, $property);\n\t\t}\n\t}\n\n\t@if ($color == null) {\n\t\t@if ($default or $default == null) {\n\t\t\t@return $default;\n\t\t} @else {\n\t\t\t$warn: \"Undefined use-case: can't resolve use case list '#{inspect($namelist)}'\";\n\n\t\t\t@if ($property) {\n\t\t\t\t$warn: $warn + \" for property '#{inspect($property)}'\";\n\t\t\t}\n\n\t\t\t@warn $warn;\n\t\t}\n\t}\n\n\t@return oColorsGetPaletteColor($color);\n}\n\n/// Returns a customised version of our shade-able colors defined in\n/// $o-colors-tints\n///\n/// @param {String} $color - the name of the color to be shaded\n/// @param {Number} $brightness - the brightness value of the new color\n@function oColorsGetTint($color, $brightness) {\n\t$hue: null;\n\t$saturation: null;\n\t$mix: null;\n\t$newcolor: null;\n\n\t@if not (map-has-key($o-colors-tints, $color)) {\n\t\t$color-tints: map-keys($o-colors-tints);\n\t\t@error \"It is not possible to use a tint of: #{$color}, please use one of: #{$color-tints} instead.\";\n\t}\n\n\t@if (map-has-key(map-get($o-colors-tints, $color), 'hue')) {\n\t\t$hue: map-get(map-get($o-colors-tints, $color), 'hue');\n\t\t$saturation: map-get(map-get($o-colors-tints, $color), 'saturation');\n\t\t$newcolor: _oColorsHSB($hue, $saturation, $brightness);\n\t} @else {\n\t\t$newcolor: oColorsMix($color, $percentage: $brightness);\n\t}\n\n\t@return $newcolor;\n}\n\n/// Returns a text color based on the background and\n/// an opacity percentage the color should appear at\n///\n/// @param {Color} $background - the hex color of the background the text will appear on\n/// @param {Number} $opacity [100] - the opacity percentage the text color should appear at\n@function oColorsGetTextColor($background, $opacity: 90) {\n\t$baseColor: _oColorsGetTextBase($background);\n\t$percentage: $opacity;\n\n\t$textColor: oColorsMix($baseColor, $background, $percentage);\n\t$testContrast: oColorsCheckContrast($textColor, $background, false);\n\n\t@if not $testContrast {\n\t\t@error \"The combination of #{$opacity}% #{$baseColor} on #{$background} does not pass WCAG guidelines for color contrast.\";\n\t} @else if $testContrast == 'large' {\n\t\t@warn \"When using this combination (#{$opacity}% #{$baseColor} on #{$background}) please use a font size larger than 18px.\";\n\t}\n\n\t@return $textColor;\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_mixins.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Add a custom palette color\n///\n/// @example scss\n///  @include oColorsSetColor('grey-tint20': #cccccc);\n///\n/// @param {String} $name - Name in the palette\n/// @param {color} $color - Color (rgb, hex, hsl…)\n@mixin oColorsSetColor($name, $color) {\n\t$newcolor: ($name: $color);\n\n\t$o-colors-palette: map-merge($o-colors-palette, $newcolor) !global;\n}\n\n/// Add a custom use case property\n///\n/// @example scss\n///  @include oColorsSetUseCase(email, text, 'grey-tint5');\n///\n/// @param {String} $usecase - Name of the use case\n/// @param {String} $property - Property it applies to\n/// @param {String} $color - One of $o-colors-palette\n@mixin oColorsSetUseCase($usecase, $property, $color) {\n\t$propmap: ($property: $color);\n\n\t// The use-case already exists,\n\t// combine its existing properties with the new one\n\t@if (map-has-key($o-colors-usecases, $usecase)) {\n\t\t$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);\n\t}\n\n\t$newmap: ($usecase: $propmap);\n\n\t// Add the use-case and its properties to the global use-case map\n\t$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;\n}\n\n/// Output property declarations for all defined properties for the specified use case\n///\n/// @example scss\n///  .my-thing {\n///  \t@include oColorsFor(custom-box box);\n///  }\n///  .my-other-thing {\n///  \t@include oColorsFor(custom-box box, background border);\n///  }\n///\n/// @param {String|list} $useCaseList\n/// @param {String|list} $propertyList [all]\n@mixin oColorsFor($useCaseList, $propertyList: all, $textLevel: 100) {\n\t// Fail silently when a use case doesn't exist,\n\t// taking advantage of how Sass treats the `null` keyword:\n\t//\n\t// \t\t$foo: null;\n\t// \t\tel { color: $foo; } // outputs nothing\n\t$args: (default: null);\n\n\t@if ($propertyList == 'all' or index($propertyList, 'background')) {\n\t\tbackground-color: oColorsGetColorFor($useCaseList, background, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'text')) {\n\t\t$useCaseTextColor: oColorsGetColorFor($useCaseList, text, $options: $args);\n\t\t$useCaseBackgroundColor: oColorsGetColorFor($useCaseList, background, $options: $args);\n\n\t\t// If no text color is defined but there is a background color for the use case\n\t\t@if $useCaseTextColor == null and $useCaseBackgroundColor != null {\n\t\t\t$useCaseTextColor: oColorsGetTextColor($useCaseBackgroundColor, $textLevel);\n\t\t}\n\n\t\tcolor: $useCaseTextColor;\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'border')) {\n\t\tborder-color: oColorsGetColorFor($useCaseList, border, $options: $args);\n\t}\n}\n\n/// Update the palette with calculated tints of\n/// each color from $o-colors-tints\n@mixin _oColorsSetPaletteTints {\n\t@each $color, $settings in $o-colors-tints {\n\t\t$hue: map-get($settings, 'hue');\n\t\t$tints: map-get($settings, 'tints');\n\n\t\t$saturation: null;\n\n\t\t@if map-has-key($settings, 'saturation') {\n\t\t\t$saturation: map-get($settings, 'saturation');\n\t\t}\n\n\t\t@if $tints != null {\n\t\t\t@each $value in $tints {\n\t\t\t\t$name: \"#{$color}-#{$value}\";\n\t\t\t\t$tint: null;\n\n\t\t\t\t@if $saturation == null {\n\t\t\t\t\t$tint: oColorsMix($color, $percentage: $value);\n\t\t\t\t} @else {\n\t\t\t\t\t$tint: _oColorsHSB($hue, $saturation, $value);\n\t\t\t\t}\n\n\t\t\t\t@include oColorsSetColor($name, $tint);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Output all palette colors as CSS Variables\n@mixin _oColorsCSSVariables {\n\t:root {\n\t\t@each $name, $hex in $o-colors-palette {\n\t\t\t#{--o-colors-}#{$name}: $hex;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_palette.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n\n/// color palette\n///\n/// These are the colors that make up the FT palette.\n/// We don't use these colors directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a color name and a color code,\n/// and is finished with a comma:\n///\n/// \t<color name>:   <color code>,\n///\n/// The color name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the color name and the color code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// non-color css values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// primary palette\n\t'paper':                 #fff1e5,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\n\t'claret':                #990f3d,\n\t'oxford':                #0f5499,\n\t'teal':                  #00757f,\n\n\t'wheat':                 #f2dfce,\n\t'sky':                   #cce6ff,\n\t'slate':                 #262a33,\n\n\t'velvet':                #593380,\n\t'mandarin':              #ff8833,\n\t'lemon':                 #ffec1a,\n\n\t'candy':                 #ff7faa,\n\t'wasabi':                #96cc28,\n\n\t'jade':                  #00b359,\n\t'crimson':               #cc0000,\n\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n), $o-colors-palette);\n\n$o-colors-tints: (\n\t'black': (\n\t\ttints: (5, 10, 20, 30, 40, 50, 60, 70, 80, 90),\n\t),\n\t'white': (\n\t\ttints: (10, 20, 40, 60, 80),\n\t),\n\t'claret': (\n\t\thue: 340,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'oxford': (\n\t\thue: 210,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'teal': (\n\t\thue: 185,\n\t\tsaturation: 90,\n\t\ttints: (20, 30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'wheat': (\n\t\thue: 28,\n\t\tsaturation: 15,\n\t),\n\t'sky': (\n\t\thue: 210,\n\t\tsaturation: 20,\n\t),\n\t'slate': (\n\t\thue: 220,\n\t\tsaturation: 20,\n\t),\n\t'velvet': (\n\t\thue: 270,\n\t\tsaturation: 60,\n\t),\n\t'mandarin': (\n\t\thue: 25,\n\t\tsaturation: 80,\n\t),\n\t'lemon': (\n\t\thue: 55,\n\t\tsaturation: 90,\n\t),\n\t'candy': (\n\t\thue: 340,\n\t\tsaturation: 50,\n\t),\n\t'wasabi': (\n\t\thue: 80,\n\t\tsaturation: 80,\n\t),\n\t'jade': (\n\t\thue: 150,\n\t\tsaturation: 100,\n\t),\n\t'crimson': (\n\t\thue: 360,\n\t\tsaturation: 100,\n\t)\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_use-cases.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// color use cases\n///\n/// These mappings define what we use our colors for.\n///\n/// Use case:           Must be a single word comprising just letters, numbers, and dashes.\n/// Properties:         A Sass map of properties (must be 'border', 'text', 'background', or 'all')\n///                     against palette colors (must be an exact match for a name of a color defined\n///                     in palette.scss).\n///\n/// Special properties: You can use the following special properties to mark use cases:\n///\n///                     _deprecated: <msg>  Emits <msg> as a warning if referenced, but still works\n///\n/// @type map\n$o-colors-usecases: map-merge((\n\n//\t<use case>                <properties>\n\n\tpage:                     (background: 'paper'),\n\tbox:                      (background: 'wheat'),\n\tlink:                     (text: 'teal'),\n\tlink-hover:               (text: 'black-70'),\n\tlink-title:               (text: 'black-80'),\n\tlink-title-hover:         (text: 'black-70'),\n\ttag-link:                 (text: 'claret'),\n\ttag-link-hover:           (text: 'claret-30'),\n\topinion-tag-link:         (text: 'oxford'),\n\topinion-tag-link-hover:   (text: 'oxford-30'),\n\ttitle:                    (text: 'black'),\n\tbody:                     (text: 'black-80'),\n\tmuted:                    (text: 'black-20'),\n\topinion:                  (background: 'sky'),\n\thero:                     (background: 'wheat'),\n\thero-opinion:             (background: 'oxford'),\n\thero-highlight:           (background: 'claret'),\n\n\t// Section colors\n\tsection-life-arts:        (all: 'velvet'),\n\tsection-life-arts-alt:    (all: 'candy'),\n\tsection-magazine:         (all: 'oxford'),\n\tsection-magazine-alt:     (all: 'sky'),\n\tsection-house-home:       (all: 'jade'),\n\tsection-house-home-alt:   (all: 'wasabi'),\n\tsection-money:            (all: 'crimson'),\n\tsection-money-alt:        (all: 'white'),\n\n), $o-colors-usecases);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_variables.scss",
      "contents": "$o-colors-is-silent: true !default;\n\n$o-colors-palette: () !default;\n$o-colors-usecases: () !default;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_a11y.scss",
      "contents": "/// Return either white or black for the text base\n/// depending on the background color\n///\n/// @param {String} $color - the name of the background color being used\n@function _oColorsGetTextBase($color) {\n\t@if oColorsColorBrightness($color) < 65% {\n\t\t@return 'white';\n\t} @else {\n\t\t@return 'black';\n\t}\n}\n\n/// Checks the contrast ratio and returns the WCAG\n/// rating, either AAA, AA, or AA18 meaning text should\n/// be at least 18px\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n@function oColorsGetWCAGRating($col1, $col2) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\t$wcag-rating: 'fail';\n\n\t@if $ratio >= 7 {\n\t\t$wcag-rating: 'AAA';\n\t} @else if $ratio >= 4.5 {\n\t\t$wcag-rating: 'AA';\n\t} @else if $ratio >= 3 {\n\t\t$wcag-rating: 'AA18';\n\t}\n\n\t@return $wcag-rating;\n}\n\n/// Checks the constrast of two colors and reports based on\n/// WCAG guidelines for color contrast\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// @param {Boolean} $warnings - whether this function should throw warnings/errors or just return\n@function oColorsCheckContrast($col1, $col2, $warnings: true) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\n\t@if $ratio >= 4.5 {\n\t\t@return 'pass';\n\t} @else if $ratio >= 3 {\n\t\t@if $warnings { @warn \"Caution: When using the combination of #{$col1} with #{$col2}, text should be larger than 18px to pass WCAG color contrast guidelines.\"; }\n\t\t@return 'large';\n\t}\n\n\t@if $warnings {\n\t\t@error \"This combination of #{$col1} with #{$col2} does not pass WCAG color contrast guidelines.\";\n\t}\n\n\t@return false;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_color.scss",
      "contents": "/// Returns the web-safe HSLA color based on HSB/HSV values\n///\n/// @access private\n///\n/// @param {Number} $hue - number between 0-360\n/// @param {Number} $saturation - number between 0-100\n/// @param {Number} $brigthness - number between 0-100\n/// @param {Number} $alpha [1] - number between 0-1\n@function _oColorsHSB($hue, $saturation, $brightness, $alpha: 1) {\n\t@if $brightness == 0 {\n\t\t@return hsla(0, 0, 0, $alpha);\n\t} @else {\n\t\t$hsl-luminance: ($brightness/2) * (2 - ($saturation/100));\n\t\t$hsl-saturation: ($brightness * $saturation) / if($hsl-luminance < 50, $hsl-luminance * 2, 200 - $hsl-luminance * 2);\n\n\t\t@return hsla($hue, $hsl-saturation, $hsl-luminance, $alpha);\n\t}\n}\n\n/// Work out the brightness value in % of a color\n///\n/// @param {Color} $color - color value to get brightness from\n/// From: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function oColorsColorBrightness($color) {\n\t$red-magic-number: 241;\n\t$green-magic-number: 691;\n\t$blue-magic-number: 68;\n\n\t$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;\n\n\t// Extract color components\n\t$red-component: red($color);\n\t$green-component: green($color);\n\t$blue-component: blue($color);\n\n\t// Calculate a brightness value in 3d color space between 0 and 255\n\t$number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * $blue-component * $blue-magic-number)) / $brightness-divisor);\n\n\t// Convert to percentage and return\n\t@return 100% * ($number / 255);\n}\n\n/// Returns the luminance of `$color` as a float (between 0 and 1)\n/// 1 is pure white, 0 is pure black\n/// @param {Color} $color - Color\n/// @return {Number}\n/// From: https://css-tricks.com/snippets/sass/luminance-color-function/\n@function oColorsColorLuminance($color) {\n\t$colors: (\n\t\t'red': red($color),\n\t\t'green': green($color),\n\t\t'blue': blue($color)\n\t);\n\n\t@each $name, $value in $colors {\n\t\t$adjusted: 0;\n\t\t$value: $value / 255;\n\n\t\t@if $value < 0.03928 {\n\t\t\t$value: $value / 12.92;\n\t\t} @else {\n\t\t\t$value: ($value + 0.055) / 1.055;\n\t\t\t$value: pow($value, 2.4);\n\t\t}\n\n\t\t$colors: map-merge($colors, ($name: $value));\n\t}\n\n\t@return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) + (map-get($colors, 'blue') * 0.0722);\n}\n\n/// Calculate the contrast ratio between two colors\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// Based on the JS in https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/contrast-ratio.js\n@function oColorsGetContrastRatio($col1, $col2) {\n\t$l1: oColorsColorLuminance($col1) + 0.05;\n\t$l2: oColorsColorLuminance($col2) + 0.05;\n\n\t$ratio: $l1 / $l2;\n\n\t@if $l2 > $l1 {\n\t\t$ratio: 1 / $ratio;\n\t}\n\n\t$ratio: (round($ratio*10)/10);\n\n\t@return $ratio;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_maths.scss",
      "contents": "// Square root maths function\n//\n// @param {Number} $root - Number to find the square root of\n// Code from: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function sqrt($root) {\n    $x0: 1;\n    $x1: $x0;\n\n    @for $idx from 1 through 10 {\n        $x1: $x0 - ($x0 * $x0 - abs($root)) / (2 * $x0);\n        $x0: $x1;\n    }\n\n    @return $x1;\n}\n\n/// Power of maths function\n///\n/// @param {Number} $number - Number\n/// @param {Number} $exponent - Exponent\n/// From: https://css-tricks.com/snippets/sass/power-function/\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $idx from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $idx from 1 through -$exponent {\n      $value: $value / $number;\n    }\n  }\n\n  @return $value;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "@import 'src/scss/variables';\n@import 'src/scss/tools/color';\n@import 'src/scss/tools/maths';\n@import 'src/scss/tools/a11y';\n\n@import 'src/scss/palette';\n@import 'src/scss/use-cases';\n\n@import 'src/scss/functions';\n@import 'src/scss/mixins';\n\n// Set the tint palette colors programatically\n@include _oColorsSetPaletteTints;\n\n// If noisy, output helper classes for use cases and palette colors\n@if ($o-colors-is-silent == false) {\n\t@include _oColorsCSSVariables;\n\n\t@each $usecase, $props in $o-colors-usecases {\n\t\t@each $prop, $color in $props {\n\t\t\t#{'.o-colors-' + $usecase + '-' + $prop} {\n\t\t\t\t@if $prop == text or $prop == all {\n\t\t\t\t\tcolor: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t\t@if $prop == background or $prop == all {\n\t\t\t\t\tbackground-color: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t\t@if $prop == border or $prop == all {\n\t\t\t\t\tborder-color: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@each $name, $csscolor in $o-colors-palette {\n\t\t.o-colors-palette-#{$name} {\n\t\t\tbackground-color: $csscolor;\n\n\t\t\t@if $csscolor != 'transparent' and $csscolor != 'inherit' {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 100);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set silent mode back on to avoid multiple outputs of helper classes\n\t$o-colors-is-silent: true;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "migration-guide.md",
      "contents": "# Color palette migration table\n\n| Old name              | Switch to                        |\n| --------------------- |----------------------------------|\n| pink                  | paper                            |\n| blue                  | oxford                           |\n| dark-blue             | oxford-60                        |\n| orange                | mandarin                         |\n| grey-tint1            | black-30                         |\n| grey-tint2            | black-40                         |\n| grey-tint3            | black-50                         |\n| grey-tint4            | black-70                         |\n| grey-tint5            | black-80                         |\n| pink-tint1            | black-5                          |\n| pink-tint2            | black-10                         |\n| pink-tint3            | black-20                         |\n| pink-tint4            | black-30                         |\n| pink-tint5            | black-50                         |\n| red                   | crimson                          |\n| green                 | jade                             |\n| orange-tint1          | _consult a designer_             |\n| brown-tint1           | _consult a designer_             |\n| yellow-tint1          | _consult a designer_             |\n| green-tint1           | _consult a designer_             |\n| bluegreen-tint1       | _consult a designer_             |\n| silver-tint1          | _consult a designer_             |\n| purple-tint1          | _consult a designer_             |\n| purple-tint2          | black-50 (_consult a designer_)  |\n| red-tint1             | _consult a designer_             |\n| red-tint2             | _consult a designer_             |\n| red-tint3             | _consult a designer_             |\n| red-tint4             | _consult a designer_             |\n| red-tint5             | _consult a designer_             |\n| blue-tint1            | _consult a designer_             |\n| blue-tint2            | _consult a designer_             |\n| blue-tint3            | _consult a designer_             |\n| blue-tint4            | _consult a designer_             |\n| blue-tint5            | _consult a designer_             |\n| section-purple        | velvet                           |\n| section-light-purple  | _consult a designer_             |\n| section-blue          | blue-80                          |\n| section-light-blue    | sky                              |\n| section-green         | use `oColorsGetTint('jade', 65)` |\n| section-light-green   | _consult a designer_             |\n| section-red           | crimson                          |\n| warm-1                | wheat                            |\n| warm-2                | black-5                          |\n| warm-3                | black-20                         |\n| warm-4                | black-90                         |\n| warm-5                | white-50                         |\n| warm-6                | black-80 (_consult a designer_)  |\n| cold-1                | black-70                         |\n| cold-2                | black-80                         |\n| cold-3                | black-90                         |\n| blue-1                | oxford-30                        |\n| blue-2                | _consult a designer_             |\n| purple-1              | velvet                           |\n| purple-2              | _consult a designer_             |\n| teal-1                | teal-40                          |\n| teal-2                | teal-80                          |\n| claret-1              | claret                           |\n| claret-2              | candy                            |\n| claret-inverse        | claret-30                        |\n| org-b2b               | org-b2c                          |\n| org-b2c-dark          | org-b2c-dark                     |\n| org-b2c-light         | org-b2c-light                    |\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"FT brand colours: Sass variables and helpers to use and define them\",\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"primitives\",\n\t\"keywords\": \"colours, themes, schemes, pink, salmon, background, palette\",\n\t\"origamiVersion\": 1,\n\t\"support\": \"https://github.com/Financial-Times/o-colors/issues\",\n\t\"supportStatus\": \"active\",\n\t\"demosDefaults\": {\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"dependencies\": \"o-buttons@^4.5.4\"\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"name\": \"palette\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/palette.mustache\",\n\t\t\t\"display_html\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"tints\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/tints.mustache\",\n\t\t\t\"display_html\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"use-cases\",\n\t\t\t\"template\": \"demos/src/use-cases.mustache\",\n\t\t\t\"display_html\": false,\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/pa11y.mustache\",\n\t\t\t\"hidden\": true,\n\t\t\t\"display_html\": false\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-colors\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"o-colors\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_functions.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Return the CSS color for a palette color name\n///\n/// @param {String} $name\n@function oColorsGetPaletteColor($name) {\n\t@if (map-has-key($o-colors-palette, $name)) {\n\t\t@return map-get($o-colors-palette, $name);\n\t} @else {\n\t\t@warn \"Color name '#{inspect($name)}' is not defined in the palette\";\n\t\t@return null;\n\t}\n}\n\n/// Returns a color based on the background context and base color\n/// at the supplied percentage\n///\n/// @param {String} $background [paper] - palette name of background color\n/// @param {String} $color [black] - palette name of color\n/// @param {Number} $percentage [60] - percentage opacity of the color over the background\n@function oColorsMix($color: 'black', $background: 'paper', $percentage: 80) {\n\t$context: $background;\n\t$base: $color;\n\n\t@if type-of($background) != color {\n\t\t$context: oColorsGetPaletteColor($background);\n\t}\n\n\t@if type-of($color) != color {\n\t\t$base: oColorsGetPaletteColor($color);\n\t}\n\n\t@return mix($base, $context, $percentage);\n}\n\n/// Return the defined palette color name for a use case / property combination\n///\n/// @access private\n///\n/// @param {String} $usecase\n/// @param {String} $property - 'text', 'background', 'border' or 'all'\n@function _oColorsGetUseCase($usecase, $property) {\n\t@if (not map-has-key($o-colors-usecases, $usecase)) {\n\t\t@return null;\n\t}\n\n\t$props: map-get($o-colors-usecases, $usecase);\n\n\t$color: map-get($props, $property);\n\n\t@if ($color == null and $property != 'all') {\n\t\t$color: map-get($props, all);\n\t}\n\n\t@if (map-has-key($props, '_deprecated')) {\n\t\t@warn \"Color use case '#{inspect($usecase)}' is deprecated (property '#{inspect($property)}' was requested): #{inspect(map-get($props, '_deprecated'))}\";\n\t}\n\n\t@return $color;\n}\n\n/// Return the CSS color name of the first defined use case in a prioritised list for a use case / property combination\n///\n/// @example scss\n/// // Single use case:\n/// body { color: oColorsGetColorFor(page, text); }\n///\n/// // Use case with one or multiple fallbacks:\n/// // Use \"my-box\" color if available. If not, fall back to the \"box\" use case.\n/// .box { background-color: oColorsGetColorFor(my-box box, background); }\n///\n/// // No specific property:\n/// .money-wrapper { background-color: oColorsGetColorFor(section-money); }\n/// .money-headline { color: oColorsGetColorFor(section-money); }\n///\n/// // Assign a different fallback if the use case doesn't exist\n/// .foo { background-color: oColorsGetColorFor(foo, background, $options: ('default': 'black-5')); }\n///\n/// @param {list} $namelist\n/// @param {String} $property [all]\n/// @param {map} $options [('default': false)] - default: fallback value (false, null, or one of $o-colors-palette)\n@function oColorsGetColorFor($namelist, $property: all, $options: ('default': false)) {\n\t$default: map-get($options, 'default');\n\t$color: null;\n\n\t@each $name in $namelist {\n\t\t@if ($color == null) {\n\t\t\t$color: _oColorsGetUseCase($name, $property);\n\t\t}\n\t}\n\n\t@if ($color == null) {\n\t\t@if ($default or $default == null) {\n\t\t\t@return $default;\n\t\t} @else {\n\t\t\t$warn: \"Undefined use-case: can't resolve use case list '#{inspect($namelist)}'\";\n\n\t\t\t@if ($property) {\n\t\t\t\t$warn: $warn + \" for property '#{inspect($property)}'\";\n\t\t\t}\n\n\t\t\t@warn $warn;\n\t\t}\n\t}\n\n\t@return oColorsGetPaletteColor($color);\n}\n\n/// Returns a customised version of our shade-able colors defined in\n/// $o-colors-tints\n///\n/// @param {String} $color - the name of the color to be shaded\n/// @param {Number} $brightness - the brightness value of the new color\n@function oColorsGetTint($color, $brightness) {\n\t$hue: null;\n\t$saturation: null;\n\t$mix: null;\n\t$newcolor: null;\n\n\t@if not (map-has-key($o-colors-tints, $color)) {\n\t\t$color-tints: map-keys($o-colors-tints);\n\t\t@error \"It is not possible to use a tint of: #{$color}, please use one of: #{$color-tints} instead.\";\n\t}\n\n\t@if (map-has-key(map-get($o-colors-tints, $color), 'hue')) {\n\t\t$hue: map-get(map-get($o-colors-tints, $color), 'hue');\n\t\t$saturation: map-get(map-get($o-colors-tints, $color), 'saturation');\n\t\t$newcolor: _oColorsHSB($hue, $saturation, $brightness);\n\t} @else {\n\t\t$newcolor: oColorsMix($color, $percentage: $brightness);\n\t}\n\n\t@return $newcolor;\n}\n\n/// Returns a text color based on the background and\n/// an opacity percentage the color should appear at\n///\n/// @param {Color} $background - the hex color of the background the text will appear on\n/// @param {Number} $opacity [100] - the opacity percentage the text color should appear at\n@function oColorsGetTextColor($background, $opacity: 90) {\n\t$baseColor: _oColorsGetTextBase($background);\n\t$percentage: $opacity;\n\n\t$textColor: oColorsMix($baseColor, $background, $percentage);\n\t$testContrast: oColorsCheckContrast($textColor, $background, false);\n\n\t@if not $testContrast {\n\t\t@error \"The combination of #{$opacity}% #{$baseColor} on #{$background} does not pass WCAG guidelines for color contrast.\";\n\t} @else if $testContrast == 'large' {\n\t\t@warn \"When using this combination (#{$opacity}% #{$baseColor} on #{$background}) please use a font size larger than 18px.\";\n\t}\n\n\t@return $textColor;\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_mixins.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Add a custom palette color\n///\n/// @example scss\n///  @include oColorsSetColor('grey-tint20': #cccccc);\n///\n/// @param {String} $name - Name in the palette\n/// @param {color} $color - Color (rgb, hex, hsl…)\n@mixin oColorsSetColor($name, $color) {\n\t$newcolor: ($name: $color);\n\n\t$o-colors-palette: map-merge($o-colors-palette, $newcolor) !global;\n}\n\n/// Add a custom use case property\n///\n/// @example scss\n///  @include oColorsSetUseCase(email, text, 'grey-tint5');\n///\n/// @param {String} $usecase - Name of the use case\n/// @param {String} $property - Property it applies to\n/// @param {String} $color - One of $o-colors-palette\n@mixin oColorsSetUseCase($usecase, $property, $color) {\n\t$propmap: ($property: $color);\n\n\t// The use-case already exists,\n\t// combine its existing properties with the new one\n\t@if (map-has-key($o-colors-usecases, $usecase)) {\n\t\t$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);\n\t}\n\n\t$newmap: ($usecase: $propmap);\n\n\t// Add the use-case and its properties to the global use-case map\n\t$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;\n}\n\n/// Output property declarations for all defined properties for the specified use case\n///\n/// @example scss\n///  .my-thing {\n///  \t@include oColorsFor(custom-box box);\n///  }\n///  .my-other-thing {\n///  \t@include oColorsFor(custom-box box, background border);\n///  }\n///\n/// @param {String|list} $useCaseList\n/// @param {String|list} $propertyList [all]\n@mixin oColorsFor($useCaseList, $propertyList: all, $textLevel: 100) {\n\t// Fail silently when a use case doesn't exist,\n\t// taking advantage of how Sass treats the `null` keyword:\n\t//\n\t// \t\t$foo: null;\n\t// \t\tel { color: $foo; } // outputs nothing\n\t$args: (default: null);\n\n\t@if ($propertyList == 'all' or index($propertyList, 'background')) {\n\t\tbackground-color: oColorsGetColorFor($useCaseList, background, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'text')) {\n\t\t$useCaseTextColor: oColorsGetColorFor($useCaseList, text, $options: $args);\n\t\t$useCaseBackgroundColor: oColorsGetColorFor($useCaseList, background, $options: $args);\n\n\t\t// If no text color is defined but there is a background color for the use case\n\t\t@if $useCaseTextColor == null and $useCaseBackgroundColor != null {\n\t\t\t$useCaseTextColor: oColorsGetTextColor($useCaseBackgroundColor, $textLevel);\n\t\t}\n\n\t\tcolor: $useCaseTextColor;\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'border')) {\n\t\tborder-color: oColorsGetColorFor($useCaseList, border, $options: $args);\n\t}\n}\n\n/// Update the palette with calculated tints of\n/// each color from $o-colors-tints\n@mixin _oColorsSetPaletteTints {\n\t@each $color, $settings in $o-colors-tints {\n\t\t$hue: map-get($settings, 'hue');\n\t\t$tints: map-get($settings, 'tints');\n\n\t\t$saturation: null;\n\n\t\t@if map-has-key($settings, 'saturation') {\n\t\t\t$saturation: map-get($settings, 'saturation');\n\t\t}\n\n\t\t@if $tints != null {\n\t\t\t@each $value in $tints {\n\t\t\t\t$name: \"#{$color}-#{$value}\";\n\t\t\t\t$tint: null;\n\n\t\t\t\t@if $saturation == null {\n\t\t\t\t\t$tint: oColorsMix($color, $percentage: $value);\n\t\t\t\t} @else {\n\t\t\t\t\t$tint: _oColorsHSB($hue, $saturation, $value);\n\t\t\t\t}\n\n\t\t\t\t@include oColorsSetColor($name, $tint);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Output all palette colors as CSS Variables\n@mixin _oColorsCSSVariables {\n\t:root {\n\t\t@each $name, $hex in $o-colors-palette {\n\t\t\t#{--o-colors-}#{$name}: $hex;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_palette.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n\n/// color palette\n///\n/// These are the colors that make up the FT palette.\n/// We don't use these colors directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a color name and a color code,\n/// and is finished with a comma:\n///\n/// \t<color name>:   <color code>,\n///\n/// The color name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the color name and the color code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// non-color css values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// primary palette\n\t'paper':                 #fff1e5,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\n\t'claret':                #990f3d,\n\t'oxford':                #0f5499,\n\t'teal':                  #00757f,\n\n\t'wheat':                 #f2dfce,\n\t'sky':                   #cce6ff,\n\t'slate':                 #262a33,\n\n\t'velvet':                #593380,\n\t'mandarin':              #ff8833,\n\t'lemon':                 #ffec1a,\n\n\t'candy':                 #ff7faa,\n\t'wasabi':                #96cc28,\n\n\t'jade':                  #00b359,\n\t'crimson':               #cc0000,\n\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n), $o-colors-palette);\n\n$o-colors-tints: (\n\t'black': (\n\t\ttints: (5, 10, 20, 30, 40, 50, 60, 70, 80, 90),\n\t),\n\t'white': (\n\t\ttints: (10, 20, 40, 60, 80),\n\t),\n\t'claret': (\n\t\thue: 340,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'oxford': (\n\t\thue: 210,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'teal': (\n\t\thue: 185,\n\t\tsaturation: 90,\n\t\ttints: (20, 30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'wheat': (\n\t\thue: 28,\n\t\tsaturation: 15,\n\t),\n\t'sky': (\n\t\thue: 210,\n\t\tsaturation: 20,\n\t),\n\t'slate': (\n\t\thue: 220,\n\t\tsaturation: 20,\n\t),\n\t'velvet': (\n\t\thue: 270,\n\t\tsaturation: 60,\n\t),\n\t'mandarin': (\n\t\thue: 25,\n\t\tsaturation: 80,\n\t),\n\t'lemon': (\n\t\thue: 55,\n\t\tsaturation: 90,\n\t),\n\t'candy': (\n\t\thue: 340,\n\t\tsaturation: 50,\n\t),\n\t'wasabi': (\n\t\thue: 80,\n\t\tsaturation: 80,\n\t),\n\t'jade': (\n\t\thue: 150,\n\t\tsaturation: 100,\n\t),\n\t'crimson': (\n\t\thue: 360,\n\t\tsaturation: 100,\n\t)\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_use-cases.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// color use cases\n///\n/// These mappings define what we use our colors for.\n///\n/// Use case:           Must be a single word comprising just letters, numbers, and dashes.\n/// Properties:         A Sass map of properties (must be 'border', 'text', 'background', or 'all')\n///                     against palette colors (must be an exact match for a name of a color defined\n///                     in palette.scss).\n///\n/// Special properties: You can use the following special properties to mark use cases:\n///\n///                     _deprecated: <msg>  Emits <msg> as a warning if referenced, but still works\n///\n/// @type map\n$o-colors-usecases: map-merge((\n\n//\t<use case>                <properties>\n\n\tpage:                     (background: 'paper'),\n\tbox:                      (background: 'wheat'),\n\tlink:                     (text: 'teal'),\n\tlink-hover:               (text: 'black-70'),\n\tlink-title:               (text: 'black-80'),\n\tlink-title-hover:         (text: 'black-70'),\n\ttag-link:                 (text: 'claret'),\n\ttag-link-hover:           (text: 'claret-30'),\n\topinion-tag-link:         (text: 'oxford'),\n\topinion-tag-link-hover:   (text: 'oxford-30'),\n\ttitle:                    (text: 'black'),\n\tbody:                     (text: 'black-80'),\n\tmuted:                    (text: 'black-20'),\n\topinion:                  (background: 'sky'),\n\thero:                     (background: 'wheat'),\n\thero-opinion:             (background: 'oxford'),\n\thero-highlight:           (background: 'claret'),\n\n\t// Section colors\n\tsection-life-arts:        (all: 'velvet'),\n\tsection-life-arts-alt:    (all: 'candy'),\n\tsection-magazine:         (all: 'oxford'),\n\tsection-magazine-alt:     (all: 'sky'),\n\tsection-house-home:       (all: 'jade'),\n\tsection-house-home-alt:   (all: 'wasabi'),\n\tsection-money:            (all: 'crimson'),\n\tsection-money-alt:        (all: 'white'),\n\n), $o-colors-usecases);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_variables.scss",
      "contents": "$o-colors-is-silent: true !default;\n\n$o-colors-palette: () !default;\n$o-colors-usecases: () !default;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_a11y.scss",
      "contents": "/// Return either white or black for the text base\n/// depending on the background color\n///\n/// @param {String} $color - the name of the background color being used\n@function _oColorsGetTextBase($color) {\n\t@if oColorsColorBrightness($color) < 65% {\n\t\t@return 'white';\n\t} @else {\n\t\t@return 'black';\n\t}\n}\n\n/// Checks the contrast ratio and returns the WCAG\n/// rating, either AAA, AA, or AA18 meaning text should\n/// be at least 18px\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n@function oColorsGetWCAGRating($col1, $col2) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\t$wcag-rating: 'fail';\n\n\t@if $ratio >= 7 {\n\t\t$wcag-rating: 'AAA';\n\t} @else if $ratio >= 4.5 {\n\t\t$wcag-rating: 'AA';\n\t} @else if $ratio >= 3 {\n\t\t$wcag-rating: 'AA18';\n\t}\n\n\t@return $wcag-rating;\n}\n\n/// Checks the constrast of two colors and reports based on\n/// WCAG guidelines for color contrast\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// @param {Boolean} $warnings - whether this function should throw warnings/errors or just return\n@function oColorsCheckContrast($col1, $col2, $warnings: true) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\n\t@if $ratio >= 4.5 {\n\t\t@return 'pass';\n\t} @else if $ratio >= 3 {\n\t\t@if $warnings { @warn \"Caution: When using the combination of #{$col1} with #{$col2}, text should be larger than 18px to pass WCAG color contrast guidelines.\"; }\n\t\t@return 'large';\n\t}\n\n\t@if $warnings {\n\t\t@error \"This combination of #{$col1} with #{$col2} does not pass WCAG color contrast guidelines.\";\n\t}\n\n\t@return false;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_color.scss",
      "contents": "/// Returns the web-safe HSLA color based on HSB/HSV values\n///\n/// @access private\n///\n/// @param {Number} $hue - number between 0-360\n/// @param {Number} $saturation - number between 0-100\n/// @param {Number} $brigthness - number between 0-100\n/// @param {Number} $alpha [1] - number between 0-1\n@function _oColorsHSB($hue, $saturation, $brightness, $alpha: 1) {\n\t@if $brightness == 0 {\n\t\t@return hsla(0, 0, 0, $alpha);\n\t} @else {\n\t\t$hsl-luminance: ($brightness/2) * (2 - ($saturation/100));\n\t\t$hsl-saturation: ($brightness * $saturation) / if($hsl-luminance < 50, $hsl-luminance * 2, 200 - $hsl-luminance * 2);\n\n\t\t@return hsla($hue, $hsl-saturation, $hsl-luminance, $alpha);\n\t}\n}\n\n/// Work out the brightness value in % of a color\n///\n/// @param {Color} $color - color value to get brightness from\n/// From: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function oColorsColorBrightness($color) {\n\t$red-magic-number: 241;\n\t$green-magic-number: 691;\n\t$blue-magic-number: 68;\n\n\t$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;\n\n\t// Extract color components\n\t$red-component: red($color);\n\t$green-component: green($color);\n\t$blue-component: blue($color);\n\n\t// Calculate a brightness value in 3d color space between 0 and 255\n\t$number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * $blue-component * $blue-magic-number)) / $brightness-divisor);\n\n\t// Convert to percentage and return\n\t@return 100% * ($number / 255);\n}\n\n/// Returns the luminance of `$color` as a float (between 0 and 1)\n/// 1 is pure white, 0 is pure black\n/// @param {Color} $color - Color\n/// @return {Number}\n/// From: https://css-tricks.com/snippets/sass/luminance-color-function/\n@function oColorsColorLuminance($color) {\n\t$colors: (\n\t\t'red': red($color),\n\t\t'green': green($color),\n\t\t'blue': blue($color)\n\t);\n\n\t@each $name, $value in $colors {\n\t\t$adjusted: 0;\n\t\t$value: $value / 255;\n\n\t\t@if $value < 0.03928 {\n\t\t\t$value: $value / 12.92;\n\t\t} @else {\n\t\t\t$value: ($value + 0.055) / 1.055;\n\t\t\t$value: pow($value, 2.4);\n\t\t}\n\n\t\t$colors: map-merge($colors, ($name: $value));\n\t}\n\n\t@return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) + (map-get($colors, 'blue') * 0.0722);\n}\n\n/// Calculate the contrast ratio between two colors\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// Based on the JS in https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/contrast-ratio.js\n@function oColorsGetContrastRatio($col1, $col2) {\n\t$l1: oColorsColorLuminance($col1) + 0.05;\n\t$l2: oColorsColorLuminance($col2) + 0.05;\n\n\t$ratio: $l1 / $l2;\n\n\t@if $l2 > $l1 {\n\t\t$ratio: 1 / $ratio;\n\t}\n\n\t$ratio: (round($ratio*10)/10);\n\n\t@return $ratio;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_maths.scss",
      "contents": "// Square root maths function\n//\n// @param {Number} $root - Number to find the square root of\n// Code from: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function sqrt($root) {\n    $x0: 1;\n    $x1: $x0;\n\n    @for $idx from 1 through 10 {\n        $x1: $x0 - ($x0 * $x0 - abs($root)) / (2 * $x0);\n        $x0: $x1;\n    }\n\n    @return $x1;\n}\n\n/// Power of maths function\n///\n/// @param {Number} $number - Number\n/// @param {Number} $exponent - Exponent\n/// From: https://css-tricks.com/snippets/sass/power-function/\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $idx from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $idx from 1 through -$exponent {\n      $value: $value / $number;\n    }\n  }\n\n  @return $value;\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/test.scss",
      "contents": "$o-colors-is-silent: true;\n@import '../main';\n\n// Undefined use cases should return `null`.\n// nb: in Sass, `property: null` outputs nothing.\n.test-undefined-use-case-name {\n\tcolor: oColorsGetColorFor(undefined-use-case-name);\n\tbackground: oColorsGetColorFor(undefined-use-case-name, background);\n}\n\n// Set a new colour\n@include oColorsSetColor('grey-tint20', #cccccc);\n\n// Set a use case for this new colour\n@include oColorsSetUseCase(email, text, 'grey-tint20');\n\n// Include the custom use-case\n.test-custom-use-case {\n\t@include oColorsFor(email);\n}\n\n// Override an existing use case\n@include oColorsSetUseCase(link, text, 'grey-tint20');\n.test-override-existing-use-case {\n\tcolor: oColorsGetColorFor(link, text);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/travis.rb",
      "contents": "#!/usr/bin/env ruby\n# Encoding: utf-8\nrequire 'fileutils'\nrequire 'open3'\n\n# squish method borrowed from Rails that removes newlines and extra spaces\nclass String\n\tdef squish\n\t\tstrip.gsub /\\s+/, ' '\n\tend\nend\n\n# Prepare build test folder\nFileUtils.mkdir_p \"test/output\"\n\n# Attempting to use an undefined color generates a warning\nstdout, stderr, status = Open3.capture3 \"node-sass test/test.scss test/output/test.css --output-style compressed\"\nputs \"Test: using undefined colors don't throw fatal errors…\"\nraise \"Using an undefined color shouldn't fail build\" unless status.success?\nraise \"Using an undefined color should throw warnings\" unless (stderr.squish.include? \"Undefined use-case\" and stderr.squish.include? \"Color name 'null' is not defined in the palette\")\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: custom colors and use cases are registered correctly…\"\nraise \"Using an undefined color should not affect output\" if File.open(\"test/output/test.css\").read.squish.include? \"test-undefined-use-case-name\"\nraise \"Using a custom use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \"test-custom-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: overriding existing use cases…\"\nraise \"Overriding an existing use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \".test-override-existing-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nFile.delete('test/output/test.css')\n\nFileUtils.rmdir \"test/output\"\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/test.scss",
      "contents": "$o-colors-is-silent: true;\n@import '../main';\n\n// Undefined use cases should return `null`.\n// nb: in Sass, `property: null` outputs nothing.\n.test-undefined-use-case-name {\n\tcolor: oColorsGetColorFor(undefined-use-case-name);\n\tbackground: oColorsGetColorFor(undefined-use-case-name, background);\n}\n\n// Set a new colour\n@include oColorsSetColor('grey-tint20', #cccccc);\n\n// Set a use case for this new colour\n@include oColorsSetUseCase(email, text, 'grey-tint20');\n\n// Include the custom use-case\n.test-custom-use-case {\n\t@include oColorsFor(email);\n}\n\n// Override an existing use case\n@include oColorsSetUseCase(link, text, 'grey-tint20');\n.test-override-existing-use-case {\n\tcolor: oColorsGetColorFor(link, text);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/travis.rb",
      "contents": "#!/usr/bin/env ruby\n# Encoding: utf-8\nrequire 'fileutils'\nrequire 'open3'\n\n# squish method borrowed from Rails that removes newlines and extra spaces\nclass String\n\tdef squish\n\t\tstrip.gsub /\\s+/, ' '\n\tend\nend\n\n# Prepare build test folder\nFileUtils.mkdir_p \"test/output\"\n\n# Attempting to use an undefined color generates a warning\nstdout, stderr, status = Open3.capture3 \"node-sass test/test.scss test/output/test.css --output-style compressed\"\nputs \"Test: using undefined colors don't throw fatal errors…\"\nraise \"Using an undefined color shouldn't fail build\" unless status.success?\nraise \"Using an undefined color should throw warnings\" unless (stderr.squish.include? \"Undefined use-case\" and stderr.squish.include? \"Color name 'null' is not defined in the palette\")\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: custom colors and use cases are registered correctly…\"\nraise \"Using an undefined color should not affect output\" if File.open(\"test/output/test.css\").read.squish.include? \"test-undefined-use-case-name\"\nraise \"Using a custom use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \"test-custom-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: overriding existing use cases…\"\nraise \"Overriding an existing use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \".test-override-existing-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nFile.delete('test/output/test.css')\n\nFileUtils.rmdir \"test/output\"\n"
    }
  ]
}

exports['occ o-colors-4.0.0 o-colors-4.0.0 with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": "test\n.travis.yml.idea/\n.sass-cache/\nbuild/\ntest/output/\ndemos/local\n.DS_Store\nnode_modules/\ntest\n.travis.yml.idea/\n.sass-cache/\nbuild/\ntest/output/\ndemos/local\n.DS_Store\nnode_modules/\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-colors\n\nThe color palette for the FT masterbrand and sub-brand products.\n\n- [Usage](#usage)\n\t- [Sass](#sass)\n\t- [Markup](#markup)\n\t- [CSS Variables](#css-variables)\n- [Migration guide](#migration-guide)\n\t- [Upgrading from v3.x.x to v4.x.x](#upgrading-from-v3.x.x-to-v4.x.x)\n- [Contact](#contact)\n- [Licence](#licence)\n\n\n## Usage\n\nThere are a number of ways of using colors in your component or product. o-colors can be used via the [Build Service](https://www.ft.com/__origami/service/build/v2/), but it is recommended you import the Sass into your project to make use of the many Sass mixins and functions available.\n\n\n### Sass:\n\nAs with all Origami components, o-colors has a [silent mode](http://origami.ft.com/docs/syntax/scss/#silent-styles). To use its compiled CSS (rather than incorporating its mixins into your own Sass) set `$o-colors-is-silent : false;` in your Sass before you import the o-colors Sass:\n\n```scss\n$o-colors-is-silent: false;\n@import 'o-colors/main';\n```\n\n#### colors and accessibility\n\no-colors has been built to help bridge the gap between design and development by providing functionality to help create colors dynamically from a central palette as well as generate contrasted text colors based on an elements background color.\n\nYou can create tints of a color with the [`oColorsGetTint`](#tint-palette-colors) function. The function takes a palette color name and a brightness value (based on HSB color) to return a tint of the palette color.\n\nTo work with text colors the [`oColorsFor`](#use-case-mixin) mixin and [`oColorsGetTextColor`](#generated-text-colors) function will output a text color based on the background color, which will be a mix of either black or white with the background at the percentage requested. You can also mix two colors manually using the [`oColorsMix`](#mix-colors) function, providing two colors (either hex or palette color names) and a percentage at which to mix them.\n\nWhen working with the `oColorsFor` and `oColorsGetTextColor` features, the Sass will also automatically test the background color with the generated text color to see if the combination passes Web Content Accessibility Guidelines (WCAG). If the combination fails to pass at least WCAG AA you will see an error, if the combination passes AA but only at a larger font size (18px+), there will be a warning.\n\nFor manually testing color contrasts, you can use [Lea Verou's Contrast Ratio tool](http://leaverou.github.io/contrast-ratio/).\n\n#### Mixins and functions\n\no-colors has a number of mixins and functions for you to access the color palette in your project, here they are listed from the most to least preferred methods of working with o-colors.\n\n##### Use case mixin\n\nUse the `oColorsFor` mixin to add color-related properties to your ruleset:\n\n```scss\n.my-thing {\n\t@include oColorsFor(custom-box box, background text, 80);\n}\n```\n\nWill output:\n\n```css\n.my-thing {\n\tbackground-color: #f2dfce;\n\tcolor: #302d29; // black mixed with #f2dfce at 80%\n}\n```\n\nIt takes three arguments:\n\n* **Use case list**: a list of color use cases in order of preference.  The first one that is defined will be returned.\n* **Property list**: a list of all the properties you want the color applied to (background, border, text). They each correspond to `background-color`, `border-color` and `color`. Default is _all_ which includes all three properties.\n* **Text Level**: the opacity (1-100) for the text color derived from the background color of the use case. _If a text use case exists already, this will have no effect_.\n\nIn the example above, the background and text colors are set, preferably from the *custom-box* use case, and if either of those properties are not available for that use case, from the *box* use case. If the text use case is not set, the function will output a text color based on either black or white (depending on the brightness of the background) blended with the background color at the text level specified.\n\n### Use case function\n\nIf you need to use a color value as part of a more complex CSS rule, e.g. a border color for just one side, or a gradient background, use the `oColorsGetColorFor` function:\n\n```scss\n.my-thing {\n\tcolor: oColorsGetColorFor(article-life-arts-body article-body body, text, (default: blue));\n}\n```\n\nThe `oColorsGetColorFor` function takes three arguments:\n\n* **Use case list**: a list of color use cases in order of preference.  The first one that is defined for the specified property will be returned\n* **Property**: The property that you want to use the color for (background, border, or text).  Note that in contrast to the `oColorsFor` mixin, you must specify only one property.   Options are `background`, `border`, `text`, and `all`.\n* **Options**: A Sass *map* of additional options, all of which are optional, and may comprise:\n\t* **default**: The name of a palette color to return if none of the specified use cases are defined for the desired property.  May also be set to `null` or `undefined` to return that instead of the built in default (which is transparent)\n\n_This function will not generate a text color based on the use case like `oColorsFor` to get a text color based on a use case, use `oColorsGetTextColor`_\n\n### Palette color function\n\nIf you have a color use case not covered by those built into the colors module, consider defining a custom use case (see below) and then using the use case mixin or function described above.  However, if you need to use a particular color in one single place only, it may be worth using the `oColorsGetPaletteColor` function, which returns the CSS color for a palette color name:\n\n```scss\n.my-thing {\n\tcolor: oColorsGetPaletteColor('white-50');\n}\n```\n\n#### Generated text colors\n\n`oColorsGetTextColor` will return a text color based on the background and an opacity specified. The base of the text color is either black or white depending on the brightness of the background color and then mixed with the background at the specified opacity using `oColorsMix`.\n\n_Warning_: if the combination of background and text color created by the function would not pass WCAG AA level, o-colors will throw an error.\n\nUsage:\n\n```scss\n.o-colors-palette-teal {\n\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('teal'), 80);\n}\n```\n\nOutput:\n\n```css\n.o-colors-palette-teal {\n\tcolor: #cce3e5;\n}\n```\n\n#### Tint palette colors\n\n`oColorsGetTint` will return a tinted palette color based on a specified brightness.\nThe function takes the name of a palette color and a brightness value between 0-100.\n\nUsage:\n\n```scss\n.o-colors-tinted-color {\n\tbackground-color: oColorsGetTint('jade', 90);\n}\n```\n\nOutput:\n\n```css\n.o-colors-tinted-color {\n\tbackground-color: #177ee6;\n}\n```\n\n#### Mix colors\n\n`oColorsMix` will mix two colors based on a percentage. This gives the impression of the base color appearing at the percentage opacity over the background color. `oColorsMix` will accept either a color value or the name of an o-colors palette color as arguments.\n\nUsage:\n\n```scss\n.o-colors-palette-white {\n\tborder: 1px solid oColorsMix(black, white, 20);\n}\n```\n\nOutput:\n\n```css\n.o-colors-palette-white {\n\tborder: 1px solid #cccccc;\n}\n```\n\n## Defining custom use cases\n\nYou can add use cases for your particular component or product. This is done using the `oColorsSetUseCase` mixin:\n\n```scss\n@include oColorsSetUseCase(email, text, 'black-60');\n```\n\nIt takes three arguments:\n\n* **Use case**: your particular use case\n* **Property**: the property for which the color should be used for (background, border, or text)\n* **Color**: a color from the palette\n\nIf you are creating a use case for a component, you *must* namespace your use case name with the name of your component.\n\n### Markup\n\nWhen using the build service or importing the module with [silent mode](http://origami.ft.com/docs/syntax/scss/#silent-styles) set to false, o-colors provides you with helper classes to access the color palette. All palette colors are available as `.o-colors-palette-[NAME]` (which style just `background-color`) and use cases are available as `.o-colors-[USECASE]-[PROPERTY]` (which style the appropriate property):\n\n```html\n<p class=\"o-colors-body-text\">Article text</p>\n```\n\n### CSS Variables\n\nWhen using the build service or importing the module with silent mode set to false, o-colors will output all the palette colors as [CSS Variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables). These will use the format `--o-colors-{name}` (e.g. `--o-colors-black` and `--o-colors-teal`).\n\n\n## Migration guide\n\n### Upgrading from v3.x.x to v4.x.x\n\no-colors v4.x.x updates the entire palette of colors and adds a lot more functionality through new mixins and functions. The palette has been reduced from over 60 colors to a base palette of around 20 colors. These colors can be manipulated using new mixins to get a wide range of on brand colors accessibility compliant colors.\n\nTo migrate from v3.x.x to use v4.x.x you will need to update the palette colors you are requesting using `oColorsFor`, `oColorsSetUseCase`, and `oColorsGetPaletteColor`. To work out which color names you need to update, we've created a [table showing which colors should now be used in place of the old v3.x.x palette colors](migration-guide.md).\n\nNew use cases have been added for `opinion`, `hero` and `highlight` branding.\nThe `product-brand` use case has been removed.\n\n----\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-colors/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n\n----\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n    \"name\": \"o-colors\",\n    \"main\": [\"main.scss\"],\n    \"ignore\": [\n    \t\"test\",\n    \t\".travis.yml\"\n    ]\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "const wrappers = Array.from(document.querySelectorAll('.demo-wrapper'));\nconst demoColors = Array.from(document.querySelectorAll('.demo-color'));\nlet activeUseCase = '';\nlet clickToCopy = false;\n\nfunction oColorsDemoPalette() {\n\t// AO: To be used at a later stage to do overlay tints demos\n\t// const colorTints = ['white', 'black', 'claret', 'oxford', 'teal'];\n\n\t// Get the content property from the body element.\n\t// See demo.scss where a JSON-like string is added.\n\tconst elem = document.querySelector('body');\n\tlet CSSContent = window.getComputedStyle(elem, null).getPropertyValue(\"content\");\n\n\t// Remove backslashes and first and last characters (quotes)\n\t// from string, then convert to object.\n\tCSSContent = CSSContent.replace(/\\\\/gi, '').slice(1, -1);\n\tconst palette = JSON.parse(CSSContent);\n\n\tconst swatches = document.querySelectorAll('.swatch');\n\n\tfor (let swatch of swatches) {\n\t\tlet oColor = swatch.getAttribute('data-o-color');\n\t\tlet hexInput = swatch.querySelector('.hex');\n\t\thexInput.value = palette[oColor];\n\n\t\tif (clickToCopy) {\n\t\t\tswatch.addEventListener('click', oColorsCopy, false);\n\t\t}\n\t}\n\n\t// AO: To be used at a later stage to do overlay tints demos\n\t// populateTintDemos(palette, colorTints);\n}\n\n\nfunction oColorsUseCases() {\n\tconst useCaseElems = document.querySelectorAll('.use-cases');\n\n\tfor(let elem of useCaseElems) {\n\t\tconst useCases = elem.textContent.split(', ');\n\t\telem.innerHTML = '';\n\n\t\tfor (let use of useCases) {\n\t\t\tlet useClass = 'demo-color-for-' + use;\n\t\t\telem.parentNode.classList.add(useClass);\n\n\t\t\tlet button = document.createElement('button');\n\t\t\tbutton.textContent = use;\n\t\t\tbutton.className = 'o-buttons o-buttons--small o-buttons--uncolored';\n\t\t\tbutton.addEventListener('click', oColorsShowUseCases, false);\n\t\t\telem.appendChild(button);\n\t\t}\n\t};\n}\n\nfunction oColorsShowUseCases() {\n\tconst useCase = this.textContent;\n\tconst useCaseClass = '.demo-color-for-' + useCase;\n\n\tconst colors = document.querySelectorAll(useCaseClass);\n\n\tdemoColors.forEach((color) => {\n\t\tcolor.classList.remove('use-case-active');\n\t});\n\n\tif (activeUseCase === useCase) {\n\t\twrappers.forEach((wrapper) => {\n\t\t\twrapper.classList.remove('use-cases-fade-out');\n\t\t});\n\t\tactiveUseCase = '';\n\t\treturn;\n\t}\n\n\twrappers.forEach((wrapper) => {\n\t\twrapper.classList.add('use-cases-fade-out');\n\t});\n\n\tcolors.forEach((color) => {\n\t\tcolor.classList.add('use-case-active');\n\t});\n\n\tactiveUseCase = useCase;\n}\n\n/* AO: To be used at a later stage with overlay tint demos\nfunction populateTintDemos(palette, colors) {\n\tconst tints = colors.map((color) => {\n\t\tlet tintPalette = {'name': color};\n\t\ttintPalette.tints = Object.keys(palette).filter((palette_color) => {\n\t\t\treturn palette_color.startsWith(color + '-');\n\t\t});\n\t\treturn tintPalette;\n\t});\n\n\ttints.forEach((color) => {\n\t\tlet name = color.name;\n\t\tlet colorTints = color.tints;\n\t\tlet colorElem = document.querySelector('.swatch.o-colors-palette-' + name + ' .demo-tints-container');\n\n\t\tlet tintButton = document.querySelector('.demo-tint-button--' + name);\n\t\ttintButton.addEventListener('click', oColorsShowTints, false);\n\n\t\tcolorTints.forEach((tint) => {\n\t\t\tlet tintDiv = document.createElement('div');\n\t\t\ttintDiv.className = 'demo-tint o-colors-palette-' + tint;\n\t\t\tcolorElem.appendChild(tintDiv);\n\t\t});\n\t});\n}\n\nfunction oColorsShowTints() {\n\tlet tintContainer = this.closest('.demo-color').querySelector('.demo-tints-container');\n\ttintContainer.classList.toggle('show-me');\n}\n*/\n\nfunction oColorsCopy(event) {\n\t// find target element\n\tlet input = event.target.querySelector('.hex');\n\tlet parent = event.target;\n\tif (input === null && event.target.localName === 'input') {\n\t\tinput = event.target.parentNode.querySelector('.hex');\n\t\tparent = event.target.parentNode;\n\t}\n\n\t// is element selectable?\n\tif (input && input.select) {\n\t\t// select text\n\t\tinput.focus();\n\t\tinput.select();\n\n\t\ttry {\n\t\t\t// copy text\n\t\t\tdocument.execCommand('copy');\n\t\t\tinput.blur();\n\t\t\t// Setting the class changes the :after content to read \"Copied!\"\n\t\t\tparent.classList.add('copied');\n\t\t\t// Remove the class after 2s\n\t\t\tsetTimeout(function() {\n\t\t\t\tparent.classList.remove('copied');\n\t\t\t}, 2000);\n\n\t\t} catch (err) {}\n\t}\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\tlet randomInput = document.querySelectorAll('input')[0];\n\tif (randomInput.select && document.execCommand) {\n\t\tdocument.body.classList.add('o-copy-true');\n\t\tclickToCopy = true;\n\t}\n\n\toColorsDemoPalette();\n\toColorsUseCases();\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-colors-is-silent: false;\n\n// Import colors module\n@import '../../main';\n\n@function oColorsJSONifyMap($map) {\n\t$json: '{';\n\t$comma: false;\n\n\t@each $key, $value in $map {\n\t\t@if $comma {\n\t\t\t$json: '#{$json}, ';\n\t\t} @else {\n\t\t\t$comma: true;\n\t\t}\n\n\t\t$json: '#{$json}\"#{$key}\": \"#{$value}\"';\n\t}\n\n\t$json: '#{$json}}';\n\n\t@return $json;\n}\n\nbody {\n\tcontent: \"#{oColorsJSONifyMap($o-colors-palette)}\";\n\tbox-sizing: border-box;\n\tfont-family: Helvetica, Arial, sans-serif;\n\n\t*,\n\t*:before,\n\t*:after {\n\t\tbox-sizing: inherit;\n\t}\n}\n\n@each $name, $csscolor in $o-colors-palette {\n\t@if $csscolor != 'transparent' and $csscolor != 'inherit' {\n\t\t.o-colors-palette-#{$name} .hex,\n\t\t.o-colors-palette-#{$name}:after {\n\t\t\t// Text at 90% does not pass contrast tests so increase\n\t\t\t// the shade to pass\n\t\t\t@if $name == 'jade' {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 95);\n\t\t\t} @else {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 90);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.o-colors-palette-org-b2c {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c'), 90);\n\t}\n}\n\n.o-colors-palette-org-b2c-light {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c-light'), 90);\n\t}\n}\n\n.o-colors-palette-org-b2c-dark {\n\t&:after,\n\t.hex {\n\t\tcolor: oColorsGetTextColor(oColorsGetPaletteColor('org-b2c-dark'), 90);\n\t}\n}\n\n.container {\n\twidth: 100%;\n\tmax-width: 1100px;\n\tmargin: 0 auto;\n}\n\n.demo-wrapper {\n\twidth: 100%;\n\tdisplay: flex;\n\tmargin-left: -10px;\n\tmargin-right: -10px;\n\tjustify-content: flex-start;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-content: space-between;\n}\n\n.use-cases-fade-out .demo-color { opacity: 0.37; }\n.use-cases-fade-out .demo-color.use-case-active { opacity: 1; }\n\n.demo-color {\n\tflex: 0 0 30%;\n\tmargin: 0 10px 20px;\n\ttransition: opacity 0.3s ease-out;\n\n\t.o-buttons {\n\t\tmargin-right: 5px;\n\t\tcolor: oColorsMix(black, white, 80);\n\t\tborder-color: oColorsMix(black, white, 20);\n\t}\n\n\th3 {\n\t\tposition: relative;\n\t\tmargin: 0;\n\t\tpadding: 8px;\n\t\tfont-weight: normal;\n\t\tfont-size: 16px;\n\t\tline-height: 24px;\n\t\tborder: 1px solid oColorsMix(black, white, 20);\n\t\tborder-bottom: 0;\n\t}\n}\n\n.demo-tint-button {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\theight: 40px;\n\tpadding: 0 10px;\n\tbackground-color: oColorsGetPaletteColor('white');\n\tcursor: pointer;\n\tborder: 0;\n\tborder-left: 1px solid oColorsMix(black, white, 20);\n}\n\n.demo-tints-container {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-flow: row wrap;\n\tjustify-content: center;\n\talign-content: stretch;\n\ttransform: translateY(-100%);\n\ttransition: transform 0.3s ease-in;\n\n\t&.show-me {\n\t\ttransform: translateY(0);\n\t}\n\n\t.demo-tint {\n\t\tflex: 1 0 25%;\n\t\tcursor: pointer;\n\t}\n}\n\n.swatch {\n\tposition: relative;\n\toverflow: hidden;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-content: center;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\theight: 120px;\n\tmargin-bottom: 10px;\n\n\t&:after {\n\t\tposition: absolute;\n\t\tcontent: \"Click to copy\";\n\t\tbottom: 20px;\n\t\tdisplay: block;\n\t\topacity: 0;\n\t\ttransition: opacity 0.2s ease-in;\n\t}\n\n\t&.copied:after {\n\t\tcontent: \"Copied!\";\n\t}\n\n\t.o-copy-true &:hover:after {\n\t\topacity: 1;\n\t}\n\n\t&.o-colors-palette-white,\n\t&.o-colors-palette-paper {\n\t\tborder: 1px solid oColorsMix(black, white, 20);\n\t}\n\n\t.hex {\n\t\twidth: 100%;\n\t\theight: 120px;\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\ttext-transform: uppercase;\n\t\tborder: 0;\n\t\tbackground: transparent;\n\t\tfont-size: 18px;\n\t\tcursor: pointer;\n\t}\n}\n\n\n.demo-wrapper--tints {\n\tjustify-content: space-between;\n}\n\n.demo-tint-column {\n\tmargin: 0 5px;\n\tflex: 1 0;\n\n\th3 {\n\t\ttext-align: center;\n\t}\n\n\t.swatch--tint {\n\t\tmargin-bottom: 0;\n\t\theight: 100px;\n\t\tpadding-top: 0px;\n\t\tpadding-bottom: 30px;\n\n\t\tlabel {\n\t\t\twidth: 100%;\n\t\t\tpadding-left: 10px;\n\t\t\ttext-align: left;\n\t\t\tpadding-top: 10px;\n\t\t\tmargin-bottom: 5px;\n\t\t\tfont-size: 14px;\n\t\t}\n\n\t\t.hex {\n\t\t\tfont-size: 16px;\n\t\t}\n\n\t\t&:after {\n\t\t\tbottom: 15px;\n\t\t\tfont-size: 12px;\n\t\t}\n\t}\n}\n\n.my-thing {\n\t@include oColorsFor(custom-box box, background text, 80);\n}\n\n.o-colors-tinted-color {\n\tbackground-color: oColorsGetTint('oxford', 90);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "<div class=\"container\">\n\t{{#primary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Primary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label> {{#tints}}<button class=\"demo-tint-button demo-tint-button--{{name}}\">Tints</button>{{/tints}}</h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t\t{{#tints}}<div class=\"demo-tints-container\"></div>{{/tints}}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/primary}}\n\n\t{{#secondary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Secondary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/secondary}}\n\n\t{{#tertiary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tertiary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tertiary}}\n\n\t{{#b2c}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>B2C colors</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/b2c}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/palette.json",
      "contents": "{\n\t\"primary\" : {\n\t\t\"description\": \"color is a fundamental attribute of the FT visual language. Consistent use of the primary palette across the platform strengthens our brand by evoking familiarity and trust.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"paper\",\n\t\t\t\t\"tints\": false,\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"black\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds, buttons, icons\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"white\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds, buttons, icons\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"claret\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, border, backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"oxford\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"teal\",\n\t\t\t\t\"tints\": true,\n\t\t\t\t\"usage\": \"text, backgrounds, buttons, links\"\n\t\t\t}\n\t\t]\n\t},\n\t\"secondary\" : {\n\t\t\"description\": \"Secondary colors provide visual hierarchy to differentiate content and are brand identifiers of the FT.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"wheat\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"sky\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"slate\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"velvet\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"mandarin\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"lemon\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t}\n\t\t]\n\t},\n\t\"tertiary\" : {\n\t\t\"description\": \"Used sparingly, these colors provide contrast for highlighting and messaging.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"jade\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"crimson\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"candy\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"wasabi\",\n\t\t\t\t\"usage\": \"backgrounds, text\"\n\t\t\t}\n\t\t]\n\t},\n\t\"tints\" : {\n\t\t\"description\": \"Dynamic tinting of the primary palette can be used to produce a broad spectrum of lighter and darker variations for creating scale and depth to your designs.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"black\",\n\t\t\t\t\"tint-levels\": [5, 10, 20, 30, 40, 50, 60, 70, 80, 90]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"white\",\n\t\t\t\t\"tint-levels\": [10, 20, 40, 60, 80]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"claret\",\n\t\t\t\t\"tint-levels\": [30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"oxford\",\n\t\t\t\t\"tint-levels\": [30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"teal\",\n\t\t\t\t\"tint-levels\": [20, 30, 40, 50, 60, 70, 80, 90, 100]\n\t\t\t}\n\t\t]\n\t},\n\t\"b2c\" : {\n\t\t\"description\": \"These colors are specifically designed for use in B2C products.\",\n\t\t\"colors\": [\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c-dark\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"org-b2c-light\",\n\t\t\t\t\"usage\": \"backgrounds\"\n\t\t\t}\n\t\t]\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/palette.mustache",
      "contents": "<div class=\"container\">\n\t{{#primary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Primary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<label for=\"o-color-input-{{name}}\">{{name}}</label>\n\t\t\t\t\t\t{{! Button to show tints of the color in the swatch }}\n\t\t\t\t\t<!-- {{#tints}}<button class=\"demo-tint-button demo-tint-button--{{name}}\">Tints</button>{{/tints}} -->\n\t\t\t\t\t</h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t\t{{! Where the tints will display }}\n\t\t\t\t\t\t<!-- {{#tints}}<div class=\"demo-tints-container\"></div>{{/tints}} -->\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/primary}}\n\n\t{{#secondary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Secondary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/secondary}}\n\n\t{{#tertiary}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tertiary</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tertiary}}\n\n\t{{#b2c}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>B2C colors</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-color\">\n\t\t\t\t\t<h3><label for=\"o-color-input-{{name}}\">{{name}}</label></h3>\n\t\t\t\t\t<div class=\"swatch o-colors-palette-{{name}}\" data-o-color=\"{{name}}\">\n\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}\" value=\"\" readonly>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"use-cases\">{{usage}}</div>\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/b2c}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/tints.mustache",
      "contents": "<div class=\"container\">\n\t{{#tints}}\n\t\t<div class=\"demo-header\">\n\t\t\t<h2>Tinting</h2>\n\t\t\t<p>{{description}}</p>\n\t\t</div>\n\n\t\t<div class=\"demo-wrapper demo-wrapper--tints\">\n\t\t\t{{#colors}}\n\t\t\t\t<div class=\"demo-tint-column\">\n\t\t\t\t\t<h3>{{name}}</h3>\n\t\t\t\t\t{{#tint-levels}}\n\t\t\t\t\t\t<div class=\"swatch swatch--tint o-colors-palette-{{name}}-{{.}}\" data-o-color=\"{{name}}-{{.}}\">\n\t\t\t\t\t\t\t<label for=\"o-color-input-{{name}}-{{.}}\">{{name}}-{{.}}</label>\n\t\t\t\t\t\t\t<input type=\"text\" class=\"hex\" id=\"o-color-input-{{name}}-{{.}}\" value=\"\" readonly>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t{{/tint-levels}}\n\t\t\t\t</div>\n\t\t\t{{/colors}}\n\t\t</div>\n\t{{/tints}}\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/use-cases.mustache",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "designguidelines.md",
      "contents": "o-colors are a fundamental attribute of the FT visual language and provide brand consistency across all products.\n\n**The color palette is optimised to comply with WCAG 2.0 level AA with a minimum contrast ratio of 4.5:1.**\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_functions.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Return the CSS color for a palette color name\n///\n/// @param {String} $name\n@function oColorsGetPaletteColor($name) {\n\t@if (map-has-key($o-colors-palette, $name)) {\n\t\t@return map-get($o-colors-palette, $name);\n\t} @else {\n\t\t@warn \"Color name '#{inspect($name)}' is not defined in the palette\";\n\t\t@return null;\n\t}\n}\n\n/// Returns a color based on the background context and base color\n/// at the supplied percentage\n///\n/// @param {String} $background [paper] - palette name of background color\n/// @param {String} $color [black] - palette name of color\n/// @param {Number} $percentage [60] - percentage opacity of the color over the background\n@function oColorsMix($color: 'black', $background: 'paper', $percentage: 80) {\n\t$context: $background;\n\t$base: $color;\n\n\t@if type-of($background) != color {\n\t\t$context: oColorsGetPaletteColor($background);\n\t}\n\n\t@if type-of($color) != color {\n\t\t$base: oColorsGetPaletteColor($color);\n\t}\n\n\t@return mix($base, $context, $percentage);\n}\n\n/// Return the defined palette color name for a use case / property combination\n///\n/// @access private\n///\n/// @param {String} $usecase\n/// @param {String} $property - 'text', 'background', 'border' or 'all'\n@function _oColorsGetUseCase($usecase, $property) {\n\t@if (not map-has-key($o-colors-usecases, $usecase)) {\n\t\t@return null;\n\t}\n\n\t$props: map-get($o-colors-usecases, $usecase);\n\n\t$color: map-get($props, $property);\n\n\t@if ($color == null and $property != 'all') {\n\t\t$color: map-get($props, all);\n\t}\n\n\t@if (map-has-key($props, '_deprecated')) {\n\t\t@warn \"Color use case '#{inspect($usecase)}' is deprecated (property '#{inspect($property)}' was requested): #{inspect(map-get($props, '_deprecated'))}\";\n\t}\n\n\t@return $color;\n}\n\n/// Return the CSS color name of the first defined use case in a prioritised list for a use case / property combination\n///\n/// @example scss\n/// // Single use case:\n/// body { color: oColorsGetColorFor(page, text); }\n///\n/// // Use case with one or multiple fallbacks:\n/// // Use \"my-box\" color if available. If not, fall back to the \"box\" use case.\n/// .box { background-color: oColorsGetColorFor(my-box box, background); }\n///\n/// // No specific property:\n/// .money-wrapper { background-color: oColorsGetColorFor(section-money); }\n/// .money-headline { color: oColorsGetColorFor(section-money); }\n///\n/// // Assign a different fallback if the use case doesn't exist\n/// .foo { background-color: oColorsGetColorFor(foo, background, $options: ('default': 'black-5')); }\n///\n/// @param {list} $namelist\n/// @param {String} $property [all]\n/// @param {map} $options [('default': false)] - default: fallback value (false, null, or one of $o-colors-palette)\n@function oColorsGetColorFor($namelist, $property: all, $options: ('default': false)) {\n\t$default: map-get($options, 'default');\n\t$color: null;\n\n\t@each $name in $namelist {\n\t\t@if ($color == null) {\n\t\t\t$color: _oColorsGetUseCase($name, $property);\n\t\t}\n\t}\n\n\t@if ($color == null) {\n\t\t@if ($default or $default == null) {\n\t\t\t@return $default;\n\t\t} @else {\n\t\t\t$warn: \"Undefined use-case: can't resolve use case list '#{inspect($namelist)}'\";\n\n\t\t\t@if ($property) {\n\t\t\t\t$warn: $warn + \" for property '#{inspect($property)}'\";\n\t\t\t}\n\n\t\t\t@warn $warn;\n\t\t}\n\t}\n\n\t@return oColorsGetPaletteColor($color);\n}\n\n/// Returns a customised version of our shade-able colors defined in\n/// $o-colors-tints\n///\n/// @param {String} $color - the name of the color to be shaded\n/// @param {Number} $brightness - the brightness value of the new color\n@function oColorsGetTint($color, $brightness) {\n\t$hue: null;\n\t$saturation: null;\n\t$mix: null;\n\t$newcolor: null;\n\n\t@if not (map-has-key($o-colors-tints, $color)) {\n\t\t$color-tints: map-keys($o-colors-tints);\n\t\t@error \"It is not possible to use a tint of: #{$color}, please use one of: #{$color-tints} instead.\";\n\t}\n\n\t@if (map-has-key(map-get($o-colors-tints, $color), 'hue')) {\n\t\t$hue: map-get(map-get($o-colors-tints, $color), 'hue');\n\t\t$saturation: map-get(map-get($o-colors-tints, $color), 'saturation');\n\t\t$newcolor: _oColorsHSB($hue, $saturation, $brightness);\n\t} @else {\n\t\t$newcolor: oColorsMix($color, $percentage: $brightness);\n\t}\n\n\t@return $newcolor;\n}\n\n/// Returns a text color based on the background and\n/// an opacity percentage the color should appear at\n///\n/// @param {Color} $background - the hex color of the background the text will appear on\n/// @param {Number} $opacity [100] - the opacity percentage the text color should appear at\n@function oColorsGetTextColor($background, $opacity: 90) {\n\t$baseColor: _oColorsGetTextBase($background);\n\t$percentage: $opacity;\n\n\t$textColor: oColorsMix($baseColor, $background, $percentage);\n\t$testContrast: oColorsCheckContrast($textColor, $background, false);\n\n\t@if not $testContrast {\n\t\t@error \"The combination of #{$opacity}% #{$baseColor} on #{$background} does not pass WCAG guidelines for color contrast.\";\n\t} @else if $testContrast == 'large' {\n\t\t@warn \"When using this combination (#{$opacity}% #{$baseColor} on #{$background}) please use a font size larger than 18px.\";\n\t}\n\n\t@return $textColor;\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_mixins.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Add a custom palette color\n///\n/// @example scss\n///  @include oColorsSetColor('grey-tint20': #cccccc);\n///\n/// @param {String} $name - Name in the palette\n/// @param {color} $color - Color (rgb, hex, hsl…)\n@mixin oColorsSetColor($name, $color) {\n\t$newcolor: ($name: $color);\n\n\t$o-colors-palette: map-merge($o-colors-palette, $newcolor) !global;\n}\n\n/// Add a custom use case property\n///\n/// @example scss\n///  @include oColorsSetUseCase(email, text, 'grey-tint5');\n///\n/// @param {String} $usecase - Name of the use case\n/// @param {String} $property - Property it applies to\n/// @param {String} $color - One of $o-colors-palette\n@mixin oColorsSetUseCase($usecase, $property, $color) {\n\t$propmap: ($property: $color);\n\n\t// The use-case already exists,\n\t// combine its existing properties with the new one\n\t@if (map-has-key($o-colors-usecases, $usecase)) {\n\t\t$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);\n\t}\n\n\t$newmap: ($usecase: $propmap);\n\n\t// Add the use-case and its properties to the global use-case map\n\t$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;\n}\n\n/// Output property declarations for all defined properties for the specified use case\n///\n/// @example scss\n///  .my-thing {\n///  \t@include oColorsFor(custom-box box);\n///  }\n///  .my-other-thing {\n///  \t@include oColorsFor(custom-box box, background border);\n///  }\n///\n/// @param {String|list} $useCaseList\n/// @param {String|list} $propertyList [all]\n@mixin oColorsFor($useCaseList, $propertyList: all, $textLevel: 100) {\n\t// Fail silently when a use case doesn't exist,\n\t// taking advantage of how Sass treats the `null` keyword:\n\t//\n\t// \t\t$foo: null;\n\t// \t\tel { color: $foo; } // outputs nothing\n\t$args: (default: null);\n\n\t@if ($propertyList == 'all' or index($propertyList, 'background')) {\n\t\tbackground-color: oColorsGetColorFor($useCaseList, background, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'text')) {\n\t\t$useCaseTextColor: oColorsGetColorFor($useCaseList, text, $options: $args);\n\t\t$useCaseBackgroundColor: oColorsGetColorFor($useCaseList, background, $options: $args);\n\n\t\t// If no text color is defined but there is a background color for the use case\n\t\t@if $useCaseTextColor == null and $useCaseBackgroundColor != null {\n\t\t\t$useCaseTextColor: oColorsGetTextColor($useCaseBackgroundColor, $textLevel);\n\t\t}\n\n\t\tcolor: $useCaseTextColor;\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'border')) {\n\t\tborder-color: oColorsGetColorFor($useCaseList, border, $options: $args);\n\t}\n}\n\n/// Update the palette with calculated tints of\n/// each color from $o-colors-tints\n@mixin _oColorsSetPaletteTints {\n\t@each $color, $settings in $o-colors-tints {\n\t\t$hue: map-get($settings, 'hue');\n\t\t$tints: map-get($settings, 'tints');\n\n\t\t$saturation: null;\n\n\t\t@if map-has-key($settings, 'saturation') {\n\t\t\t$saturation: map-get($settings, 'saturation');\n\t\t}\n\n\t\t@if $tints != null {\n\t\t\t@each $value in $tints {\n\t\t\t\t$name: \"#{$color}-#{$value}\";\n\t\t\t\t$tint: null;\n\n\t\t\t\t@if $saturation == null {\n\t\t\t\t\t$tint: oColorsMix($color, $percentage: $value);\n\t\t\t\t} @else {\n\t\t\t\t\t$tint: _oColorsHSB($hue, $saturation, $value);\n\t\t\t\t}\n\n\t\t\t\t@include oColorsSetColor($name, $tint);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Output all palette colors as CSS Variables\n@mixin _oColorsCSSVariables {\n\t:root {\n\t\t@each $name, $hex in $o-colors-palette {\n\t\t\t#{--o-colors-}#{$name}: $hex;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_palette.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n\n/// color palette\n///\n/// These are the colors that make up the FT palette.\n/// We don't use these colors directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a color name and a color code,\n/// and is finished with a comma:\n///\n/// \t<color name>:   <color code>,\n///\n/// The color name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the color name and the color code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// non-color css values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// primary palette\n\t'paper':                 #fff1e5,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\n\t'claret':                #990f3d,\n\t'oxford':                #0f5499,\n\t'teal':                  #00757f,\n\n\t'wheat':                 #f2dfce,\n\t'sky':                   #cce6ff,\n\t'slate':                 #262a33,\n\n\t'velvet':                #593380,\n\t'mandarin':              #ff8833,\n\t'lemon':                 #ffec1a,\n\n\t'candy':                 #ff7faa,\n\t'wasabi':                #96cc28,\n\n\t'jade':                  #00b359,\n\t'crimson':               #cc0000,\n\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n), $o-colors-palette);\n\n$o-colors-tints: (\n\t'black': (\n\t\ttints: (5, 10, 20, 30, 40, 50, 60, 70, 80, 90),\n\t),\n\t'white': (\n\t\ttints: (10, 20, 40, 60, 80),\n\t),\n\t'claret': (\n\t\thue: 340,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'oxford': (\n\t\thue: 210,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'teal': (\n\t\thue: 185,\n\t\tsaturation: 90,\n\t\ttints: (20, 30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'wheat': (\n\t\thue: 28,\n\t\tsaturation: 15,\n\t),\n\t'sky': (\n\t\thue: 210,\n\t\tsaturation: 20,\n\t),\n\t'slate': (\n\t\thue: 220,\n\t\tsaturation: 20,\n\t),\n\t'velvet': (\n\t\thue: 270,\n\t\tsaturation: 60,\n\t),\n\t'mandarin': (\n\t\thue: 25,\n\t\tsaturation: 80,\n\t),\n\t'lemon': (\n\t\thue: 55,\n\t\tsaturation: 90,\n\t),\n\t'candy': (\n\t\thue: 340,\n\t\tsaturation: 50,\n\t),\n\t'wasabi': (\n\t\thue: 80,\n\t\tsaturation: 80,\n\t),\n\t'jade': (\n\t\thue: 150,\n\t\tsaturation: 100,\n\t),\n\t'crimson': (\n\t\thue: 360,\n\t\tsaturation: 100,\n\t)\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_use-cases.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// color use cases\n///\n/// These mappings define what we use our colors for.\n///\n/// Use case:           Must be a single word comprising just letters, numbers, and dashes.\n/// Properties:         A Sass map of properties (must be 'border', 'text', 'background', or 'all')\n///                     against palette colors (must be an exact match for a name of a color defined\n///                     in palette.scss).\n///\n/// Special properties: You can use the following special properties to mark use cases:\n///\n///                     _deprecated: <msg>  Emits <msg> as a warning if referenced, but still works\n///\n/// @type map\n$o-colors-usecases: map-merge((\n\n//\t<use case>                <properties>\n\n\tpage:                     (background: 'paper'),\n\tbox:                      (background: 'wheat'),\n\tlink:                     (text: 'teal'),\n\tlink-hover:               (text: 'black-70'),\n\tlink-title:               (text: 'black-80'),\n\tlink-title-hover:         (text: 'black-70'),\n\ttag-link:                 (text: 'claret'),\n\ttag-link-hover:           (text: 'claret-30'),\n\topinion-tag-link:         (text: 'oxford'),\n\topinion-tag-link-hover:   (text: 'oxford-30'),\n\ttitle:                    (text: 'black'),\n\tbody:                     (text: 'black-80'),\n\tmuted:                    (text: 'black-20'),\n\topinion:                  (background: 'sky'),\n\thero:                     (background: 'wheat'),\n\thero-opinion:             (background: 'oxford'),\n\thero-highlight:           (background: 'claret'),\n\n\t// Section colors\n\tsection-life-arts:        (all: 'velvet'),\n\tsection-life-arts-alt:    (all: 'candy'),\n\tsection-magazine:         (all: 'oxford'),\n\tsection-magazine-alt:     (all: 'sky'),\n\tsection-house-home:       (all: 'jade'),\n\tsection-house-home-alt:   (all: 'wasabi'),\n\tsection-money:            (all: 'crimson'),\n\tsection-money-alt:        (all: 'white'),\n\n), $o-colors-usecases);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_variables.scss",
      "contents": "$o-colors-is-silent: true !default;\n\n$o-colors-palette: () !default;\n$o-colors-usecases: () !default;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_a11y.scss",
      "contents": "/// Return either white or black for the text base\n/// depending on the background color\n///\n/// @param {String} $color - the name of the background color being used\n@function _oColorsGetTextBase($color) {\n\t@if oColorsColorBrightness($color) < 65% {\n\t\t@return 'white';\n\t} @else {\n\t\t@return 'black';\n\t}\n}\n\n/// Checks the contrast ratio and returns the WCAG\n/// rating, either AAA, AA, or AA18 meaning text should\n/// be at least 18px\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n@function oColorsGetWCAGRating($col1, $col2) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\t$wcag-rating: 'fail';\n\n\t@if $ratio >= 7 {\n\t\t$wcag-rating: 'AAA';\n\t} @else if $ratio >= 4.5 {\n\t\t$wcag-rating: 'AA';\n\t} @else if $ratio >= 3 {\n\t\t$wcag-rating: 'AA18';\n\t}\n\n\t@return $wcag-rating;\n}\n\n/// Checks the constrast of two colors and reports based on\n/// WCAG guidelines for color contrast\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// @param {Boolean} $warnings - whether this function should throw warnings/errors or just return\n@function oColorsCheckContrast($col1, $col2, $warnings: true) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\n\t@if $ratio >= 4.5 {\n\t\t@return 'pass';\n\t} @else if $ratio >= 3 {\n\t\t@if $warnings { @warn \"Caution: When using the combination of #{$col1} with #{$col2}, text should be larger than 18px to pass WCAG color contrast guidelines.\"; }\n\t\t@return 'large';\n\t}\n\n\t@if $warnings {\n\t\t@error \"This combination of #{$col1} with #{$col2} does not pass WCAG color contrast guidelines.\";\n\t}\n\n\t@return false;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_color.scss",
      "contents": "/// Returns the web-safe HSLA color based on HSB/HSV values\n///\n/// @access private\n///\n/// @param {Number} $hue - number between 0-360\n/// @param {Number} $saturation - number between 0-100\n/// @param {Number} $brigthness - number between 0-100\n/// @param {Number} $alpha [1] - number between 0-1\n@function _oColorsHSB($hue, $saturation, $brightness, $alpha: 1) {\n\t@if $brightness == 0 {\n\t\t@return hsla(0, 0, 0, $alpha);\n\t} @else {\n\t\t$hsl-luminance: ($brightness/2) * (2 - ($saturation/100));\n\t\t$hsl-saturation: ($brightness * $saturation) / if($hsl-luminance < 50, $hsl-luminance * 2, 200 - $hsl-luminance * 2);\n\n\t\t@return hsla($hue, $hsl-saturation, $hsl-luminance, $alpha);\n\t}\n}\n\n/// Work out the brightness value in % of a color\n///\n/// @param {Color} $color - color value to get brightness from\n/// From: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function oColorsColorBrightness($color) {\n\t$red-magic-number: 241;\n\t$green-magic-number: 691;\n\t$blue-magic-number: 68;\n\n\t$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;\n\n\t// Extract color components\n\t$red-component: red($color);\n\t$green-component: green($color);\n\t$blue-component: blue($color);\n\n\t// Calculate a brightness value in 3d color space between 0 and 255\n\t$number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * $blue-component * $blue-magic-number)) / $brightness-divisor);\n\n\t// Convert to percentage and return\n\t@return 100% * ($number / 255);\n}\n\n/// Returns the luminance of `$color` as a float (between 0 and 1)\n/// 1 is pure white, 0 is pure black\n/// @param {Color} $color - Color\n/// @return {Number}\n/// From: https://css-tricks.com/snippets/sass/luminance-color-function/\n@function oColorsColorLuminance($color) {\n\t$colors: (\n\t\t'red': red($color),\n\t\t'green': green($color),\n\t\t'blue': blue($color)\n\t);\n\n\t@each $name, $value in $colors {\n\t\t$adjusted: 0;\n\t\t$value: $value / 255;\n\n\t\t@if $value < 0.03928 {\n\t\t\t$value: $value / 12.92;\n\t\t} @else {\n\t\t\t$value: ($value + 0.055) / 1.055;\n\t\t\t$value: pow($value, 2.4);\n\t\t}\n\n\t\t$colors: map-merge($colors, ($name: $value));\n\t}\n\n\t@return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) + (map-get($colors, 'blue') * 0.0722);\n}\n\n/// Calculate the contrast ratio between two colors\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// Based on the JS in https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/contrast-ratio.js\n@function oColorsGetContrastRatio($col1, $col2) {\n\t$l1: oColorsColorLuminance($col1) + 0.05;\n\t$l2: oColorsColorLuminance($col2) + 0.05;\n\n\t$ratio: $l1 / $l2;\n\n\t@if $l2 > $l1 {\n\t\t$ratio: 1 / $ratio;\n\t}\n\n\t$ratio: (round($ratio*10)/10);\n\n\t@return $ratio;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/tools/_maths.scss",
      "contents": "// Square root maths function\n//\n// @param {Number} $root - Number to find the square root of\n// Code from: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function sqrt($root) {\n    $x0: 1;\n    $x1: $x0;\n\n    @for $idx from 1 through 10 {\n        $x1: $x0 - ($x0 * $x0 - abs($root)) / (2 * $x0);\n        $x0: $x1;\n    }\n\n    @return $x1;\n}\n\n/// Power of maths function\n///\n/// @param {Number} $number - Number\n/// @param {Number} $exponent - Exponent\n/// From: https://css-tricks.com/snippets/sass/power-function/\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $idx from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $idx from 1 through -$exponent {\n      $value: $value / $number;\n    }\n  }\n\n  @return $value;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "@import 'src/scss/variables';\n@import 'src/scss/tools/color';\n@import 'src/scss/tools/maths';\n@import 'src/scss/tools/a11y';\n\n@import 'src/scss/palette';\n@import 'src/scss/use-cases';\n\n@import 'src/scss/functions';\n@import 'src/scss/mixins';\n\n// Set the tint palette colors programatically\n@include _oColorsSetPaletteTints;\n\n// If noisy, output helper classes for use cases and palette colors\n@if ($o-colors-is-silent == false) {\n\t@include _oColorsCSSVariables;\n\n\t@each $usecase, $props in $o-colors-usecases {\n\t\t@each $prop, $color in $props {\n\t\t\t#{'.o-colors-' + $usecase + '-' + $prop} {\n\t\t\t\t@if $prop == text or $prop == all {\n\t\t\t\t\tcolor: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t\t@if $prop == background or $prop == all {\n\t\t\t\t\tbackground-color: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t\t@if $prop == border or $prop == all {\n\t\t\t\t\tborder-color: oColorsGetPaletteColor($color);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t@each $name, $csscolor in $o-colors-palette {\n\t\t.o-colors-palette-#{$name} {\n\t\t\tbackground-color: $csscolor;\n\n\t\t\t@if $csscolor != 'transparent' and $csscolor != 'inherit' {\n\t\t\t\tcolor: oColorsGetTextColor($csscolor, 100);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set silent mode back on to avoid multiple outputs of helper classes\n\t$o-colors-is-silent: true;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "migration-guide.md",
      "contents": "# Color palette migration table\n\n| Old name              | Switch to                        |\n| --------------------- |----------------------------------|\n| pink                  | paper                            |\n| blue                  | oxford                           |\n| dark-blue             | oxford-60                        |\n| orange                | mandarin                         |\n| grey-tint1            | black-30                         |\n| grey-tint2            | black-40                         |\n| grey-tint3            | black-50                         |\n| grey-tint4            | black-70                         |\n| grey-tint5            | black-80                         |\n| pink-tint1            | black-5                          |\n| pink-tint2            | black-10                         |\n| pink-tint3            | black-20                         |\n| pink-tint4            | black-30                         |\n| pink-tint5            | black-50                         |\n| red                   | crimson                          |\n| green                 | jade                             |\n| orange-tint1          | _consult a designer_             |\n| brown-tint1           | _consult a designer_             |\n| yellow-tint1          | _consult a designer_             |\n| green-tint1           | _consult a designer_             |\n| bluegreen-tint1       | _consult a designer_             |\n| silver-tint1          | _consult a designer_             |\n| purple-tint1          | _consult a designer_             |\n| purple-tint2          | black-50 (_consult a designer_)  |\n| red-tint1             | _consult a designer_             |\n| red-tint2             | _consult a designer_             |\n| red-tint3             | _consult a designer_             |\n| red-tint4             | _consult a designer_             |\n| red-tint5             | _consult a designer_             |\n| blue-tint1            | _consult a designer_             |\n| blue-tint2            | _consult a designer_             |\n| blue-tint3            | _consult a designer_             |\n| blue-tint4            | _consult a designer_             |\n| blue-tint5            | _consult a designer_             |\n| section-purple        | velvet                           |\n| section-light-purple  | _consult a designer_             |\n| section-blue          | blue-80                          |\n| section-light-blue    | sky                              |\n| section-green         | use `oColorsGetTint('jade', 65)` |\n| section-light-green   | _consult a designer_             |\n| section-red           | crimson                          |\n| warm-1                | wheat                            |\n| warm-2                | black-5                          |\n| warm-3                | black-20                         |\n| warm-4                | black-90                         |\n| warm-5                | white-50                         |\n| warm-6                | black-80 (_consult a designer_)  |\n| cold-1                | black-70                         |\n| cold-2                | black-80                         |\n| cold-3                | black-90                         |\n| blue-1                | oxford-30                        |\n| blue-2                | _consult a designer_             |\n| purple-1              | velvet                           |\n| purple-2              | _consult a designer_             |\n| teal-1                | teal-40                          |\n| teal-2                | teal-80                          |\n| claret-1              | claret                           |\n| claret-2              | candy                            |\n| claret-inverse        | claret-30                        |\n| org-b2b               | org-b2c                          |\n| org-b2c-dark          | org-b2c-dark                     |\n| org-b2c-light         | org-b2c-light                    |\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"FT brand colours: Sass variables and helpers to use and define them\",\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"primitives\",\n\t\"keywords\": \"colours, themes, schemes, pink, salmon, background, palette\",\n\t\"origamiVersion\": 1,\n\t\"support\": \"https://github.com/Financial-Times/o-colors/issues\",\n\t\"supportStatus\": \"active\",\n\t\"demosDefaults\": {\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"dependencies\": \"o-buttons@^4.5.4\"\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"name\": \"palette\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/palette.mustache\",\n\t\t\t\"display_html\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"tints\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/tints.mustache\",\n\t\t\t\"display_html\": false\n\t\t},\n\t\t{\n\t\t\t\"name\": \"use-cases\",\n\t\t\t\"template\": \"demos/src/use-cases.mustache\",\n\t\t\t\"display_html\": false,\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"data\": \"demos/src/palette.json\",\n\t\t\t\"template\": \"demos/src/pa11y.mustache\",\n\t\t\t\"hidden\": true,\n\t\t\t\"display_html\": false\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-colors\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {},\n\t\"component\": \"o-colors\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_functions.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Return the CSS color for a palette color name\n///\n/// @param {String} $name\n@function oColorsGetPaletteColor($name) {\n\t@if (map-has-key($o-colors-palette, $name)) {\n\t\t@return map-get($o-colors-palette, $name);\n\t} @else {\n\t\t@warn \"Color name '#{inspect($name)}' is not defined in the palette\";\n\t\t@return null;\n\t}\n}\n\n/// Returns a color based on the background context and base color\n/// at the supplied percentage\n///\n/// @param {String} $background [paper] - palette name of background color\n/// @param {String} $color [black] - palette name of color\n/// @param {Number} $percentage [60] - percentage opacity of the color over the background\n@function oColorsMix($color: 'black', $background: 'paper', $percentage: 80) {\n\t$context: $background;\n\t$base: $color;\n\n\t@if type-of($background) != color {\n\t\t$context: oColorsGetPaletteColor($background);\n\t}\n\n\t@if type-of($color) != color {\n\t\t$base: oColorsGetPaletteColor($color);\n\t}\n\n\t@return mix($base, $context, $percentage);\n}\n\n/// Return the defined palette color name for a use case / property combination\n///\n/// @access private\n///\n/// @param {String} $usecase\n/// @param {String} $property - 'text', 'background', 'border' or 'all'\n@function _oColorsGetUseCase($usecase, $property) {\n\t@if (not map-has-key($o-colors-usecases, $usecase)) {\n\t\t@return null;\n\t}\n\n\t$props: map-get($o-colors-usecases, $usecase);\n\n\t$color: map-get($props, $property);\n\n\t@if ($color == null and $property != 'all') {\n\t\t$color: map-get($props, all);\n\t}\n\n\t@if (map-has-key($props, '_deprecated')) {\n\t\t@warn \"Color use case '#{inspect($usecase)}' is deprecated (property '#{inspect($property)}' was requested): #{inspect(map-get($props, '_deprecated'))}\";\n\t}\n\n\t@return $color;\n}\n\n/// Return the CSS color name of the first defined use case in a prioritised list for a use case / property combination\n///\n/// @example scss\n/// // Single use case:\n/// body { color: oColorsGetColorFor(page, text); }\n///\n/// // Use case with one or multiple fallbacks:\n/// // Use \"my-box\" color if available. If not, fall back to the \"box\" use case.\n/// .box { background-color: oColorsGetColorFor(my-box box, background); }\n///\n/// // No specific property:\n/// .money-wrapper { background-color: oColorsGetColorFor(section-money); }\n/// .money-headline { color: oColorsGetColorFor(section-money); }\n///\n/// // Assign a different fallback if the use case doesn't exist\n/// .foo { background-color: oColorsGetColorFor(foo, background, $options: ('default': 'black-5')); }\n///\n/// @param {list} $namelist\n/// @param {String} $property [all]\n/// @param {map} $options [('default': false)] - default: fallback value (false, null, or one of $o-colors-palette)\n@function oColorsGetColorFor($namelist, $property: all, $options: ('default': false)) {\n\t$default: map-get($options, 'default');\n\t$color: null;\n\n\t@each $name in $namelist {\n\t\t@if ($color == null) {\n\t\t\t$color: _oColorsGetUseCase($name, $property);\n\t\t}\n\t}\n\n\t@if ($color == null) {\n\t\t@if ($default or $default == null) {\n\t\t\t@return $default;\n\t\t} @else {\n\t\t\t$warn: \"Undefined use-case: can't resolve use case list '#{inspect($namelist)}'\";\n\n\t\t\t@if ($property) {\n\t\t\t\t$warn: $warn + \" for property '#{inspect($property)}'\";\n\t\t\t}\n\n\t\t\t@warn $warn;\n\t\t}\n\t}\n\n\t@return oColorsGetPaletteColor($color);\n}\n\n/// Returns a customised version of our shade-able colors defined in\n/// $o-colors-tints\n///\n/// @param {String} $color - the name of the color to be shaded\n/// @param {Number} $brightness - the brightness value of the new color\n@function oColorsGetTint($color, $brightness) {\n\t$hue: null;\n\t$saturation: null;\n\t$mix: null;\n\t$newcolor: null;\n\n\t@if not (map-has-key($o-colors-tints, $color)) {\n\t\t$color-tints: map-keys($o-colors-tints);\n\t\t@error \"It is not possible to use a tint of: #{$color}, please use one of: #{$color-tints} instead.\";\n\t}\n\n\t@if (map-has-key(map-get($o-colors-tints, $color), 'hue')) {\n\t\t$hue: map-get(map-get($o-colors-tints, $color), 'hue');\n\t\t$saturation: map-get(map-get($o-colors-tints, $color), 'saturation');\n\t\t$newcolor: _oColorsHSB($hue, $saturation, $brightness);\n\t} @else {\n\t\t$newcolor: oColorsMix($color, $percentage: $brightness);\n\t}\n\n\t@return $newcolor;\n}\n\n/// Returns a text color based on the background and\n/// an opacity percentage the color should appear at\n///\n/// @param {Color} $background - the hex color of the background the text will appear on\n/// @param {Number} $opacity [100] - the opacity percentage the text color should appear at\n@function oColorsGetTextColor($background, $opacity: 90) {\n\t$baseColor: _oColorsGetTextBase($background);\n\t$percentage: $opacity;\n\n\t$textColor: oColorsMix($baseColor, $background, $percentage);\n\t$testContrast: oColorsCheckContrast($textColor, $background, false);\n\n\t@if not $testContrast {\n\t\t@error \"The combination of #{$opacity}% #{$baseColor} on #{$background} does not pass WCAG guidelines for color contrast.\";\n\t} @else if $testContrast == 'large' {\n\t\t@warn \"When using this combination (#{$opacity}% #{$baseColor} on #{$background}) please use a font size larger than 18px.\";\n\t}\n\n\t@return $textColor;\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_mixins.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// Add a custom palette color\n///\n/// @example scss\n///  @include oColorsSetColor('grey-tint20': #cccccc);\n///\n/// @param {String} $name - Name in the palette\n/// @param {color} $color - Color (rgb, hex, hsl…)\n@mixin oColorsSetColor($name, $color) {\n\t$newcolor: ($name: $color);\n\n\t$o-colors-palette: map-merge($o-colors-palette, $newcolor) !global;\n}\n\n/// Add a custom use case property\n///\n/// @example scss\n///  @include oColorsSetUseCase(email, text, 'grey-tint5');\n///\n/// @param {String} $usecase - Name of the use case\n/// @param {String} $property - Property it applies to\n/// @param {String} $color - One of $o-colors-palette\n@mixin oColorsSetUseCase($usecase, $property, $color) {\n\t$propmap: ($property: $color);\n\n\t// The use-case already exists,\n\t// combine its existing properties with the new one\n\t@if (map-has-key($o-colors-usecases, $usecase)) {\n\t\t$propmap: map-merge(map-get($o-colors-usecases, $usecase), $propmap);\n\t}\n\n\t$newmap: ($usecase: $propmap);\n\n\t// Add the use-case and its properties to the global use-case map\n\t$o-colors-usecases: map-merge($o-colors-usecases, $newmap) !global;\n}\n\n/// Output property declarations for all defined properties for the specified use case\n///\n/// @example scss\n///  .my-thing {\n///  \t@include oColorsFor(custom-box box);\n///  }\n///  .my-other-thing {\n///  \t@include oColorsFor(custom-box box, background border);\n///  }\n///\n/// @param {String|list} $useCaseList\n/// @param {String|list} $propertyList [all]\n@mixin oColorsFor($useCaseList, $propertyList: all, $textLevel: 100) {\n\t// Fail silently when a use case doesn't exist,\n\t// taking advantage of how Sass treats the `null` keyword:\n\t//\n\t// \t\t$foo: null;\n\t// \t\tel { color: $foo; } // outputs nothing\n\t$args: (default: null);\n\n\t@if ($propertyList == 'all' or index($propertyList, 'background')) {\n\t\tbackground-color: oColorsGetColorFor($useCaseList, background, $options: $args);\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'text')) {\n\t\t$useCaseTextColor: oColorsGetColorFor($useCaseList, text, $options: $args);\n\t\t$useCaseBackgroundColor: oColorsGetColorFor($useCaseList, background, $options: $args);\n\n\t\t// If no text color is defined but there is a background color for the use case\n\t\t@if $useCaseTextColor == null and $useCaseBackgroundColor != null {\n\t\t\t$useCaseTextColor: oColorsGetTextColor($useCaseBackgroundColor, $textLevel);\n\t\t}\n\n\t\tcolor: $useCaseTextColor;\n\t}\n\t@if ($propertyList == 'all' or index($propertyList, 'border')) {\n\t\tborder-color: oColorsGetColorFor($useCaseList, border, $options: $args);\n\t}\n}\n\n/// Update the palette with calculated tints of\n/// each color from $o-colors-tints\n@mixin _oColorsSetPaletteTints {\n\t@each $color, $settings in $o-colors-tints {\n\t\t$hue: map-get($settings, 'hue');\n\t\t$tints: map-get($settings, 'tints');\n\n\t\t$saturation: null;\n\n\t\t@if map-has-key($settings, 'saturation') {\n\t\t\t$saturation: map-get($settings, 'saturation');\n\t\t}\n\n\t\t@if $tints != null {\n\t\t\t@each $value in $tints {\n\t\t\t\t$name: \"#{$color}-#{$value}\";\n\t\t\t\t$tint: null;\n\n\t\t\t\t@if $saturation == null {\n\t\t\t\t\t$tint: oColorsMix($color, $percentage: $value);\n\t\t\t\t} @else {\n\t\t\t\t\t$tint: _oColorsHSB($hue, $saturation, $value);\n\t\t\t\t}\n\n\t\t\t\t@include oColorsSetColor($name, $tint);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Output all palette colors as CSS Variables\n@mixin _oColorsCSSVariables {\n\t:root {\n\t\t@each $name, $hex in $o-colors-palette {\n\t\t\t#{--o-colors-}#{$name}: $hex;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_palette.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n\n/// color palette\n///\n/// These are the colors that make up the FT palette.\n/// We don't use these colors directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a color name and a color code,\n/// and is finished with a comma:\n///\n/// \t<color name>:   <color code>,\n///\n/// The color name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the color name and the color code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// non-color css values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// primary palette\n\t'paper':                 #fff1e5,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\n\t'claret':                #990f3d,\n\t'oxford':                #0f5499,\n\t'teal':                  #00757f,\n\n\t'wheat':                 #f2dfce,\n\t'sky':                   #cce6ff,\n\t'slate':                 #262a33,\n\n\t'velvet':                #593380,\n\t'mandarin':              #ff8833,\n\t'lemon':                 #ffec1a,\n\n\t'candy':                 #ff7faa,\n\t'wasabi':                #96cc28,\n\n\t'jade':                  #00b359,\n\t'crimson':               #cc0000,\n\n\t'org-b2c':               #4e96eb,\n\t'org-b2c-dark':          #3a70af,\n\t'org-b2c-light':         #99c6fb,\n), $o-colors-palette);\n\n$o-colors-tints: (\n\t'black': (\n\t\ttints: (5, 10, 20, 30, 40, 50, 60, 70, 80, 90),\n\t),\n\t'white': (\n\t\ttints: (10, 20, 40, 60, 80),\n\t),\n\t'claret': (\n\t\thue: 340,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'oxford': (\n\t\thue: 210,\n\t\tsaturation: 90,\n\t\ttints: (30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'teal': (\n\t\thue: 185,\n\t\tsaturation: 90,\n\t\ttints: (20, 30, 40, 50, 60, 70, 80, 90, 100),\n\t),\n\t'wheat': (\n\t\thue: 28,\n\t\tsaturation: 15,\n\t),\n\t'sky': (\n\t\thue: 210,\n\t\tsaturation: 20,\n\t),\n\t'slate': (\n\t\thue: 220,\n\t\tsaturation: 20,\n\t),\n\t'velvet': (\n\t\thue: 270,\n\t\tsaturation: 60,\n\t),\n\t'mandarin': (\n\t\thue: 25,\n\t\tsaturation: 80,\n\t),\n\t'lemon': (\n\t\thue: 55,\n\t\tsaturation: 90,\n\t),\n\t'candy': (\n\t\thue: 340,\n\t\tsaturation: 50,\n\t),\n\t'wasabi': (\n\t\thue: 80,\n\t\tsaturation: 80,\n\t),\n\t'jade': (\n\t\thue: 150,\n\t\tsaturation: 100,\n\t),\n\t'crimson': (\n\t\thue: 360,\n\t\tsaturation: 100,\n\t)\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_use-cases.scss",
      "contents": "////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n/// color use cases\n///\n/// These mappings define what we use our colors for.\n///\n/// Use case:           Must be a single word comprising just letters, numbers, and dashes.\n/// Properties:         A Sass map of properties (must be 'border', 'text', 'background', or 'all')\n///                     against palette colors (must be an exact match for a name of a color defined\n///                     in palette.scss).\n///\n/// Special properties: You can use the following special properties to mark use cases:\n///\n///                     _deprecated: <msg>  Emits <msg> as a warning if referenced, but still works\n///\n/// @type map\n$o-colors-usecases: map-merge((\n\n//\t<use case>                <properties>\n\n\tpage:                     (background: 'paper'),\n\tbox:                      (background: 'wheat'),\n\tlink:                     (text: 'teal'),\n\tlink-hover:               (text: 'black-70'),\n\tlink-title:               (text: 'black-80'),\n\tlink-title-hover:         (text: 'black-70'),\n\ttag-link:                 (text: 'claret'),\n\ttag-link-hover:           (text: 'claret-30'),\n\topinion-tag-link:         (text: 'oxford'),\n\topinion-tag-link-hover:   (text: 'oxford-30'),\n\ttitle:                    (text: 'black'),\n\tbody:                     (text: 'black-80'),\n\tmuted:                    (text: 'black-20'),\n\topinion:                  (background: 'sky'),\n\thero:                     (background: 'wheat'),\n\thero-opinion:             (background: 'oxford'),\n\thero-highlight:           (background: 'claret'),\n\n\t// Section colors\n\tsection-life-arts:        (all: 'velvet'),\n\tsection-life-arts-alt:    (all: 'candy'),\n\tsection-magazine:         (all: 'oxford'),\n\tsection-magazine-alt:     (all: 'sky'),\n\tsection-house-home:       (all: 'jade'),\n\tsection-house-home-alt:   (all: 'wasabi'),\n\tsection-money:            (all: 'crimson'),\n\tsection-money-alt:        (all: 'white'),\n\n), $o-colors-usecases);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_variables.scss",
      "contents": "$o-colors-is-silent: true !default;\n\n$o-colors-palette: () !default;\n$o-colors-usecases: () !default;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_a11y.scss",
      "contents": "/// Return either white or black for the text base\n/// depending on the background color\n///\n/// @param {String} $color - the name of the background color being used\n@function _oColorsGetTextBase($color) {\n\t@if oColorsColorBrightness($color) < 65% {\n\t\t@return 'white';\n\t} @else {\n\t\t@return 'black';\n\t}\n}\n\n/// Checks the contrast ratio and returns the WCAG\n/// rating, either AAA, AA, or AA18 meaning text should\n/// be at least 18px\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n@function oColorsGetWCAGRating($col1, $col2) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\t$wcag-rating: 'fail';\n\n\t@if $ratio >= 7 {\n\t\t$wcag-rating: 'AAA';\n\t} @else if $ratio >= 4.5 {\n\t\t$wcag-rating: 'AA';\n\t} @else if $ratio >= 3 {\n\t\t$wcag-rating: 'AA18';\n\t}\n\n\t@return $wcag-rating;\n}\n\n/// Checks the constrast of two colors and reports based on\n/// WCAG guidelines for color contrast\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// @param {Boolean} $warnings - whether this function should throw warnings/errors or just return\n@function oColorsCheckContrast($col1, $col2, $warnings: true) {\n\t$ratio: oColorsGetContrastRatio($col1, $col2);\n\n\t@if $ratio >= 4.5 {\n\t\t@return 'pass';\n\t} @else if $ratio >= 3 {\n\t\t@if $warnings { @warn \"Caution: When using the combination of #{$col1} with #{$col2}, text should be larger than 18px to pass WCAG color contrast guidelines.\"; }\n\t\t@return 'large';\n\t}\n\n\t@if $warnings {\n\t\t@error \"This combination of #{$col1} with #{$col2} does not pass WCAG color contrast guidelines.\";\n\t}\n\n\t@return false;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_color.scss",
      "contents": "/// Returns the web-safe HSLA color based on HSB/HSV values\n///\n/// @access private\n///\n/// @param {Number} $hue - number between 0-360\n/// @param {Number} $saturation - number between 0-100\n/// @param {Number} $brigthness - number between 0-100\n/// @param {Number} $alpha [1] - number between 0-1\n@function _oColorsHSB($hue, $saturation, $brightness, $alpha: 1) {\n\t@if $brightness == 0 {\n\t\t@return hsla(0, 0, 0, $alpha);\n\t} @else {\n\t\t$hsl-luminance: ($brightness/2) * (2 - ($saturation/100));\n\t\t$hsl-saturation: ($brightness * $saturation) / if($hsl-luminance < 50, $hsl-luminance * 2, 200 - $hsl-luminance * 2);\n\n\t\t@return hsla($hue, $hsl-saturation, $hsl-luminance, $alpha);\n\t}\n}\n\n/// Work out the brightness value in % of a color\n///\n/// @param {Color} $color - color value to get brightness from\n/// From: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function oColorsColorBrightness($color) {\n\t$red-magic-number: 241;\n\t$green-magic-number: 691;\n\t$blue-magic-number: 68;\n\n\t$brightness-divisor: $red-magic-number + $green-magic-number + $blue-magic-number;\n\n\t// Extract color components\n\t$red-component: red($color);\n\t$green-component: green($color);\n\t$blue-component: blue($color);\n\n\t// Calculate a brightness value in 3d color space between 0 and 255\n\t$number: sqrt((($red-component * $red-component * $red-magic-number) + ($green-component * $green-component * $green-magic-number) + ($blue-component * $blue-component * $blue-magic-number)) / $brightness-divisor);\n\n\t// Convert to percentage and return\n\t@return 100% * ($number / 255);\n}\n\n/// Returns the luminance of `$color` as a float (between 0 and 1)\n/// 1 is pure white, 0 is pure black\n/// @param {Color} $color - Color\n/// @return {Number}\n/// From: https://css-tricks.com/snippets/sass/luminance-color-function/\n@function oColorsColorLuminance($color) {\n\t$colors: (\n\t\t'red': red($color),\n\t\t'green': green($color),\n\t\t'blue': blue($color)\n\t);\n\n\t@each $name, $value in $colors {\n\t\t$adjusted: 0;\n\t\t$value: $value / 255;\n\n\t\t@if $value < 0.03928 {\n\t\t\t$value: $value / 12.92;\n\t\t} @else {\n\t\t\t$value: ($value + 0.055) / 1.055;\n\t\t\t$value: pow($value, 2.4);\n\t\t}\n\n\t\t$colors: map-merge($colors, ($name: $value));\n\t}\n\n\t@return (map-get($colors, 'red') * 0.2126) + (map-get($colors, 'green') * 0.7152) + (map-get($colors, 'blue') * 0.0722);\n}\n\n/// Calculate the contrast ratio between two colors\n///\n/// @param {Color} $col1 - first color to compare\n/// @param {Color} $col2 - second color to compare\n/// Based on the JS in https://github.com/LeaVerou/contrast-ratio/blob/gh-pages/contrast-ratio.js\n@function oColorsGetContrastRatio($col1, $col2) {\n\t$l1: oColorsColorLuminance($col1) + 0.05;\n\t$l2: oColorsColorLuminance($col2) + 0.05;\n\n\t$ratio: $l1 / $l2;\n\n\t@if $l2 > $l1 {\n\t\t$ratio: 1 / $ratio;\n\t}\n\n\t$ratio: (round($ratio*10)/10);\n\n\t@return $ratio;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/tools/_maths.scss",
      "contents": "// Square root maths function\n//\n// @param {Number} $root - Number to find the square root of\n// Code from: https://gist.github.com/jlong/f06f5843104ee10006fe\n@function sqrt($root) {\n    $x0: 1;\n    $x1: $x0;\n\n    @for $idx from 1 through 10 {\n        $x1: $x0 - ($x0 * $x0 - abs($root)) / (2 * $x0);\n        $x0: $x1;\n    }\n\n    @return $x1;\n}\n\n/// Power of maths function\n///\n/// @param {Number} $number - Number\n/// @param {Number} $exponent - Exponent\n/// From: https://css-tricks.com/snippets/sass/power-function/\n@function pow($number, $exponent) {\n  $value: 1;\n\n  @if $exponent > 0 {\n    @for $idx from 1 through $exponent {\n      $value: $value * $number;\n    }\n  } @else if $exponent < 0 {\n    @for $idx from 1 through -$exponent {\n      $value: $value / $number;\n    }\n  }\n\n  @return $value;\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/test.scss",
      "contents": "$o-colors-is-silent: true;\n@import '../main';\n\n// Undefined use cases should return `null`.\n// nb: in Sass, `property: null` outputs nothing.\n.test-undefined-use-case-name {\n\tcolor: oColorsGetColorFor(undefined-use-case-name);\n\tbackground: oColorsGetColorFor(undefined-use-case-name, background);\n}\n\n// Set a new colour\n@include oColorsSetColor('grey-tint20', #cccccc);\n\n// Set a use case for this new colour\n@include oColorsSetUseCase(email, text, 'grey-tint20');\n\n// Include the custom use-case\n.test-custom-use-case {\n\t@include oColorsFor(email);\n}\n\n// Override an existing use case\n@include oColorsSetUseCase(link, text, 'grey-tint20');\n.test-override-existing-use-case {\n\tcolor: oColorsGetColorFor(link, text);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/travis.rb",
      "contents": "#!/usr/bin/env ruby\n# Encoding: utf-8\nrequire 'fileutils'\nrequire 'open3'\n\n# squish method borrowed from Rails that removes newlines and extra spaces\nclass String\n\tdef squish\n\t\tstrip.gsub /\\s+/, ' '\n\tend\nend\n\n# Prepare build test folder\nFileUtils.mkdir_p \"test/output\"\n\n# Attempting to use an undefined color generates a warning\nstdout, stderr, status = Open3.capture3 \"node-sass test/test.scss test/output/test.css --output-style compressed\"\nputs \"Test: using undefined colors don't throw fatal errors…\"\nraise \"Using an undefined color shouldn't fail build\" unless status.success?\nraise \"Using an undefined color should throw warnings\" unless (stderr.squish.include? \"Undefined use-case\" and stderr.squish.include? \"Color name 'null' is not defined in the palette\")\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: custom colors and use cases are registered correctly…\"\nraise \"Using an undefined color should not affect output\" if File.open(\"test/output/test.css\").read.squish.include? \"test-undefined-use-case-name\"\nraise \"Using a custom use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \"test-custom-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: overriding existing use cases…\"\nraise \"Overriding an existing use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \".test-override-existing-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nFile.delete('test/output/test.css')\n\nFileUtils.rmdir \"test/output\"\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/test.scss",
      "contents": "$o-colors-is-silent: true;\n@import '../main';\n\n// Undefined use cases should return `null`.\n// nb: in Sass, `property: null` outputs nothing.\n.test-undefined-use-case-name {\n\tcolor: oColorsGetColorFor(undefined-use-case-name);\n\tbackground: oColorsGetColorFor(undefined-use-case-name, background);\n}\n\n// Set a new colour\n@include oColorsSetColor('grey-tint20', #cccccc);\n\n// Set a use case for this new colour\n@include oColorsSetUseCase(email, text, 'grey-tint20');\n\n// Include the custom use-case\n.test-custom-use-case {\n\t@include oColorsFor(email);\n}\n\n// Override an existing use case\n@include oColorsSetUseCase(link, text, 'grey-tint20');\n.test-override-existing-use-case {\n\tcolor: oColorsGetColorFor(link, text);\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/travis.rb",
      "contents": "#!/usr/bin/env ruby\n# Encoding: utf-8\nrequire 'fileutils'\nrequire 'open3'\n\n# squish method borrowed from Rails that removes newlines and extra spaces\nclass String\n\tdef squish\n\t\tstrip.gsub /\\s+/, ' '\n\tend\nend\n\n# Prepare build test folder\nFileUtils.mkdir_p \"test/output\"\n\n# Attempting to use an undefined color generates a warning\nstdout, stderr, status = Open3.capture3 \"node-sass test/test.scss test/output/test.css --output-style compressed\"\nputs \"Test: using undefined colors don't throw fatal errors…\"\nraise \"Using an undefined color shouldn't fail build\" unless status.success?\nraise \"Using an undefined color should throw warnings\" unless (stderr.squish.include? \"Undefined use-case\" and stderr.squish.include? \"Color name 'null' is not defined in the palette\")\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: custom colors and use cases are registered correctly…\"\nraise \"Using an undefined color should not affect output\" if File.open(\"test/output/test.css\").read.squish.include? \"test-undefined-use-case-name\"\nraise \"Using a custom use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \"test-custom-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nputs \"Test: overriding existing use cases…\"\nraise \"Overriding an existing use case compiles correctly\" unless File.open(\"test/output/test.css\").read.squish.include? \".test-override-existing-use-case{color:#ccc\"\nputs \"\\e[32mPassed\\e[0m\"\nFile.delete('test/output/test.css')\n\nFileUtils.rmdir \"test/output\"\n"
    }
  ]
}

exports['occ o-forms-7.0.0 o-forms-7.0.0 without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".idea/\n.sass-cache/\nbower_components/\nbuild/\ncoverage/\ndemos/local/\nnode_modules/\n/bin\n/.classpath\n/.project\n.DS_Store\n.env\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "ACCESSIBILITY.md",
      "contents": "# Form Accessibility\n\nForms can present a challenge when it comes to accessibility, most specifically in terms of Assitive Technology (in this case screen readers, which we will refer to as 'AT' going forward).\n\n`o-forms` has been tested with our [contrast checker](https://registry.origami.ft.com/components/o-colors#demo-contrast-ratio-checker) to make sure that our colour contrasts meet [WCAG](https://www.w3.org/WAI/standards-guidelines/wcag/) requirements, so this document is going to walk through `aria` attributes we recommend using.\n\n### Table of Contents:\n- [Single Inputs](#single-inputs)\n- [Multiple Inputs](#multiple-inputs)\n- [Form Validation](#form-validation)\n\n## Single inputs\n`o-forms` considers these types of input 'single input fields`:\n- `input[type=text]` \n- `input[type=password]`\n- `select`\n- `textarea`\n\nThe base structure for all of these types of input is as follows:\n```html\n<label>\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">\n\t\t\tLabel to describe the input here\n\t\t</span>\n\t</span>\n\n\t<!-- the input container below accepts a number of different modifiers, which are outlined in the README -->\n\t<span class=\"o-forms-input\"> \n\t\t<input type=\"text\"/>\n\t\t<!-- or --> \n\t\t<input type=\"password\"/>\n\t\t<!-- or --> \n\t\t<textarea></textarea>\n\t\t<!-- or -->\n\t\t<select>...</select> \n\t</span>\n</label>\n```\nAT will read this markup correctly by identifying the type of input declared, and the label for it. As long as our markup is semantic, this should be read out as intended. \n\n## Multiple inputs\n`o-forms` considers these types of input 'multiple input fields`:\n- `input[type=radio]` \n- `input[type=checkbox]`\n\nEssentially, if there is more than one input, they should be grouped with their input siblings.\n\nThe base structure for these types of input (ignoring some modifiers) is:\n```html\n<div class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox2\">\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 2</span>\n\t\t</label>\n\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox3\" checked>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 3</span>\n\t\t</label>\n\t</span>\n</div>\n```\nOur approach to grouping input elements mimicks the structure of a `<fieldset>` with a `<legend>` and multiple `<input>`s. \n\nWe chose not to work with a fieldset because they are [especially difficult to style consistently](https://thatemil.com/blog/2015/01/03/reset-your-fieldset/) _and_ we wanted to provide visual flexibility for our users.\n\nBut in doing this, we've lost the `<fieldset>`'s semantic structure, which ATs rely on to read out correctly.\n\nHow to make our mimicked stucture more semantic? Enter `aria` (and `role`) attributes!\n\nThere are five attributes we recommend implementing in multiple input fields:\n- [`role=\"group\"`](#role-group)\n- [`aria-labelledby` & `aria-describedby`](#aria-labelledby--aria-describedby)\n- [`aria-label` & `aria-hidden`](#aria-label--aria-hidden)\n\n#### `role=\"group\"`\n\nThis role should be set on the parent `<div>`:\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field\" role=\"group\">\n\t...\n</div>\n```\nThis denominates the `<div>` as the element that holds a group of inputs, similar to the behaviour of a `<fieldset>`.  \n[According to MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_group_role): \n>'A group should be used to form a logical collection of items with related functionality ...'\n\n#### `aria-labelledby` & `aria-describedby`\nThis attribute should also be added to the parent `<div>`. It accepts an id, which should be set on `<span class=\"o-forms-title__main\">`:\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\">\n\t<span class=\"o-forms-title\">\n-\t\t<span class=\"o-forms-title__main\">Group Title</span>\n+\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\t...\n</div>\n```\n\nUsing `aria-labelledby` will help us simulate the behaviour that a `<legend>` is responsible for, which is linking a title to a group. This difference is important because we have more than one input in a group, and each one of those inputs has their own label, independent of the group title. \n\nIf we are using \"prompt\" text to provide further explanation about the group, we should use `aria-describedby`, with an id of its own, to provide that description, e.g.:\n```diff\n-<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\">\n+<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\" aria-describedby=\"example-group-info\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n-\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n+\t\t<span class=\"o-forms-title__prompt\" id=\"example-group-info\">Group info</span>\n\t\t...\n\t</span>\n\t...\n</div>\n```\n\n`aria-labelledby` and `aria-describedby` are similar attributes, though semantically they provide different functionality.\nYou can [read more about them on MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute):\n\n>A label provides essential information about an object, while a description provides extended information that the user might need.\n\n#### `aria-label` & `aria-hidden`\n\nIndependently of whether or not a group of inputs is in a `<fieldset>` or a `<div>`, their structure exhibits a peculiar type of behaviour: AT will focus on the `<input>`, read out its label, and then focus on the label text, and read that out again. To avoid focusing on the label to provide a more natural 'tabbing' experience, we recommend combining `aria-label` and `aria-hidden` on the grouped inputs:\n\n```diff\n<label>\n-\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked=>\n+\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked aria-label=\"Checkbox 1\">\n-\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n+\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 1</span>\n</label>\n```\n\nBy defining what the label of the input is and hiding the actual label from the AT, we'll make the transition between inputs far smoother. \n\n_Note 1: `aria-label` also accepts an id if you would rather set an id on the input's label_\n\n_Note 2: `aria-hidden` is sometimes used as a CSS selector to visually hide/show elements. However, it's primary functionality is to hide the contents of an element from the AT_\n\n\n#### Example\n\nPutting everything we've just seen together, our multiple input field should look like this:\n```html\n<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\" aria-describedby=\"example-group-info\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\" id=\"example-group-info\">Group Info</span>\n\t</span>\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked aria-label=\"Checkbox 1\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox2\" checked aria-label=\"Checkbox 2\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 2</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox3\" checked aria-label=\"Checkbox 3\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 3</span>\n\t\t</label>\n\t<span>\n</div>\n```\n\n## Form Validation\n\n_Phew_. Now that we've covered static attributes for our form elements, let's jump into dynamic form validation. There are many approaches to validating in an accessible way, and none are infallible due to the nature of ATs, but we'll cover what we've considered so far.\n\n#### Native browser validation\n\nBrowsers have native form validation. This could mean different implementation details for different browsers, but overall, a browser will check input fields in a form against the [ValidityState interface](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState), which checks for pattern matches, whether input is present in a required field, among a few other conditions.\n\nThis means that invalid inputs will recieve messages tailored to describe the condition that has _not_ been met. These messages are presented in the language that the user has chosen for their browser. In addition to that, the browser will shift focus onto the first invalid input. Depending on the browser, the AT will read out the generated error message. \n\nThe main problem with this approach is that there is no guarantee that the experience is consistent. Since browsers process this information differently and interact with screen readers differently, relying on native validation could lead to confusing behaviour for ATs. \n\n\n#### Non native validation\n\nWe do _not_ style the tool tip that the browser's message appears in, so frequently forms are given the `novalidate` attribute, which doesn't run any native validation on submit. This means that the messages can be overriden and styled according to the FT's design and the behaviour determined by the product's needs.\n\nPrimarily because of this, we've chosen to default to non-native validation, using [custom errors](./README.md#custom-errors) and to producing an [error summary](#error-summary) instead.\n\n#### `aria-live` regions\n\nAt its core, `aria-live` is an attribute that can be set to an area of a document to denote that the AT should announce changes to that area. It is possible to determine what kind of changes it should recognise (additions, changes to text, etc), how forceful it should be in informing the user of the change (polite, assertive), alongside a few more advanced features.\n\n`o-forms` cannot handle this attribute for you, and it can create an incoherent experience across browsers, so we generate an [error summary](#error-summary) instead.\n\nIf you choose not to use the error summary functionality that comes with `o-forms`, please consider adding the `aria-live` attribute to your markup, keeping the following in mind:\n- this attribute accepts three politeness settings: off, polite or assertive. We recommend using polite, which will avoid interfering with any other actions the AT may be reading out.\n- `aria-live` needs to be set on the markup so that the AT can register it when the document loads. Dynamically added regions won't be recognised. \n\t- this means `o-forms` cannot add it to a form or its elements\n- it shoud **not** be set to the document `<body>`, as it could overrun the AT with unnecessary information. \n\t- in forms with many inputs we might end up with many live regions\n- the information a region relays can get lost or confusing amidst a users interaction with the page\n\t- the validation–and change to the region–could happen on blur, on change, on input, on submit, &c\n\nYou can read more about [`aria-live` on MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions).\n\n#### Error summary\n\nGDS has a [very good reference](https://design-system.service.gov.uk/components/error-summary/) for error handling.\n\nOverall, it outlines that:\n- There should be a summary of errors at the top of a page\n- The focus should be shifted to that summary\n- Each error should link to the input that is invalid\n- Each invalid input should *also* have the error beneath/beside/above it\n\nThis means that not only will ATs have clear access to what has happend on the page, but it will be clear for any other user of the product's form.\n\n`o-forms` implements this behaviour for you if the [error summary options is enabled](./README#form-instance)\n\nIf you would like help implementing anything you've read here, please [get in touch with the team](./README.md#contact). \n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "MIGRATION.md",
      "contents": "\n## Migration Guide\n\n### Migrating from v6 to v7\n\nVersion 7 introduces a complete redesign to the `o-forms` markup, Sass and JavaScript API, and makes small design changes and additions.\n\nAll Sass mixins have been removed, and have been replaced with two public mixins:\n- `oForms()`\n- `oFormsAddCustom()`\n\nThe primary mixin makes an options map public, which allows you to output styles specific to the elements that you want to use in your form. `o-forms` [no longer supports custom classes](https://github.com/Financial-Times/origami/issues/4). \n\nThe following example would output small text inputs and regular checkboxes:\n\n```diff\n-@include oFormsBaseFeatures();\n-@include oFormsRadioCheckboxFeatures();\n-@include oFormsSmallFeature();\n\n+@include oForms($opts: (\n+\t'elements': (\n+\t\t'text', \n+\t\t'checkbox'\n+\t),\n+\t'features': (\n+\t\t'small'\n+\t)\n+))\n```\n\nThe customisation mixin outputs a custom modifier, and can be applied as follows:\n```diff\n-.o-forms__radio-button.o-forms__radio-button--my-theme {\n-\t@include oFormsRadioButtonsStyledTheme($theme: $my-theme);\n-}\n\n+@include oFormsAddCustom(\n+\t$input: 'radio',\n+\t$class: 'my-theme',\n+\t$theme: $my-theme\n+);\n\n// the custom class modifier will be: .o-forms-input--my-theme\n```\n\nThe markup has been changed entirely to accomodate the following structure:\n```\n┌— field container (.o-forms-field) —————┐\n|      (one of div or label)             |\n|                                        |\n|  ┌ title container (.o-forms-title) ┐  |\n|  |    (group titles or              |  |\n|  |     individual input labels)     |  |\n|  └——————————————————————————————————┘  |\n|                                        |\n|  ┌ input container (.o-forms-input) ┐  |\n|  |    (group inputs or              |  |\n|  |     individual inputs)           |  |\n|  └——————————————————————————————————┘  |\n└————————————————————————————————————————┘\n```\n\nThe root `o-forms` class is no longer used. Instead, there are modifiers for each type of container (field, title, input) illustrated above, and some modifiers that only work for specific inputs:\n- Field container modifiers:\n\t- `.o-forms-field--optional`\n\t- `.o-forms-field--inline`\n\t- `.o-forms-field--inverse`\n- Title container modifiers:\n\t- `.o-forms-title`\n\t- `.o-forms-title--shrink`\n\t- `.o-forms-title--vertical-center`\n- Input container modifiers:\n\t- `.o-forms-input--pseudo-radio-box`\n\t- `.o-forms-input--checkbox`\n\t- `.o-forms-input--date`\n\t- `.o-forms-input--inline`\n\t- `.o-forms-input--invalid`\n\t- `.o-forms-input--radio-box`\n\t- `.o-forms-input--radio-round`\n\t- `.o-forms-input--select`\n\t- `.o-forms-input--text-area`\n\t- `.o-forms-input--text-input`\n\t- `.o-forms-input--toggle`\n\t- `.o-forms-input--valid`\n\n\nThe JavaScript for `o-forms` now accepts two options:\n- `useBrowserValidation`: whether to use the browsers validtion and error messages. Defaults to `false`\n- `errorSummary`: whether to display a summary of invalid fields on form submit. Defaults to `true`\n\n### Migrating from v5 to v6\nVersion 6 uses a new major version of o-loading. Make sure your project is compatible with o-loading@3.0.0\n\n### Migrating from v4 to v5\n\nVersion 5 makes some design improvements including tightening up the spacing around checkboxes and radio buttons. It also provides many [new mixins](#sass) to make it easier to output `o-forms` features granularly.\n\n#### Checkboxes & Radios\n- Wrap groups of checkboxes and radios in `.o-forms__group` for correct vertical spacing.\n- `oFormsRadioCheckbox` no longer outputs all styles for checkboxes and radios, only what is shared between them. Use `oFormsRadioCheckboxFeatures` instead.\n- It is no longer possible to modify the complete selector of radios, checkboxes, or their labels. The base `.o-forms` class may still be updated using the `$class` argument.\n\n#### Prefix, Suffix\n- Prefixes have been removed entirely. We recommend using additional label information and feedback in form validation instead.\n- Suffix buttons now use standard `o-buttons` styling.\n- Check your uses of suffixs still display correctly. In the case of button suffixes it may be necessary to apply the extra `o-buttons` classes `.o-buttons--secondary` and `.o-buttons--big`.\n- The mixins `oFormsAffixButton`, `oFormsAffixCheckbox`, `oFormsPrefixSuffix` have been removed. Use `oFormsSuffixFeature` for suffix classes including the affix wrapper (as documented above).\n\n#### Toggles\n- `.o-forms__checkbox-toggle` has been renamed `.o-forms__toggle`.\n- The `oFormsCheckboxToggleSize` mixin has been removed due to lack of use.\n\n#### Wrappers and Messages\n- Wrappers have been renamed to sections. Their class names have also been updated to conform to the BEM naming convention (as optional containers their name should not contain `__` as they are not elements of a block).\n\t- `.o-forms__wrapper` becomes `.o-forms-section`.\n\t- `.o-forms__wrapper--highlight` becomes `.o-forms-section--highlight`.\n\t- `.o-forms__wrapper--error` which becomes `.o-forms-section--error`.\n\t- The `oFormsMessage` mixin now only outputs minimal message styles, uses should be replaced with `oFormsSectionFeature`.\n- Messages are now child elements of a section and must not be used independently.\n\t- Wrap messages within a form section `.o-forms-section` if they are not already. They should be the first child of the section.\n\t- Remove the class `.o-forms__message--error`. A message now infers that it is an error message based on its parent section `.o-forms-section--error`.\n\n#### Other changes\n- `oFormsFullWidth` has been removed. Use `oFormsWideFeature` for classes to remove form max width restrictions.\n- There is a new dependancy on `o-icons`. Build your project to confirm that it is compatible.\n\nPlease [contact us](#contact) if you have any queries.\n\n### Migrating from v3 to v4\n- A dependency on [o-typography](http://github.com/financial-times/o-typography) v5 has been introduced. This will break any builds that use o-typography <v5. __Resolution__: Update to o-typography v5.\n- The o-colors dependency has been updated to `^4`. This could create bower conflicts which should be resolved by updating to the newest release of o-colors.\n- The design for o-forms has changed in v4. This could create issues on your pages which make use of o-forms. Ensure that the updated design does not break the layout on your webpage.\n\n----\n\n### Migrating from v2 to v3\n\nThe main change in `v2` is that classes provided by `o-forms` now conform more strictly to the [BEM naming convention][bem]. All form field classes now follow the element convention, so `o-forms-text` is now `o-forms__text`.\n\nThere is also now a main block class of `o-forms` which replaces the previous `o-forms-group` class. Full class changes are below:\n\n- `o-forms-group` becomes `o-forms`\n- Search templates for `o-forms-xxxxx` and replace with `o-forms__xxxxx`\n\nAn example of the changes should be:\n\n```diff\n-<div class=\"o-forms-group\">\n+<div class=\"o-forms\">\n\n-<label class=\"o-forms-label\"></label>\n+<label class=\"o-forms__label\"></label>\n\n-<input type=\"radio\" class=\"o-forms-radio\" />\n+<input type=\"radio\" class=\"o-forms__radio\" />\n\n-<input type=\"checkbox\" class=\"o-forms-checkbox\" />\n+<input type=\"checkbox\" class=\"o-forms__checkbox\" />\n\n-<input type=\"text\" class=\"o-forms-text\" />\n+<input type=\"text\" class=\"o-forms__text\" />\n```\n\nAny modifier classes like `o-forms--error` have remained the same.\n\n\n### Migrating to v1\n\n#### 1. Module name change\n\n`o-ft-forms` becomes `o-forms` in v1.\n\n1. Search `o-ft-forms` and replace with `o-forms`\n2. Search `oFtForms` and replace with `oForms`\n\n#### 2. Web fonts and icons\n\nIn the v0.x.x of o-forms, the module loaded webfonts itself and was setting its own font-family.\n\nThe module now inherits the `font-family` set in your application and doesn't embed web fonts anymore.\n\nSolution: products must load webfonts themselves (tipically, with [o-fonts](https://github.com/Financial-Times/o-fonts) and [o-ft-icons](https://github.com/Financial-Times/o-ft-icons)).\n\n```html\n<!-- Load web fonts and icons with @font-face declarations  -->\n<link rel=\"stylesheet\" href=\"https://www.ft.com/__origami/service/build/v2/bundles/css?modules=o-fonts@^3.0.0,o-icons@^5.0.0\" />\n\n<!-- Set the font family on the whole document -->\n<style>\n\thtml {\n\t\tfont-family: BentonSans, sans-serif;\n\t}\n</style>\n```\n\n\n#### 3. Helper classes name changes\n\nThe most important change is with input elements, that now have their own classes:\n\n```diff\n-<input type=\"radio\" class=\"o-ft-forms__field\" />\n+<input type=\"radio\" class=\"o-forms-radio\" />\n\n-<input type=\"checkbox\" class=\"o-ft-forms__field\" />\n+<input type=\"checkbox\" class=\"o-forms-checkbox\" />\n\n-<input type=\"text\" class=\"o-ft-forms__field\" />\n+<input type=\"text\" class=\"o-forms-text\" />\n```\n\n- `o-ft-forms__field-group` > `o-forms-group`\n- `o-ft-forms__field--textarea` becomes `o-forms-textarea`\n- `o-ft-forms__field--select` becomes `o-forms-select`\n- Any `o-ft-forms__xxxx` becomes `o-forms-xxxx`\n- Search templates for `o-ft-forms__global-message--error` and replace with `o-forms-message o-forms-message--error`\n- Search templates for `o-forms-error-wrapper` and replace with `o-forms-wrapper o-forms-wrapper--error`\n\n`o-ft-forms__section` is deprecated: sections (previously `<fieldset class=\"o-ft-forms__section\">`) have to be styled at a product level. Since fieldsets have browser-specific styling issues, prefer `<div>` elements.\n\n#### 4. Mixins and placeholder classes\n\nIf using placeholder classes or extending styles using `oFormsClass` and `oFormsPlaceholderOptionalSelector`, use normal selectors, and include the matching mixins, documented in the [SassDoc documentation of the module](http://sassdoc.webservices.ft.com/v1/sassdoc/o-forms).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-forms [![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](#licence)\n\nFT-branded styles for form elements.\n\n- [Markup](#markup)\n\t- [Single input fields](#single-input-fields)\n\t\t- [`input[type=text]`](#inputtypetext)\n\t\t- [`input[type=password]`](#inputtypepassword)\n\t\t- [`textarea`](#textarea)\n\t\t- [`select`](#select)\n\t\t- [Modifiers](#modifiers)\n\t- [Multiple input fields](#multiple-input-fields)\n\t\t- [`input[type=radio]`](#inputtyperadio)\n\t\t\t- [Round](#round)\n\t\t\t- [Box](#box)\n\t\t- [`input[type=checkbox]`](#inputtypecheckbox)\n\t\t\t- [Square](#square)\n\t\t\t- [Toggle](#toggle)\n\t- [Uncategorised input fields](#uncategorised-input-fields)\n\t\t- [Date inputs](#date-inputs)\n\t\t- [Pseudo Radio Links](#pseudo-radio-links)\n\t- [Shared Modifiers](#shared-modifiers)\n\t\t- [Field modifiers](#field-modifiers)\n\t\t- [Input modifiers](#input-modifiers)\n\t- [Errors](#errors)\n\t\t- [Custom errors](#custom-errors)\n\t\t- [Error summary](#error-summary)\n- [Sass](#sass)\n\t- [Options](#options)\n\t- [Customisation](#customisation)\n- [Accessibility](#accessibility)\n- [JavaScript](#javascript)\n\t- [Form Instance](#form-instance)\n\t- [Individual Inputs](#individual-inputs)\n\t- [State](#state)\n- [Migration guide](#migration-guide)\n- [Contact](#contact)\n- [Licence](#licence)\n\n\n## Markup\n`o-forms` defines form elements as a combination of 'fields' and 'inputs'. At its core, a field holds the information about an input (such as a label) and the input itself.\n\nRegardless of the input type used, all elements follow the same structure:\n```\n┌— field container (.o-forms-field) —————┐\n|      (one of div or label)             |\n|                                        |\n|  ┌ title container (.o-forms-title) ┐  |\n|  |    (group titles or              |  |\n|  |     individual input labels)     |  |\n|  └——————————————————————————————————┘  |\n|                                        |\n|  ┌ input container (.o-forms-input) ┐  |\n|  |    (group inputs or              |  |\n|  |     individual inputs)           |  |\n|  └——————————————————————————————————┘  |\n└————————————————————————————————————————┘\n```\n\nBearing that in mind, all form elements are divided into two main categories, with a couple of outliers: \n- [single input fields](#single-input-fields)\n- [multiple input fields](#multiple-input-fields)\n- [uncategorised input fields](#uncategorised-input-fields)\n\nOverall, the same modifiers will work for the structure outlined above. \nIf a particular form element has a unique modifier, it will be under its markup description.\n- [Field modifiers](#field-modifiers)\n- [Input modifiers](#input-modifiers)\n\n### Single input fields\n\n`o-forms` consideres a single input field to be a field that has **one** input, like a text input, rather than multiple children, such as radio buttons.\n\nEvery single input field requires a root structure that looks like this:\n```html\n<label class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\"> Label for input here </span>\n\t\t<span class=\"o-forms-title__prompt\"> Optional text to describe the input here </span>\n\t</span>\n\n\t<span class=\"o-forms-input\">\n\t\t<!-- input element -->\n\t</span>\n</label>\n```\n\n`o-forms` provides a different modifier class for each input type, as shown in the examples below:\n\n#### `input[type=text]`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t<input type=\"text\"/>\n\t</span>\n...\n```\n\n#### `input[type=password]`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--password\">\n\t\t<input type=\"password\"/>\n\t</span>\n...\n```\n[_See the full markup for text and password input in the registry_](https://registry.origami.ft.com/components/o-forms#text-input)\n#### `textarea`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--textarea\">\n\t\t<textarea></textarea>\n\t</span>\n...\n```\n[_See the full markup for text areas in the registry_](https://registry.origami.ft.com/components/o-forms#text-area)\n#### `select`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--select\">\n\t\t<select>\n\t\t\t<option>Option 1</option>\n\t\t\t<!-- further options -->\n\t\t</select>\n\t</span>\n...\n```\nIt is also possible to have a multiple select input by adding the `multiple` attribute\t:\n```diff\n...\n\t<span class=\"o-forms-input o-forms-input--select\">\n-\t\t<select>\n+\t\t<select multiple>\n\t\t\t<option>Option 1</option>\n\t\t\t<!-- further options -->\n\t\t</select>\n\t</span>\n...\n```\n[_See the full markup for select inputs in the registry_](https://registry.origami.ft.com/components/o-forms#select)\n\n#### Modifiers\nAll single input fields accept the following modifiers on the input container:\n- `o-forms-input--small`: reduces the height of the input field\n- `o-forms-input--suffix`: inlines a sibling element (e.g. a button) with the input\n- `o-forms-title--vertical-center`: aligns the title container vertically (most useful when there is no prompt text)\n- `o-forms-title--shrink`: shrinks the title container to the width of a shorter title (should be used with `o-forms-field--inline`):\n```diff\n...\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field o-forms-field--inline\">\n-\t<span class=\"o-forms-title\">\n+\t<span class=\"o-forms-title o-forms-title--shrink\">\n\t\t<span class=\"o-forms-title__main\"> Label for input here </span>\n\t\t<span class=\"o-forms-title__prompt\"> Optional text to describe the input here </span>\n\t</span>\n\t...\n</div>\n```\n### Multiple input fields\nA multiple input field is considered a field with multiple sibling inputs, e.g. radio buttons.\n\nEvery multiple input field requires a root structure that looks like this:\n```html\n<div class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\n\t<span class=\"o-forms-input\">\n\t\t<!-- sibling inputs -->\n\t</span>\n</div>\n```\n\n#### `input[type=radio]`\nThere are two different visual styles available for radio inputs, which we've called 'Round' and 'Box'. They can be output using specific modifier classes:\n\n##### Round\nFor a regular, round radio button, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--radio-round\">\n\t\t<label>\n\t\t\t<input type=\"radio\" name=\"my-round-radio\"/>\n\t\t\t<span class=\"o-forms-input__label\">Radio 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"radio\" name=\"my-round-radio\"/>\n\t\t\t<span class=\"o-forms-input__label\">Radio 2</span>\n\t\t</label>\n\t</span>\n...\n```\n[_See the full markup for a round radio button in the registry_](https://registry.origami.ft.com/components/o-forms#radio-round)\n\n##### Box\nFor a box-like, rectangular radio button, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"my-box-radio\"/>\n\t\t\t\t<span class=\"o-forms-input__label\">Radio 1</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"my-box-radio\"/>\n\t\t\t\t<span class=\"o-forms-input__label\">Radio 2</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n...\n```\n\nThis input type also accepts a 'negative' modifier `o-forms-input__label--negative`, which changes the background colour of an input when selected (usually for a negative choice):\n```html\n<div class=\"o-forms-field\">\n\t...\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"negative\" value=\"Yes\">\n\t\t\t\t<span class=\"o-forms-input__label\">Yes</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"negative\" value=\"No\"checked>\n\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\">No</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n</div>\n```\n[_See the full markup for a box-style radio button in the registry_](https://registry.origami.ft.com/components/o-forms#radio-box)\n\n#### `input[type=checkbox]`\nThere are two different visual styles available for checkbox inputs, which are a default square checkbox or a toggle checkbox. They can be output using specific modifier classes:\n\n##### Square\nFor a regular, squared checkbox, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 2</span>\n\t\t</label>\n\t</span>\n...\n```\n\nTo align the checkbox to the **right** of its label, you can add the `o-forms-input__right` class:\n```diff\n...\n<span class=\"o-forms-input o-forms-input--checkbox\">\n-\t\t<label>\n+\t\t<label class=\"o-forms-input__right\">\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\t</span>\n...\n```\n\n[_See the full markup for regular checkboxes in the registry_](https://registry.origami.ft.com/components/o-forms#checkboxes)\n\n##### Toggle\n\nFor a toggle checkbox, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--toggle\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-toggle\"/>\n\t\t\t<span class=\"o-forms-input__label\">Toggle 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-toggle\"/>\n\t\t\t<span class=\"o-forms-input__label\">Toggle 2</span>\n\t\t</label>\n\t</span>\n...\n```\n\nThis is currently the only input type that has an inverse state. \nFor this you'll need to add the `o-forms-field--inverse` to the parent element:\n\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field o-forms-field--inverse\">\n\t<span class=\"o-forms-title\">\n\t\t...\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--toggle\">\n\t\t<!-- toggle inputs -->\n\t</span>\n</div>\n```\n[_See the full markup for regular checkboxes in the registry_](https://registry.origami.ft.com/components/o-forms#toggle)\n\n\n### Uncategorised input fields\nDate inputs and anchor elements with box-like styling are outliers to the rules above.\n\n#### Date inputs\nWe do not use `input[type=date]`, but instead combine three `input[type=text]` within the [base structure for a multiple input field](#multiple-input-fields), as shown below:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"[0-9]{2}\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">DD</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"0?[1-9]|1[012]\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">MM</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"[0-9]{4}\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">YYYY</span>\n\t\t</label>\n\t</span>\n...\n```\n[_See the full markup for date inputs in the registry_](https://registry.origami.ft.com/components/o-forms#date)\n\n#### Pseudo Radio Links\nAnchor elements are an entirely separate entity. They _look_ like a form element but do not function as one. They are styled to look like a box-like radio button.\n\n```html\n<div class=\"o-forms-input o-forms-input--pseudo-radio-link\">\n\t\t<a class=\"o-forms-input__link o-forms-input__link--current\" href=\"#\">Link A</a>\n\t\t<a class=\"o-forms-input__link\" href=\"#\">Link B</a>\n</div>\n```\n[_See the full markup for an anchor element in the registry_](https://registry.origami.ft.com/components/o-forms#pseudo-radio-links)\n\n\n### Shared Modifiers\nThe markup structure outlined at the [beginning of this section](#markup) indicates containers for a form field that accept modifiers.\n\n#### Field Modifiers\nThe following modifiers are available for the `o-forms-field` element:\n- `o-forms-field--optional`: indicates that a field is optional, and will append `(optional)` to the end of the field's title.\n- `o-forms-field--inline`: inlines the title container to the input container\n\n#### Input Modifiers\n- `o-forms-input--valid`: identifies a valid input, gets set dynamically on form valdiation\n- `o-forms-input--invalid`: identifies an invalid input, gets set dynamically on form valdiation. This requires additional markup to be added as a direct child of the `o-forms-input` element:\n```diff\n-<span class=\"o-forms-input\">\n+<span class=\"o-forms-input o-forms--invalid\">\n\t<!-- input(s) -->\n+\t<span class=\"o-forms-input__error>Error message here</span>\n</span>\n```\n- `o-forms-input--inline`: inlines all inputs with each other (usually only used on multiple input fields).\n\n\n### Errors\n\nIn terms of invalid inputs, `o-forms` has a built in mechanism to display custom errors and an error summary. If neither of these work for your product, you can also choose to use [native browser validation](#form-instance).\n\n#### Custom Errors\nIn order to provide customised error messages for an invalid input field, you'll need to add the message to the markup. In any of the structures shown in the markup above, the error message will need to live within the input container as a sibling to the input elements:\n```html\n...\n\t<span class=\"o-forms-input\">\n\t\t<!-- inputs -->\n\t\t<span class=\"o-forms-input__error\">This is the error message</span>\n\t</span>\n...\n```\nThe message is hidden by default, until the input field becomes invalid. \n\n#### Error Summary\n`o-forms` also generates an error message element when a form is submitted and invalid inputs are recognised.\n\nThis feature will collect the custom messages of the invalid fields if they are present in the markup, or will default to the browsers native error message if they aren't. It will associate the message to the title of the input that is invalid, generate a list of links at the top of the form, and focus on the first link.\n\nThis markup will always be generated dynamically if the [errorSummary option](#form-instance) is set to `true`.\n\n## Sass\n`o-forms` has a primary mixin; `oForms()`.\n\nYou can include styles for every input type and feature by calling that mixin:\n```scss\n@import 'o-forms';\n@include oForms();\n```\n\nIf you would like to be more specific about what aspects of the styles get output, then you'll need to provide the primary mixin with an `$opts` map. For example, in order to output styles for text inputs and checkboxes, and add the abilty to inlne them, you would use the following:\n```scss\n@import 'o-forms';\n@include oForms($opts: (\n\t'elements': ('text-input', 'checkbox'),\n\t'features': ('inline')\n));\n```\n### Options\n`o-forms` has many options due to its comprehensive nature.  \nThe `$opts` map accepts two lists with the following options:\n- `'elements'`:\n\t- `'checkbox'`\n\t- `'date'`\n\t- `'password'`\n\t- `'pseudo-radio-link'`\n\t- `'radio-round'`\n\t- `'radio-box'`\n\t- `'select'`\n\t- `'textarea'`\n\t- `'text'`\n\t- `'toggle'`\n- `'features'`:\n\t- `'disabled'`\n\t- `'inline'`\n\t- `'right'`\n\t- `'inverse'`\n\t- `'small'`\n\t- `'state'`\n\t- `'suffix'`\n\n_Note 1: `valid` and `invalid` styles are output with the base of `o-forms` so there is no need to include them in the list above._\n\n_Note 2: It's important to remember that not all features will apply to all input types. If there are any features you would like to see added to an input, please [get in touch with the team](#contact)._\n\n\n### Customisation\n\nThere is one public mixin to customise two types of input: [pseudo radio links](#pseudo-radio-links) and [box-styled `input[type=radio]`](#inputttyperadio-box).\nIt accepts four arguments:\n- `$input`: (required) either `'pseudo-radio-link'` or `'radio'`\n- `$modifier`: (required) this will name the modifier to add to the input container class list\n- `$icons`: (optional) accepts an icon or a list of icons to output according to the custom theme\n- `$theme`: (required) a map of the colors that define the custom theme:\n\t- `'controls-base'`: the base color of the theme\n\t- `'controls-checked'`: the background color of a checked input\n\t- `'controls-negative-checked-background'`: the background color for a 'negative' checked input\n\n```scss\n@include oFormsAddCustom({\n\t$input: 'radio',\n\t$modifier: 'my-theme', // outputs the class 'o-forms-input--my-theme',\n\t$icons: 'burger'\n\t$theme: (\n\t\tcontrols-base: 'claret',\n\t\tcontrols-checked-base: 'white',\n\t\tcontrols-negative-checked-background: 'claret-30'\n\t)\n})\n```\n\n## Accessibility\n\n`o-forms` has been written with a strong focus on accessibility.\nWe've chosen to override native browser validation and to provide an error summary on form submit (this behaviour relies on JavaScript to run). We [have a more detailed explanation](./ACCESSIBILITY.md) about these topics and writing markup to comply with that accessibility, please read through it to familiarise yourself with some of our reasoning and recommended practices.\n\n## JavaScript\n\nNo code will run automatically unless you are using the Build Service. You must either construct an `o-forms` object or fire an `o.DOMContentLoaded` event, which `o-forms` listens for.\n\nThe JavaScript for this component is primarily responsible for individual input validation and overall form validation.\n\nIf you would like to use an input without a form element, you can still apply validation to it with the `o-forms` [individual `Input` API](#individual-inputs).\n\n### Form Instance\n\nThe main `o-forms` JavaScript has been written to identify and run on a `<form>` element. You'll need to set up your form and include the data attribute `data-o-component=\"o-forms\"`:\n```html\n<form data-o-component=\"o-forms\">\n\t<!-- form elements as demonstrated in the markup section above  -->\n</form>\n```\n\nBy default, `o-forms` is initialised _without_ native browser validation, and with an error summary for invalid elements when the form is submitted. In order to use the default behaviour, you'll need to do the following:\n```js\nimport oForms from 'o-forms';\noForms.init()\n```\nThe default behaviour can be changed by configuring the options object:\n```js\noForms.init(null, {\n\tuseBrowserValidation: true, \n\terrorSummary: false\n})\n```\nYou can also set these values to the data attributes `data-o-forms-use-browser-validation` and `data-o-forms-error-summary` on the `<form>` element if you are not initialising the `oForms` instance in your product.\n\n### Individual Inputs\n\nIn the case where a single input is enough for a product but requires validation, you can initialise an `Input` instance:\n```js\nimport Input from 'o-forms/src/js/input';\nnew Input(myInputEl);\n```\n\n### State\n`o-forms` offers the ability to display a 'saving' or 'saved' state. However, currently the only input that accepts state is the [box-styled `input[type=radio]`](#inputtyperadio-box). If you would like to apply state to any other input, please [get in touch with the team](#contact).\n\n`o-forms` has no opinion about the timing of the states—it doesn't know when to change from 'saving' to 'saved', but it has a public method that allows the project to control this (shown below).\n\nIn order to set up a state, you'll need to use a method on an existing form instance. \n\nThis method accepts a state and a name argument. State can be one of 'saving', 'saved' or 'none', 'none' being responsible for removing the state from the input. The name argument must be the name of the inputs that will be recieving the state. For example:\n```html\n<form data-o-component=\"o-forms\">\n\t...\n\t\t<label>\n\t\t\t<span class=\"o-forms-input__label\">Daily</span>\n\t\t\t<input type=\"radio\" name=\"my-radio-box\"/>\n\t\t</label>\n\t\t\t<label>\n\t\t\t<span class=\"o-forms-input__label\">Weekly</span>\n\t\t\t<input type=\"radio\" name=\"my-radio-box\"/>\n\t\t</label>\n\t...\n</form>\n``` \n```js\nimport oForms from 'o-forms';\nlet myForm = oForms.init();\n// on event, e.g. click\nmyForm.setState('saving', 'my-radio-box');\n```\n\nYou also have the option of displaying state as an icon without text. In order to do this, you can call the method above with an extra argument:\n\n```js\nmyForm.setState('saving', 'my-radio-box', iconOnly: true);\n```\n\n\n## Migration\n\nState | Major Version | Last Minor Release | Migration guide |\n:---: | :---: | :---: | :---:\n✨ active | 7 | N/A | [migrate to v7](MIGRATION.md#migrating-from-v6-to-v7) |\n⚠ maintained | 6 | 6.0 | [migrate to v6](MIGRATION.md#migrating-from-v5-to-v6) |\n╳ deprecated | 5 | 5.11 | [migrate to v5](MIGRATION.md#migrating-from-v4-to-v5) |\n╳ deprecated | 4 | 4.1 | [migrate to v4](MIGRATION.md#migrating-from-v3-to-v4) |\n╳ deprecated | 3 | 3.5 | [migrate to v3](MIGRATION.md#migrating-from-v2-to-v3) |\n╳ deprecated | 2 | 2.0 | [migrate to v2](MIGRATION.md#migrating-from-v1-to-v2) |\n╳ deprecated | 1 | 1.0 | [migrate to v1](MIGRATION.md#migrating-to-v1) |\n╳ deprecated | 0 | 0.13 | N/A |\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-forms/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"o-forms\",\n\t\"main\": [\n\t\t\"main.scss\",\n\t\t\"main.js\"\n\t],\n\t\"dependencies\": {\n\t\t\"o-brand\": \"^3.2.3\",\n\t\t\"o-colors\": \"^4.0.1\",\n\t\t\"o-grid\": \"^4.0.0\",\n\t\t\"o-icons\": \"^5.7.0\",\n\t\t\"o-loading\": \"^3.0.0\",\n\t\t\"o-normalise\": \"^1.6.2\",\n\t\t\"o-typography\": \"^5.11.3\"\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "browser.js",
      "contents": "import oForms from \"./dist/js/forms\";\n\nvar constructAll = function constructAll() {\n  oForms.init();\n  document.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\nexport default oForms;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/checkboxes.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"checkbox-group-title\",\n\t\t\t\t\t\"info\": \"checkbox-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Stacked checkboxes\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 3\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-checkbox-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select at least one option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"This is a very long inlined checkbox to demonstrate the correct alignment of checkboxes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-inline-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"inline\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inline 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inline 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-checkbox-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and stacked checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 2\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 3\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"password-checkbox-group-title\",\n\t\t\t\t\t\"info\": \"password-checkbox-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"password\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Right side checkboxes\",\n\t\t\t\t\"prompt\": \"Interface demo only, password hide/show functionality is not currently included in o-forms.\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"password\",\n\t\t\t\t\t\"value\": \"password\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"show\",\n\t\t\t\t\t\"value\": \"Show password\",\n\t\t\t\t\t\"label\": \"o-forms-input__right\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"extra-content-checkbox-group-title\",\n\t\t\t\t\t\"info\": \"extra-content-checkbox-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Checkboxes with extra content\",\n\t\t\t\t\"prompt\": \"Indeterminate interface demo only, select/unselect all functionality is not currently included in o-forms\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"Select All\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"I confirm I have read and agree to the terms &amp; conditions, privacy policy and cookie policy*.\",\n\t\t\t\t\t\"additionalContent\": \"We will send you occasional emails to improve your experience of the Financial Times.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"By submitting this form, you indicate your consent to also being contacted by the Financial Times by email. post or phone about our other products, services or special offers unless you untick this box. You can change your preferences anytime in the My Account section.\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/custom.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"demo-radio\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Custom radio buttons and anchor\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"modifiers\": [ \"demo-pseudo-radio-link\" ],\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Anchor Link A\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Anchor Link B\",\n\t\t\t\t\t\"href\": \"#\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"demo-radio\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Custom radio buttons and anchor\",\n\t\t\t\t\"prompt\": \"With prefixed icons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Grid\",\n\t\t\t\t\t\"icon\": \"grid\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"List\",\n\t\t\t\t\t\"icon\": \"list\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"modifiers\": [ \"demo-pseudo-radio-link\" ],\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Grid Link\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true,\n\t\t\t\t\t\"icon\": \"grid\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"List Link\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"icon\": \"list\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/date.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"date-group-title\",\n\t\t\t\t\t\"info\": \"date-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Date input\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabled-date-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled date input\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-date-group-title\",\n\t\t\t\t\t\"info\": \"error-date-group-info\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Not a valid date\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Invalid date input\",\n\t\t\t\t\"prompt\": \"Exemplifies a pattern mismatch\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\"value\": \"01\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\"value\": \"24\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\"value\": \"2019\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-date-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"inline\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline date input\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/pa11y.json",
      "contents": "{\n\t\"multiple-inputs\": {\n\t\t\"variants\": [\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"checkbox-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Stacked checkboxes\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 3\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"disabed-checkbox-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled checkboxes\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"date-group-title\",\n\t\t\t\t\t\t\"info\": \"date-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Date input\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{2}\",\n\t\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"error-date-group-title\"\n\t\t\t\t\t},\n\t\t\t\t\t\"error\": \"Not a valid date\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"invalid\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Invalid date input\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{2}\",\n\t\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\t\"value\": \"01\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\t\"value\": \"24\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\t\"value\": \"2019\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Box style radio buttons\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"multiple-radio-box-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Multiple checkboxes\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Monthly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"inline-field\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t\t},\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"saving\",\n\t\t\t\t\t\t\"inline\"\n\t\t\t\t\t],\n\t\t\t\t\t\"state\": true\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Inline Saving state\",\n\t\t\t\t\t\"prompt\": \"When saving a preference\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"radio-round-group-title\",\n\t\t\t\t\t\t\"info\": \"radio-round-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Default radio buttons\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Default 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Default 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"disabed-radio-round-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled radio buttons\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"toggle\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"toggle-group-title\",\n\t\t\t\t\t\t\"info\": \"toggle-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Default toggle checkboxes\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"inverse\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"toggle\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"inverse-toggle-group-title\",\n\t\t\t\t\t\t\"info\": \"inverse-toggle-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Inverse checkboxes\",\n\t\t\t\t\t\"prompt\": \"Inverse prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"inverse\",\n\t\t\t\t\t\t\"value\": \"Inverse 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"inverse\",\n\t\t\t\t\t\t\"value\": \"Inverse 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"single-input\": {\n\t\t\"variants\": [\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Optional text input\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with a valid entry\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"valid\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"Valid Input\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with an invalid entry\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"invalid\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"Invalid Input\",\n\t\t\t\t\t\"error\": \"Something went wrong\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"disabled\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled text input\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"value\": \"Disabled\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with suffix\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"suffix\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"\",\n\t\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Password input\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"password\",\n\t\t\t\t\t\"value\": \"password\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"select\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Small select box\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\"Option 1\",\n\t\t\t\t\t\t\"Option 2\",\n\t\t\t\t\t\t\"Option 3\",\n\t\t\t\t\t\t\"Option 4\"\n\t\t\t\t\t],\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"small\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"select\": true,\n\t\t\t\t\"multiple\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Multiple select box\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\"Option 1\",\n\t\t\t\t\t\t\"Option 2\",\n\t\t\t\t\t\t\"Option 3\",\n\t\t\t\t\t\t\"Option 4\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textArea\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Optional text area\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"textarea\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textArea\": true,\n\t\t\t\t\"disabled\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled text area\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"value\": \"Disabled\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/pseudo-radio-links.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Link A\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Link B\",\n\t\t\t\t\t\"href\": \"#\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/radio-box.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Box style radio buttons\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"negative-radio-box-group-title\",\n\t\t\t\t\t\"info\": \"negative-radio-box-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Negative highlight\",\n\t\t\t\t\"prompt\": \"Requires a modifier on the label\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"negative\",\n\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"negative\",\n\t\t\t\t\t\"value\": \"No\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"modifier\": [\"negative\"]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"multiple-radio-box-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Multiple box-styled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Monthly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-radio-box-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled box-styled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Monthly\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select an option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error box-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"No\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"V-centered inline radio box\",\n\t\t\t\t\"modifiers\": [ \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"saving\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline box-style radio buttons\",\n\t\t\t\t\"prompt\": \"With a stacked saving state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saved-state-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"saved\", \"inline\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline saved state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saved\",\n\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saved\",\n\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"saving\", \"inline\" ],\n\t\t\t\t\"state\": true,\n\t\t\t\t\"icon\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline saving state\",\n\t\t\t\t\"prompt\": \"Icon only—also available for saved state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/radio-round.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-round-group-title\",\n\t\t\t\t\t\"info\": \"radio-round-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Default round-style radio buttons\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Default 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Default 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-radio-round-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select an option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-stacked-radio-round-group-title\",\n\t\t\t\t\t\"info\": \"inline-field-stacked-radio-round-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field\",\n\t\t\t\t\"prompt\": \"And stacked radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/select.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Default select box\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1 (low chars: qgjpy)\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Valid selection\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [\"valid\"]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Invalid selection\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"\",\n\t\t\t\t\"options\": [\"\", \"Option 1\", \"Option 2\", \"Option 3\" ],\n\t\t\t\t\"modifiers\": [\"invalid\"],\n\t\t\t\t\"error\": \"Please select an option\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"small\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"multiple\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Multiple select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Select box with suffix\",\n\t\t\t\t\"prompt\": \"And prompt text for good measure\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"suffix\" ],\n\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small select box with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"suffix\", \"small\" ],\n\t\t\t\t\"button\": \"o-buttons\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Short title\",\n\t\t\t\t\"prompt\": \"Long input\",\n\t\t\t\t\"modifiers\": [ \"shrink\"]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Vertically centered title\",\n\t\t\t\t\"modifiers\": [ \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"multiple\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline multiple selectbox\",\n\t\t\t\t\"prompt\": \"Multiple select boxes can also be inlined.\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/text-area.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Optional text area\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text area with a valid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"modifiers\": [ \"valid\" ],\n\t\t\t\t\"value\": \"Yup!\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text area with an invalid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"error\": \"Please fill out this field\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled text area\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"value\": \"Disabled\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline text area\",\n\t\t\t\t\"prompt\": \"Inline text area fields can be set in this way.\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Shrunken title\",\n\t\t\t\t\"prompt\": \"A prompt can go here\",\n\t\t\t\t\"modifiers\": [ \"shrink\"]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/text-input.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Optional text input\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with a valid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"valid\" ],\n\t\t\t\t\"value\": \"Valid Input\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with an invalid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ],\n\t\t\t\t\"error\": \"Please fill out this field\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled text input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"Disabled\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small text input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"small\" ],\n\t\t\t\t\"value\": \"Value\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"suffix\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small text input with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"small\", \"suffix\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"button\": \"o-buttons\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Shrunken title\",\n\t\t\t\t\"prompt\": \"Vertically centered\",\n\t\t\t\t\"modifiers\": [ \"shrink\", \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Password input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"password\",\n\t\t\t\t\"value\": \"password\"\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/toggle.json",
      "contents": "{\n  \"variants\": [\n    {\n      \"optional\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"toggle-group-title\",\n          \"info\": \"toggle-group-info\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Default toggle inputs\",\n        \"prompt\": \"Optional prompt text\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"default\",\n          \"value\": \"Stacked 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"default\",\n          \"value\": \"Stacked 2\"\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inlined-toggle-group-title\"\n        },\n        \"modifiers\": [ \"inline\" ]\n      },\n      \"title\": {\n        \"main\": \"Inline toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"optional\",\n          \"value\": \"Optional 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"optional\",\n          \"value\": \"Optional 2\"\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"disabed-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Disabled toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"disabled\",\n          \"value\": \"Disabled 1\",\n          \"checked\": true,\n          \"disabled\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"disabled\",\n          \"value\": \"Disabled 2\",\n          \"disabled\": true\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"error-toggle-group-title\"\n        },\n        \"error\": \"Something has gone wrong.\",\n        \"modifiers\": [ \"invalid\" ]\n      },\n      \"title\": {\n        \"main\": \"Error toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"error\",\n          \"value\": \"Error 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"error\",\n          \"value\": \"Error 2\"\n        }\n      ]\n    },\n    {\n      \"inline-field\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inline-field-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Inline field with toggle\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-field\",\n          \"value\": \"Inlined 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-field\",\n          \"value\": \"Inlined 2\"\n        }\n      ]\n    },\n    {\n      \"inline-field\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inline-field-toggle-group-title\"\n        },\n        \"modifiers\": [ \"inline\" ]\n      },\n      \"title\": {\n        \"main\": \"Inline field with inline toggle\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-all\",\n          \"value\": \"Inlined 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-all\",\n          \"value\": \"Inlined 2\"\n        }\n      ]\n    },\n    {\n      \"inverse\": true,\n      \"optional\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inverse-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Inverse checkboxes\",\n        \"prompt\": \"Inverse prompt text\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inverse\",\n          \"value\": \"Inverse 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inverse\",\n          \"value\": \"Inverse 2\"\n        }\n      ]\n    }\n  ]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "import '../../main.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tdocument.dispatchEvent(new CustomEvent('o.DOMContentLoaded'));\n});\n\nlet extraContentInput = document.querySelector(\"input[name='extra']\");\n// indeterminate states can only be set dynamically, there is no attribute for them.\nif (extraContentInput) { extraContentInput.indeterminate = true; }\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-forms-is-silent: false;\n@import \"../../../main\";\n\nbody {\n\t@include oColorsFor(page, background);\n}\n\n.demo {\n\tmargin: 12px;\n\tmax-width: 500px;\n}\n\n.demo-inverse {\n\tmargin-top: 16px;\n\tbackground-color: #262a33;\n\tpadding: 10px;\n\n\t.o-forms {\n\t\tmargin: 0;\n\t}\n}\n\n$custom-theme: (\n\tcontrols-base: 'claret',\n\tcontrols-checked-base: 'white',\n\tcontrols-negative-checked-background: 'claret-30'\n);\n\n$icon-list: ('grid', 'list');\n\n@include oFormsAddCustom(\n\t$input: 'pseudo-radio-link',\n\t$class: 'demo-pseudo-radio-link',\n\t$icons: $icon-list,\n\t$theme: $custom-theme\n);\n\n@include oFormsAddCustom(\n\t$input: 'radio',\n\t$class: 'demo-radio',\n\t$icons: $icon-list,\n\t$theme: $custom-theme\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/interactive.js",
      "contents": "import Forms from '../../src/js/forms.js';\n\nlet formEl = document.forms[0];\nconst form = new Forms(formEl);\n\nlet inputs = formEl.querySelectorAll('input[type=\"radio\"]');\n\nfor (let input of inputs) {\n\tinput.addEventListener('click', (e) => {\n\t\tlet name = e.target.name;\n\t\tform.setState('saving', name);\n\t\tsetTimeout(() => form.setState('saved', name), 400);\n\t\tsetTimeout(() => form.setState('none', name), 1000);\n\t});\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/interactive.mustache",
      "contents": "<form action=\"\" data-o-component=\"o-forms\">\n\n<div class=\"o-forms-field o-forms-field--optional\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t<span class=\"o-forms-title__prompt\">Optional prompt text</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t<label>\n\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"Day (DD)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"Month (MM)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"Year (YYYY)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t</label>\n\t\t<span class=\"o-forms-input__error\">Please fill out this field with the required format (DD/MM/YYYY)</span>\n\t</span>\n</div>\n\n<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input id=\"radio\" type=\"radio\" name=\"box\">\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"box\" checked>\n\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"required\" type=\"text\" name=\"text\" value=\"\" required>\n\t\t\t<span class=\"o-forms-input__error\">Please fill out this field</span>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t\t<span class=\"o-forms-title__prompt\">Optional prompt text</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<input class=\"o-buttons\" type=\"submit\"/>\n</form>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/multiple-input-field.mustache",
      "contents": "{{#variants}}\n\n{{#anchor}}\n\t<div class=\"o-forms-input o-forms-input--pseudo-radio-link {{#modifiers}}o-forms-input--{{.}}{{/modifiers}}\">\n\t\t{{#inputs}}\n\t\t\t<a class=\"\n\t\t\t\to-forms-input__link\n\t\t\t\t{{#current}} o-forms-input__link--current{{/current}}\n\t\t\t\t{{#icon}} o-forms-input__link--{{.}}-icon{{/icon}}\" href={{href}}>{{value}}</a>\n\t\t{{/inputs}}\n\t</div>\n{{/anchor}}\n\n{{^anchor}}\n\n{{#inverse}}<div class=\"demo-inverse\">{{/inverse}}\n\t\n\t<div class=\"o-forms-field\n\t\t{{#inline-field}} o-forms-field--inline{{/inline-field}}\n\t\t{{#inverse}} o-forms-field--inverse{{/inverse}}\n\t\t{{#optional}} o-forms-field--optional{{/optional}}\n\t\t{{#custom}} demo-custom-radio-theme{{/custom}}\" \n\t\trole=\"group\" \n\t\t{{#field.aria}}\n\t\t\taria-labelledby=\"{{label}}\"\n\t\t\t{{#info}}aria-describedby=\"{{info}}\"{{/info}}\n\t\t{{/field.aria}}>\n\t\t\n\t\t<span\tclass=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"{{field.aria.label}}\">{{title.main}}</span>\n\t\t\t{{#title.prompt}}\n\t\t\t\t<span class=\"o-forms-title__prompt\" {{#field.aria.info}} id={{field.aria.info}} {{/field.aria.info}}>{{.}}</span>\n\t\t\t{{/title.prompt}}\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--{{field.type}}{{#field.modifiers}} o-forms-input--{{.}}{{/field.modifiers}}\">\n\n\t\t\t{{#radioBox}}<div class=\"o-forms-input--radio-box__container\">{{/radioBox}}\n\n\t\t\t{{#inputs}}\n\t\t\t\t<label {{#label}}class=\"{{.}}\"{{/label}}>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"{{type}}\" \n\t\t\t\t\t\tname=\"{{name}}\"\n\t\t\t\t\t\tvalue=\"{{value}}\" \n\t\t\t\t\t\t{{#pattern}}pattern={{.}}{{/pattern}} \n\t\t\t\t\t\taria-label=\"{{value}}\" \n\t\t\t\t\t\t{{#checked}}checked{{/checked}} \n\t\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\n\t\t\t\t\t{{#name}}\n\t\t\t\t\t\t<span class=\"o-forms-input__label\n\t\t\t\t\t\t\t\t\t{{#modifier}} o-forms-input__label--{{.}}{{/modifier}}\n\t\t\t\t\t\t\t\t\t{{#icon}} o-forms-input__label__{{.}}-icon{{/icon}}\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t\t\t{{#pattern}}{{date}}{{/pattern}}{{^pattern}}{{value}}{{/pattern}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{{/name}}\n\n\t\t\t\t\t{{#additionalContent}}\n\t\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">{{.}}</span>\n\t\t\t\t\t{{/additionalContent}}\n\t\t\t\t</label>\n\t\t\t{{/inputs}}\n\n\t\t\t{{#radioBox}}</div>{{/radioBox}}\n\n\t\t\t{{#field.error}}<span class=\"o-forms-input__error\">{{.}}</span>{{/field.error}}\n\n\t\t\t{{#field.state}}<span class=\"o-forms-input__state {{#field.icon}}o-forms-input__state--icon-only{{/field.icon}}\"></span>{{/field.state}}\n\t\t</span>\n\t\n\t</div>\n\n{{#inverse}}</div>{{/inverse}}\n\n{{/anchor}}\n{{/variants}}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "{{#multiple-inputs}}\n\t{{> multiple-input-field }}\n{{/multiple-inputs}}\n\n{{#single-input}}\n\t{{> single-input-field }}\n{{/single-input}}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/single-input-field.mustache",
      "contents": "{{#variants}}\n\t<label class=\"o-forms-field{{#inline-field}} o-forms-field--inline{{/inline-field}}{{#optional}} o-forms-field--optional{{/optional}}\">\n\t\t\n\t\t<span\tclass=\"o-forms-title{{#title.modifiers}} o-forms-title--{{.}}{{/title.modifiers}}\">\n\t\t\t<span class=\"o-forms-title__main\">{{title.main}}</span>\n\t\t\t{{#title.prompt}}<span class=\"o-forms-title__prompt\">{{.}}</span>{{/title.prompt}}\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--{{input.type}}{{#input.modifiers}} o-forms-input--{{.}}{{/input.modifiers}}\">\n\n\t\t\t{{#textInput}}\n\t\t\t\t<input \n\t\t\t\t\ttype=\"{{input.type}}\" \n\t\t\t\t\tname=\"text\" \n\t\t\t\t\tvalue=\"{{input.value}}\" \n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\t\t\t{{/textInput}}\n\t\t\t\n\t\t\t{{#textArea}}\n\t\t\t\t<textarea \n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>{{input.value}}</textarea>\n\t\t\t{{/textArea}}\n\n\t\t\t{{#select}}\n\t\t\t\t<select \n\t\t\t\t\t{{#multiple}}multiple{{/multiple}}\n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\t\t\t\t\t{{#input.selected}}<option value=\"{{.}}\" selected>{{.}}</option>{{/input.selected}}\n\t\t\t\t\t{{#input.options}}<option value=\"{{.}}\">{{.}}</option>{{/input.options}}\n\t\t\t\t</select>\n\t\t\t{{/select}}\n\n\t\t\t{{#input.error}}<span class=\"o-forms-input__error\">{{.}}</span>{{/input.error}}\n\t\t\t{{#input.button}}<button class=\"{{.}}\">Go</button>{{/input.button}}\n\t\t</span>\n\t\n\t</label>\n{{/variants}}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/error-summary.js",
      "contents": "class ErrorSummary {\n  /**\n  * Class constructor.\n  * @param {Array} [elements] - An array of objects, where each object describes an invalid input element\n  * @example\n  * const example = [\n  *\t{\n  *\t\tid: 'text-input',\n  *\t\tvalid: false,\n  *\t\terror: 'Please fill out this field'\n  *\t\tlabel: 'Input Label'\n  *\t}\n  *\t...\n  *\t]\n  *\tnew ErrorSummary(example)\n  */\n  constructor(elements) {\n    this.elements = elements;\n    this.invalidInputs = [];\n    return this.createSummary();\n  }\n  /**\n   * Generate Node to hold list of invalid inputs\n   */\n\n\n  createSummary() {\n    var invalidInputs = [];\n    this.elements.forEach(element => {\n      if (element.valid) {\n        return;\n      }\n\n      invalidInputs.push(element);\n    });\n    var div = document.createElement('div');\n    div.classList.add('o-forms__error-summary');\n    div.setAttribute('aria-labelledby', 'error-summary');\n    div.setAttribute('role', 'alert');\n    div.innerHTML = '<h4 id=\"error-summary\">There is a problem</h4>';\n    div.appendChild(ErrorSummary.createList(invalidInputs));\n    return div;\n  }\n  /**\n   * Generate list of anchors\n   */\n\n\n  static createList(inputs) {\n    var list = document.createElement('ul');\n    inputs.forEach(input => {\n      if (input.id && !input.valid) {\n        var listItem = document.createElement('li');\n        var anchor = ErrorSummary.createAnchor(input);\n        listItem.appendChild(anchor);\n        list.appendChild(listItem);\n      }\n    });\n    return list;\n  }\n  /**\n   * Generate anchor element to point at invalid input\n   * @param {Object} [input] - The input object to construct an anchor for\n   */\n\n\n  static createAnchor(input) {\n    var anchor = document.createElement('a');\n    anchor.setAttribute('href', \"#\".concat(input.id));\n    anchor.innerHTML = \"<span>\".concat(input.label, \"</span>: \").concat(input.error);\n    anchor.addEventListener('click', e => {\n      e.preventDefault();\n      document.querySelector(e.target.hash).focus();\n    });\n    return anchor;\n  }\n\n}\n\nexport default ErrorSummary;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/forms.js",
      "contents": "import Input from \"./input\";\nimport State from \"./state\";\nimport ErrorSummary from \"./error-summary\";\n\nclass Forms {\n  /**\n  * Class constructor.\n  * @param {HTMLElement} [formElement] - The form element in the DOM\n  * @param {Object} [options={}] - An options object for configuring the form\n  */\n  constructor(formElement, options) {\n    if (formElement.nodeName !== 'FORM') {\n      throw new Error(\"[data-o-component=\\\"o-forms\\\"] must be set on a form element. It is currently set on a '\".concat(formElement.nodeName.toLowerCase(), \"'.\"));\n    }\n\n    this.form = formElement;\n    this.formInputs = Array.from(this.form.elements, element => new Input(element));\n    this.stateElements = [];\n    this.opts = Object.assign({\n      useBrowserValidation: false,\n      errorSummary: true\n    }, options || Forms.getDataAttributes(formElement));\n\n    if (!this.opts.useBrowserValidation) {\n      this.form.setAttribute('novalidate', true);\n      this.form.addEventListener('submit', this);\n    } else {\n      this.form.removeAttribute('novalidate');\n      this.submits = this.form.querySelectorAll('[type=submit]');\n      this.submits.forEach(submit => {\n        submit.addEventListener('click', this);\n        submit.addEventListener('keydown', this);\n      });\n    }\n  }\n  /**\n   * Get the data attributes from the formElement. If the form is being set up\n   * declaratively, this method is used to extract the data attributes from the DOM.\n   * @param {HTMLElement} formElement - The message element in the DOM\n   */\n\n\n  static getDataAttributes(formElement) {\n    if (!(formElement instanceof HTMLElement)) {\n      return {};\n    }\n\n    return Object.keys(formElement.dataset).reduce((options, key) => {\n      // Ignore data-o-component\n      if (key === 'oComponent') {\n        return options;\n      } // Build a concise key and get the option value\n\n\n      var shortKey = key.replace(/^oMessage(\\w)(\\w+)$/, (m, m1, m2) => m1.toLowerCase() + m2);\n      var value = formElement.dataset[key]; // Try parsing the value as JSON, otherwise just set it as a string\n\n      try {\n        options[shortKey] = JSON.parse(value.replace(/\\'/g, '\"'));\n      } catch (error) {\n        options[shortKey] = value;\n      }\n\n      return options;\n    }, {});\n  }\n  /**\n   * Event Handler\n   * @param {Object} event - The event emitted by element/window interactions\n   */\n\n\n  handleEvent(e) {\n    var RETURN_KEY = 13;\n\n    if (e.type === 'click' || e.type === 'keydown' && e.key === RETURN_KEY) {\n      if (this.form.checkValidity() === false) {\n        this.validateFormInputs();\n      }\n    }\n\n    if (e.type === 'submit') {\n      e.preventDefault();\n      var checkedElements = this.validateFormInputs();\n\n      if (checkedElements.some(input => input.valid === false)) {\n        if (this.opts.errorSummary) {\n          if (this.summary) {\n            this.summary = this.form.replaceChild(new ErrorSummary(checkedElements), this.summary);\n          } else {\n            this.summary = this.form.insertBefore(new ErrorSummary(checkedElements), this.form.firstElementChild);\n          }\n\n          this.summary.querySelector('a').focus();\n        }\n\n        return;\n      }\n\n      e.target.submit();\n    }\n  }\n  /**\n  * Form validation\n  * Validates every element in the form and creates input objects for the error summary\n  */\n\n\n  validateFormInputs() {\n    return this.formInputs.map(element => {\n      var valid = element.validate();\n      var input = element.input;\n      var field = input.closest('.o-forms-field');\n      var label = field ? field.querySelector('.o-forms-title__main').innerHTML : null;\n      var errorElement = field ? field.querySelector('.o-forms-input__error') : null;\n      var error = errorElement ? errorElement.innerHTML : input.validationMessage;\n      return {\n        id: input.id,\n        valid,\n        error: !valid ? error : null,\n        label\n      };\n    });\n  }\n  /**\n  * Input state\n  * @param {String} [name] - name of the input fields to add state to\n  * @param {String} [state] - type of state to apply — one of 'saving', 'saved', 'none'\n  */\n\n\n  setState(state, name) {\n    var iconOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var object = this.stateElements.find(item => item.name === name);\n\n    if (!object) {\n      object = {\n        name,\n        element: new State(this.form.elements[name], {\n          iconOnly\n        })\n      };\n      this.stateElements.push(object);\n    }\n\n    object.element.set(state);\n  }\n  /**\n  * Destroy form instance\n  */\n\n\n  destroy() {\n    if (!this.opts.useBrowserValidation) {\n      this.form.removeEventListener('submit', this);\n    } else {\n      this.submits.forEach(submit => {\n        submit.removeEventListener('click', this);\n        submit.removeEventListener('keydown', this);\n      });\n    }\n\n    this.form = null;\n    this.formInputs.forEach(input => input.destroy());\n    this.formInputs = null;\n    this.stateElements = null;\n    this.opts = null;\n  }\n  /**\n   * Initialise form component.\n   * @param {(HTMLElement|String)} rootElement - The root element to intialise a form in, or a CSS selector for the root element\n   * @param {Object} [options={}] - An options object for configuring the banners\n   */\n\n\n  static init(rootEl, opts) {\n    if (!rootEl) {\n      rootEl = document.body;\n    }\n\n    if (!(rootEl instanceof HTMLElement)) {\n      rootEl = document.querySelector(rootEl);\n    }\n\n    if (rootEl instanceof HTMLFormElement) {\n      return new Forms(rootEl, opts);\n    }\n\n    return Array.from(rootEl.querySelectorAll('[data-o-component=\"o-forms\"]'), rootEl => new Forms(rootEl, opts));\n  }\n\n}\n\nexport default Forms;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/input.js",
      "contents": "class Input {\n  /**\n  * Class constructor.\n  * @param {HTMLElement} [inputElement] - An input element in the DOM\n  */\n  constructor(element) {\n    this.input = element;\n    this.parent = element.closest('.o-forms-input');\n    this.input.addEventListener('blur', this);\n    this.input.addEventListener('input', this);\n    this.className = {\n      invalid: 'o-forms-input--invalid',\n      valid: 'o-forms-input--valid'\n    };\n  }\n  /**\n  * Event Handler\n  * @param {Object} event - The event emitted by element/window interactions\n  */\n\n\n  handleEvent(e) {\n    if (e.type === 'blur' || e.type === 'input') {\n      this.validate(e.target);\n    }\n  }\n  /**\n  * Input validation\n  * Conditions for input validation\n  */\n\n\n  validate() {\n    if (!this.parent) {\n      return;\n    }\n\n    if (!this.input.validity.valid) {\n      this.parent.classList.add(this.className.invalid);\n      return false;\n    } else if (this.input.validity.valid && this.parent.classList.contains(this.className.invalid)) {\n      this.parent.classList.replace(this.className.invalid, this.className.valid);\n    }\n\n    return true;\n  }\n\n  destroy() {\n    this.input.removeEventListener('blur', this);\n    this.input.removeEventListener('input', this);\n    this.input = null;\n  }\n\n}\n\nexport default Input;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/state.js",
      "contents": "class State {\n  /**\n  * Class constructor.\n  * @param {RadioNodeList} [inputs] - A NodeList of radio input elements\n  */\n  constructor(inputs, opts) {\n    var radioInputs = inputs instanceof RadioNodeList;\n\n    if (radioInputs) {\n      this.inputs = inputs;\n      this.parent = this.inputs[0].closest('.o-forms-input');\n    } else {\n      throw new Error('State can only be applied to `radio` type inputs.');\n    }\n\n    this._verify();\n\n    this.opts = Object.assign({\n      iconOnly: false\n    }, opts);\n    this.className = {\n      saving: 'o-forms-input--saving',\n      saved: 'o-forms-input--saved'\n    };\n  }\n  /**\n  * Create state element\n  * @access private\n  */\n\n\n  _generateStateEl() {\n    this.stateEl = document.createElement('span');\n    var classNames = this.opts.iconOnly ? ['o-forms-input__state', 'o-forms-input__state--icon-only'] : ['o-forms-input__state'];\n    this.stateEl.classList.add(...classNames);\n    this.parent.append(this.stateEl);\n  }\n  /**\n  * State setter\n  * @param {String} [state] type of state to display\n  */\n\n\n  set(state) {\n    if (!this.stateEl) {\n      this._generateStateEl();\n    }\n\n    if (state === 'saving') {\n      this._saving();\n    } else if (state === 'saved') {\n      this._saved();\n    } else if (state === 'none') {\n      this._remove();\n    } else {\n      throw new Error(\"\".concat(state, \" is not a recognised state, the options are 'saving', 'saved' or 'none'.\"));\n    }\n  }\n  /**\n  * Saving state\n  * @access private\n  */\n\n\n  _saving() {\n    this.parent.classList.add(this.className.saving);\n  }\n  /**\n  * Saved state\n  * @access private\n  */\n\n\n  _saved() {\n    this.parent.classList.replace(this.className.saving, this.className.saved);\n  }\n  /**\n  * Remove state\n  * @access private\n  */\n\n\n  _remove() {\n    this.parent.classList.remove(this.className.saved);\n    this.parent.removeChild(this.stateEl);\n    this.stateEl = null;\n  }\n  /**\n  * Verify input parent\n  * @access private\n  */\n\n\n  _verify() {\n    if (!this.parent.classList.contains('o-forms-input--radio-box')) {\n      throw new Error('State can only be set on radio inputs with a box style (o-forms-input--radio-box).');\n    } else if (this.parent.classList.contains('.o-forms--input-invalid')) {\n      throw new Error('State cannot be set on an invalid input field.');\n    }\n  }\n\n}\n\nexport default State;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_checkbox.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $right Whether to display checkbox to the right of text\n/// @output Styling for text inputs\n@mixin _oFormsCheckbox(\n\t$disabled: null,\n\t$right: null\n) {\n\t.o-forms-input--checkbox {\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:indeterminate + .o-forms-input__label:after {\n\t\t\t\t@include oIconsGetIcon('minus', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\n\t\t@if $right {\n\t\t\t.o-forms-input__right {\n\t\t\t\tdisplay: inline-block;\n\t\n\t\t\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__label {\n\t\t\t\t\tpadding-left: 0;\n\t\t\t\t\tpadding-right: $_o-forms-spacing-controls;\n\t\n\t\t\t\t\t&:before,\n\t\t\t\t\t&:after {\n\t\t\t\t\t\t// right: 0;\n\t\t\t\t\t\tleft: calc(100% - #{$_o-forms-spacing-six});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 0 $_o-forms-spacing-controls;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t\tbackground-color: _oFormsGet('default-background');\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 0;\n\t\t\t\ttransition: opacity 0.1s ease;\n\t\t\t}\n\n\t\t\t// this handles spacing between two input__label spans for the same input element, \n\t\t\t// which is necessary in the case of 'additional content'\n\t\t\t& + .o-forms-input__label {\n\t\t\t\tpadding-top: $_o-forms-spacing-three; \n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_date.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for date inputs\n@mixin _oFormsDate (\n\t$disabled: null,\n) {\n\t.o-forms-input--date {\n\n\t\tlabel {\n\t\t\tdisplay: flex;\n\t\t\tfloat: left;\n\t\t\tflex-direction: column-reverse;\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\tinput[type=text] { \n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tdisplay: block;\n\t\t\tmargin: $_o-forms-spacing-one $_o-forms-spacing-three 0 0;\n\t\t\t\n\t\t\t&[pattern$='{2}'],\n\t\t\t&[pattern$='[012]'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(2.2ch + 1em);\n\t\t\t}\n\t\t\t\n\t\t\t&[pattern$='{4}'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(4.2ch + 1em);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tpadding-top: $_o-forms-spacing-one;\n\t\t\tclear: both;\n\t\t}\n\t}\n}\n// sass-lint:enable no-qualifying-elements\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_pseudo-radio-link.scss",
      "contents": "/// @access private\n/// @output Styling for anchor 'controls'\n\n@mixin _oFormsPseudoRadioLink {\n\t.o-forms-input--pseudo-radio-link {\n\t\t@include _oFormsControlsBoxContainer();\n\t\t@include oTypographyMargin($top: 0);\n\n\t\t@include _oFormsPseudoRadioLinkStyles();\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// Outpus styling for box-styled anchors\n@mixin _oFormsPseudoRadioLinkStyles($theme: null) {\n\ta {\n\t\t@include _oFormsControlsBoxBase();\n\t\tbox-sizing: border-box;\n\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\tpadding: ($_o-forms-spacing-one + $_o-forms-spacing-half) $_o-forms-spacing-two;\n\t\tposition: relative;\n\t\ttext-decoration: none;\n\n\t\t&:hover {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&.o-forms-input__link--current {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:first-of-type) {\n\t\t\tborder-left: $_o-forms-border;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_radio-box.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioBox(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-box {\n\t\t@include _oFormsRadioBoxInputStyles();\n\n\t\t.o-forms-input--radio-box__container {\n\t\t\t@include _oFormsControlsBoxContainer();\n\t\t}\n\n\t\t&.o-forms-input--invalid .o-forms-input--radio-box__container {\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t}\n\n\t\tlabel {\n\t\t\t@include _oFormsControlsBoxBase();\n\n\t\t\t&:not(:first-of-type) {\n\t\t\t\tborder-left: $_o-forms-border;\n\t\t\t}\n\n\t\t\t.o-forms-input__label {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmax-height: $_o-forms-spacing-controls;\n\t\t\t\tpadding: $_o-forms-spacing-one;\n\t\t\t\ttransition: 0.3s background-color, 0.15s color ease-out;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: absolute;\n\t\t\topacity: 0;\n\n\t\t\t@if $disabled {\n\t\t\t\t&:disabled + .o-forms-input__label {\n\t\t\t\t\tcursor: default;\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridRespondTo(S) {\n\t\t\t&.o-forms-input--inline .o-forms-input__state {\n\t\t\t\tposition: relative;\n\t\t\t\tbottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__state {\n\t\t\tposition: absolute;\n\t\t\tbottom: -($_o-forms-spacing-five + $_o-forms-spacing-half);\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tbottom: -$_o-forms-spacing-four;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// @output styling for box-styled radio inputs\n@mixin _oFormsRadioBoxInputStyles($theme: null) {\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t& + .o-forms-input__label {\n\t\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:checked):not(:disabled):hover + .o-forms-input__label {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&:checked + .o-forms-input__label {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\n\t\t\t&.o-forms-input__label--negative {\n\t\t\t\tbackground-color: _oFormsGet('controls-negative-checked-background', $from: $theme);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_radio-round.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioRound(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-round {\n\t\t.o-forms-input__label {\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-controls;\n\t\t\tdisplay: inline-block;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\ttransition: opacity 0.1s ease-in;\n\t\t\t\tbackground-color: transparent;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oColorsFor(page, background);\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\theight: $_o-forms-spacing-three;\n\t\t\t\twidth: $_o-forms-spacing-three;\n\t\t\t\tmargin: $_o-forms-spacing-three / 2;\n\t\t\t\topacity: 0;\n\t\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t\t@media screen and (-ms-high-contrast: active) {\n\t\t\t\t\tbackground-color: windowText;\n\t\t\t\t}\n\t\t\t\t// sass-lint:enable no-vendor-prefixes\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:checked\t+ .o-forms-input__label:before {\n\t\t\t\tborder-color: _oFormsGet('controls-base');\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\tborder-color: $o-normalise-focus-color;\n\t\t\t\tbox-shadow: 0 0 0 $_o-forms-spacing-half $o-normalise-focus-color;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t}\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_select.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @output Styling for text areas\n@mixin _oFormsSelect(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null\n) {\n\t.o-forms-input--select {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall('select');\n\t\t}\n\t\t\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix('select');\n\t\t}\n\n\t\tselect {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('field-standard-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\tappearance: none;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: auto $_o-forms-spacing-six;\n\t\t\tborder-radius: 0;\n\t\t\tbackground-clip: padding-box;\n\t\t\tcolor: _oFormsGet('default-text');\n\t\t\tcursor: pointer;\n\t\t\toutline: none;\n\n\t\t\t// For iOS 6 that doesn't support 4-value background-position\n\t\t\t// Handles background sizing and positioning issues with IE10+\n\t\t\t// sass-lint:disable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\t\t\tbackground-position: right center;\n\t\t\tbackground-position: right $_o-forms-spacing-two center;\n\t\t\t-ms-background-position-x: right -75%;\n\t\t\t-ms-background-position-y: center;\n\t\t\t// sass-lint:enable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\n\t\t\t// Hide stock browser arrow in IE 10+\n\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t&::-ms-expand {\n\t\t\t\tcolor: oColorsGetPaletteColor('white');\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t// sass-lint:enable no-vendor-prefixes\n\n\t\t\t&:disabled {\n\t\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('disabled-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\t}\n\n\t\t\t&[multiple] {\n\t\t\t\tbackground-image: none;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_text-area.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for text areas\n@mixin _oFormsTextArea(\n\t$disabled: null\n) {\n\t.o-forms-input--textarea {\n\t\ttextarea {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tresize: vertical;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_text-input.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @param {Boolean} $small Whether to output small styles\n/// @param {String} $input-type Which text-like input to style (password, email, text)\n/// @output Styling for text inputs\n@mixin _oFormsTextInput(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null,\n\t$input-type: 'text'\n) {\n\t$element: 'input[type=#{$input-type}]';\n\n\t.o-forms-input--#{$input-type} {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall($element);\n\t\t}\n\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix($element);\n\t\t}\n\n\t\t#{$element} {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_toggle.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output styles for toggle based on a checkbox input\n@mixin _oFormsToggle($disabled: null) {\n\t.o-forms-input--toggle {\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-eight;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tcontent: '';\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle');\n\t\t\t\tborder-radius: $_o-forms-spacing-ten;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-ten;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: oColorsGetColorFor(page, background);\n\t\t\t\tborder: $_o-forms-spacing-half solid _oFormsGet('default-text');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-six;\n\t\t\t\ttransition: left 75ms ease-in-out;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: relative;\n\t\t\tleft: $_o-forms-spacing-three;\n\n\t\t\t&:checked + .o-forms-input__label {\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t\t&:after {\n\t\t\t\t\tleft: $_o-forms-spacing-four;\n\t\t\t\t\tborder-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:invalid:not(:disabled) + .o-forms-input__label:after {\n\t\t\t\tborder-color: inherit;\n\t\t\t}\n\t\t}\n\n\t\t@if $disabled {\n\t\t\tinput[type=checkbox]:disabled + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\tcolor: _oFormsGet('disabled-text');\n\n\t\t\t\t&:after {\n\t\t\t\t\tborder-color: _oFormsGet('toggle-disabled');\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-knob-disabled');\n\t\t\t\t}\n\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/main.scss",
      "contents": "// Styles shared between all input types\n@import './shared/brand';\n@import './shared/variables';\n@import './shared/base'; \n@import './shared/control-inputs'; // grouped inputs (e.g. radio/checkboxes) \n@import './shared/error-summary';\n@import './shared/inline';\n@import './shared/single-inputs'; // individual inputs (e.g. text, select)\n@import './shared/validity';\n\n// Input-type specific styles\n@import './checkbox';\n@import './date';\n@import './pseudo-radio-link';\n@import './radio-box';\n@import './radio-round';\n@import './select';\n@import './text-area';\n@import './text-input';\n@import './toggle';\n\n// Modifiers for certain input types\n@import './modifiers/custom'; // for radio box & anchors\n@import './modifiers/inverse'; // for toggle\n@import './modifiers/state'; // for radio box\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_custom.scss",
      "contents": "/// Transforms a custom theme map into brand variables. See `_brand.scss`.\n/// @access private\n/// @param {map|null} $theme - A custom theme map.\n/// @return {map} Brand variables.\n@function _oFormsThemeToBrandVariants($theme) {\n\t@if $theme {\n\t\t\t@if not index(map-keys($theme), 'controls-base') {\n\t\t\t\t@error \"The custom theme for box-styled controls is missing a 'controls-base' key. (see @mixin _oFormsAnchorBox)\";\n\t\t\t}\n\t\t// Add default value for checked background if not specified.\n\t\t@if not map-get($theme, 'negative-checked-background') {\n\t\t\t$theme: map-merge($theme, (\n\t\t\t\t'negative-checked-background': map-get($theme, 'checked-background')\n\t\t\t));\n\t\t}\n\n\t\t$theme: (\n\t\t\tcontrols-base: oColorsGetPaletteColor(map-get($theme, 'controls-base')),\n\t\t\tcontrols-checked-base: oColorsGetPaletteColor(map-get($theme, 'controls-checked-base')),\n\t\t\tcontrols-negative-checked-background: oColorsGetPaletteColor(map-get($theme, 'controls-negative-checked-background'))\n\t\t);\n\t}\n\n\t@return $theme;\n}\n\n/// @access private\n/// Outputs base styling for custom icons\n@mixin _oFormsCustomIconBase {\n\t.o-forms-input__label {\n\t\tmin-width: unset;\n\t}\n\n\ta.o-forms-input__link--current, // sass-lint:disable-line no-qualifying-elements\n\tinput[type=radio]:checked + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n/// @access public\n/// @param {String} $icon Name of the icon to request from the image set\n/// @param {String} $input Type of input to set icons on ('anchor' or radio)\n/// @param {Map|null} $theme Custom theme map\n@mixin _oFormsCustomIcon($icon, $input, $theme: null) {\n\t@include _oFormsCustomIconBase();\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\t$element: '';\n\n\t@if $input == 'radio' {\n\t\t$element: 'label .o-forms-input__label.o-forms-input__label__#{$icon}-icon';\n\t} @else {\n\t\t$element: 'a.o-forms-input__link--#{$icon}-icon';\n\t} \n\t\n\t#{$element} {\n\t\tpadding-left: $_o-forms-spacing-six;\n\t\tpadding-right: $_o-forms-spacing-two;\n\t\ttext-align: left;\n\n\t\t&:after,\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position-y: 0.175em;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t}\n\n\t\t&:before {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t}\n\n\t\t&:after {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-checked-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n\n/// @access public\n/// @param {String} $input Type of input to customise, one of 'anchor' or 'radio'\n/// @param {List} $icons A list of icons to render\n/// @param {Map|null} $theme Custom theme map\n@mixin oFormsAddCustom(\n\t$input: null,\n\t$class: null, \n\t$icons: null,\n\t$theme: null\n) {\n\n\t@if not $input {\n\t\t@error('Please specify whether you would like to customise radio inputs or anchors');\n\t}\n\n\t@if not $class {\n\t\t@error('Please specify a name for the custom modifier (e.g. o-forms-input--{custom-modifier}).');\n\t}\n\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\t.o-forms-input--#{$class} {\n\t\t@if $input == 'pseudo-radio-link' {\n\t\t\t@include _oFormsPseudoRadioLinkStyles($theme);\n\t\t} @else if $input == 'radio' {\n\t\t\t@include _oFormsRadioBoxInputStyles($theme);\n\t\t} @else {\n\t\t\t@error('#{$input} inputs do not accept customisation. If you need to customise this type of input, please contact the Origami team.');\n\t\t};\n\t}\n\n\t@if $icons {\n\t\t@each $icon in $icons {\n\t\t\t@include _oFormsCustomIcon($icon, $input, $theme);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_inverse.scss",
      "contents": "/// @access private\n/// @output styles for inverse toggle based on a checkbox input\n@mixin _oFormsInverse {\n\t.o-forms-field--inverse {\n\t\tcolor: _oFormsGet('toggle-inverse');\n\n\t\t.o-forms-title {\n\t\t\t.o-forms-title__main:after,\n\t\t\t.o-forms-title__prompt {\n\t\t\t\tcolor: rgba(_oFormsGet('toggle-inverse'), 0.7);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label:before {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\t.o-forms-input__label:after {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse-knob');\n\t\t\tborder-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\tinput[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements\n\t\t\t+ .o-forms-input__label:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_state.scss",
      "contents": "/// @access private\n/// @output styles for state animation for the box-styled radio inputs\n@mixin _oFormsState() {\n\t.o-forms-input__state {\n\t\t// the loading spinner and tick icons for state are mismatched in terms of size/padding, \n\t\t// the custom line-height aligns them as closely as possible (with minimal style changes)\n\t\t@include oTypographySize($scale: -1, $line-height: 1.75);\n\t\tcolor: inherit;\n\t\tdisplay: block;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-forms-input__state--icon-only:after {\n\t\t@include oNormaliseVisuallyHidden;\n\t}\n\n\t.o-forms-input--saving {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tpadding: 0;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saving';\n\t\t\t}\n\t\t\t\n\t\t\t&:before {\n\t\t\t\t@include oLoadingContent($opts: ('theme': 'dark', 'size': 'mini'));\n\t\t\t\tmargin: 0 $_o-forms-spacing-two 0 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-forms-input--saved {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tmargin-left: -$_o-forms-spacing-one;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saved';\n\t\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('valid-base'), $_o-forms-spacing-seven);\n\t\t\t\tvertical-align: middle;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t@include oGridRespondTo(S) {\n\t\t.o-forms-input--inline {\n\t\t\t&.o-forms-input--saving,\n\t\t\t&.o-forms-input--saved {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t\talign-items: center;\n\n\t\t\t\tlabel {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__state--icon-only {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.o-forms-input--saving .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three;\n\t\t\t}\n\n\t\t\t&.o-forms-input--saved .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three 0 $_o-forms-spacing-two;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_base.scss",
      "contents": "/// @access private\n/// @output Shared base state styles for all form elements.\n@mixin _oFormsBase() {\n\t@include _oFormsValidityStates();\n\n\t.o-forms-field,\n\t.o-forms-title,\n\t.o-forms-input {\n\t\t@include oTypographySans(0);\n\t}\n\t\n\t.o-forms-field {\t\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-bottom: $_o-forms-spacing-six;\n\t\tposition: relative;\n\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 0 $_o-forms-spacing-three;\n\t\t\tposition: relative;\n\t\t}\n\n\t\tlabel:last-of-type {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n\t\n\t.o-forms-field--optional .o-forms-title__main:after {\n\t\t@include oTypographySize($scale: -1);\n\t\tcontent: '(optional)';\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tfont-weight: 400;\n\t\tmargin-left: $_o-forms-spacing-one;\n\t}\n\n\t.o-forms-title__main {\n\t\t@include oTypographyBold('sans');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-title__prompt {\n\t\t@include oTypographySize($scale: -1);\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-input {\n\t\tmargin-top: $_o-forms-spacing-three;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsGet($variables, $from: null) {\n\t@return oBrandGet($component: 'o-forms', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsSupports($variant) {\n\t@return oBrandSupportsVariant($component: 'o-forms', $variant: $variant);\n}\n\n$_o-forms-shared-brand-config: (\n\tdefault-text: oColorsGetPaletteColor('black-80'),\n\tdefault-prompt-text: oColorsGetPaletteColor('black-60'),\n\tdefault-border: oColorsGetPaletteColor('black-50'),\n\tdefault-background: oColorsGetPaletteColor('white'),\n\tdisabled-text: oColorsGetPaletteColor('black-60'),\n\tdisabled-base: oColorsGetPaletteColor('black-10'),\n\tcontrols-base: oColorsGetPaletteColor('teal'),\n\tcontrols-checked-base: oColorsGetPaletteColor('white'),\n\tcontrols-negative-checked-background: oColorsGetPaletteColor('teal-30'),\n\tinvalid-base: oColorsGetPaletteColor('crimson'),\n\ttoggle: oColorsGetPaletteColor('black'),\n\ttoggle-knob: oColorsMix('black', 'white', 10),\n\ttoggle-selected: oColorsGetPaletteColor('teal'),\n\ttoggle-knob-selected: oColorsGetPaletteColor('white'),\n\ttoggle-disabled: oColorsGetPaletteColor('black-20'),\n\ttoggle-knob-disabled: oColorsGetPaletteColor('black-40'),\n\ttoggle-inverse: oColorsGetPaletteColor('white'),\n\ttoggle-inverse-knob: oColorsGetPaletteColor('slate'),\n\ttoggle-inverse-selected: oColorsGetPaletteColor('teal-100'),\n\tvalid-base: oColorsMix('jade', 'black', 80)\n);\n\n@include oBrandDefine('o-forms', 'master', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'internal', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'whitelabel', (\n\t'variables': map-merge($_o-forms-shared-brand-config, (\n\t\tcontrols-base: oColorsGetPaletteColor('black'),\n\t\tcontrols-negative-checked-background: oColorsGetPaletteColor('black'),\n\t\ttoggle-inverse-selected: oColorsGetPaletteColor('white'),\n\t\ttoggle-inverse-knob: oColorsGetPaletteColor('black'),\n\t)),\n\t'supports-variants': ()\n));\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_control-inputs.scss",
      "contents": "/// @access private\n/// @output Shared base styles for checkboxes, toggles, round- and box-style radio buttons.\n@mixin _oFormsControlsBase($disabled: null) {\n\tposition: absolute;\n\tpadding: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\n\t&:checked + .o-forms-input__label:after {\n\t\topacity: 1;\n\t}\n\n\t@if $disabled {\n\t\t&:disabled {\n\t\t\topacity: 0;\n\n\t\t\t+ .o-forms-input__label {\n\t\t\t\topacity: 0.4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared pseudo element styles for checkboxes, toggle, round- and box-style radio buttons.\n@mixin _oFormsControlsPseudoElements {\n\tcontent: '';\n\tcursor: pointer;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\tbox-sizing: border-box;\n}\n\n/// @access private\n/// @output Shared styles for box-style radio buttons and anchor controls\n@mixin _oFormsControlsBoxBase {\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tfloat: left;\n\tmargin: 0;\n\tmin-height: $_o-forms-spacing-seven;\n\tmin-width: oTypographySpacingSize(15);\n}\n\n/// @access private\n/// @output Shared styles for box-style containers\n@mixin _oFormsControlsBoxContainer {\n\t@include oTypographySize($scale: -1, $line-height: unset);\n\t@include oTypographyBold('sans');\n\tbox-sizing: border-box;\n\tborder: $_o-forms-border;\n\tdisplay: inline-block;\n\tpadding: $_o-forms-spacing-half;\n\ttext-align: center;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_error-summary.scss",
      "contents": "/// @access private\n/// @output styles for error summary\n@mixin _oFormsErrorSummary() {  \n\t.o-forms__error-summary {\n\t\t@include oTypographySans($scale: 0);\n\t\tbackground-color: oColorsMix('crimson', $percentage: 10);\n\t\tmargin-bottom: $_o-forms-spacing-four;\n\t\tpadding: $_o-forms-spacing-three;\n\n\t\th4 {\n\t\t\t@include oTypographyBold('sans');\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tmargin: 0 0 $_o-forms-spacing-one;\n\t\t}\n\n\t\tul {\n\t\t\tlist-style-type: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\n\t\t\tspan {\n\t\t\t\t@include oTypographyBold('sans');\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tdisplay: inline-block;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-top: $_o-forms-spacing-one;\n\t\t\ttext-decoration: none;\n\t\t\tborder-bottom: 1px solid _oFormsGet('invalid-base');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_inline.scss",
      "contents": "/// @access private\n/// @output styles for inlining labels and inputs\n@mixin _oFormsInline() {\n\t/* inline field titles and inputs\n\t\t[title] [input]\n\t\tor\n\t\t[title] [input]\n\t\t\t\t\t\t[input]\n\t*/\n\t@include oGridRespondTo(S) {\n\t\t&.o-forms-field--inline {\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-between;\n\t\t\n\t\t\t.o-forms-title {\n\t\t\t\tflex: 0 1 50%;\n\t\t\t\tmargin-right: $_o-forms-spacing-three;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\t&.o-forms-title--shrink {\n\t\t\t\t\tflex-basis: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.o-forms-title--vertical-center {\n\t\t\t\t\talign-self: center;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t.o-forms-input {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tflex: 1 0 50%;\n\t\t\t\talign-items: flex-start;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* inline inputs\n\t\t\t[title] \n\t\t\t[input] [input]\n\t\t\tor (combined with field inline)\n\t\t\t[title] [input] [input]\n\t\t*/\n\t\t.o-forms-input.o-forms-input--inline {\n\t\t\tdisplay: flex;\n\t\t\tflex-flow: row wrap;\n\t\t\t\t\n\t\t\tlabel {\n\t\t\t\tmargin: 0 $_o-forms-spacing-four $_o-forms-spacing-three 0;\n\t\t\t\tmax-width: 75%;\n\t\t\t}\n\n\t\t\t&.o-forms-input--date label,\n\t\t\t&.o-forms-input--radio-box label {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_single-inputs.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output base styles for select, textarea and text input\n@mixin _oFormsInputBase($disabled) {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tbackground-color: _oFormsGet('default-background');\n\tborder: $_o-forms-border;\n\tbox-sizing: border-box;\n\tmin-height: $_o-forms-spacing-ten;\n\tpadding: $_o-forms-spacing-two;\n\twidth: 100%;\n\n\t@if $disabled {\n\t\t@include _oFormsInputDisabled();\n\t}\n}\n\n/// @access private\n/// @output Shared disabled state styles for inputs.\n@mixin _oFormsInputDisabled {\n\t&:disabled {\n\t\tcursor: default;\n\t\tcolor: _oFormsGet('disabled-text');\n\t\tbackground-color: _oFormsGet('disabled-base');\n\t\tborder-color: _oFormsGet('disabled-base');\n\t}\n}\n\n/// @access private\n/// @output Shared small styles for select and text input.\n@mixin _oFormsInputSmall($element) {\n\t&.o-forms-input--small {\n\t\t#{$element} {\n\t\t\t@include oTypographySize($scale: -1, $line-height: 1.65);\n\t\t\tmin-height: $_o-forms-spacing-seven;\n\t\t\tpadding: 0 $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared suffix styles for select and text input.\n@mixin _oFormsInputSuffix($element) {\n\t&.o-forms-input--suffix {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t\t#{$element} {\n\t\t\tflex: 1;\n\t\t\tmargin-right: $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_validity.scss",
      "contents": "/// @access private\n/// @output styles for valid and invalid inputs\n@mixin _oFormsValidityStates() {\n\t.o-forms-input--valid {\n\t\t*:valid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\tborder-color: _oFormsGet('valid-base');\n\t\t}\n\t}\n\n\t*:invalid {\n\t\tbox-shadow: none;\n\t}\n\t\n\t.o-forms-input__error {\n\t\tdisplay: none;\n\t}\n\n\t.o-forms-input--invalid {\n\t\t*:invalid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\n\t\t\t+ .o-forms-input__label:before,\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\t@include oTypographySize($scale: -1);\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tbottom: -$_o-forms-spacing-five;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_variables.scss",
      "contents": "$o-forms-is-silent: true !default;\n\n$_o-forms-border: 1px solid _oFormsGet('default-border');\n\n$_o-forms-spacing-half: oTypographySpacingSize(1) / 2; //2px\n$_o-forms-spacing-one: oTypographySpacingSize(1); // 4px\n$_o-forms-spacing-two: oTypographySpacingSize(2); // 8px\n$_o-forms-spacing-three: oTypographySpacingSize(3); // 12px\n$_o-forms-spacing-four: oTypographySpacingSize(4); // 16px\n$_o-forms-spacing-five: oTypographySpacingSize(5); // 20px\n$_o-forms-spacing-six: oTypographySpacingSize(6); // 24px && checkbox/radio widths\n$_o-forms-spacing-seven: oTypographySpacingSize(7); // 28px\n$_o-forms-spacing-eight: oTypographySpacingSize(8); // 32px\n$_o-forms-spacing-nine: oTypographySpacingSize(9); // 36px\n$_o-forms-spacing-ten: oTypographySpacingSize(10); // 40px\n\n$_o-forms-spacing-controls: $_o-forms-spacing-nine + $_o-forms-spacing-half;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.js",
      "contents": "import oForms from './src/js/forms';\n\nconst constructAll = function() {\n\toForms.init();\n\tdocument.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\n\nexport default oForms;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "@import 'o-brand/main';\n@import 'o-grid/main';\n@import 'o-icons/main';\n@import 'o-loading/main';\n@import 'o-normalise/main';\n@import 'o-typography/main';\n\n@import 'src/scss/main';\n\n@mixin oForms($opts: (\n\t'elements': (\n\t\t'checkbox', \n\t\t'date',\n\t\t'password',\n\t\t'pseudo-radio-link', \n\t\t'radio-round',\n\t\t'radio-box',\n\t\t'select',\n\t\t'textarea',\n\t\t'text',\n\t\t'toggle'\n\t),\n\t'features': (\n\t\t'disabled',\n\t\t'inline',\n\t\t'inverse',\n\t\t'error-summary',\n\t\t'right',\n\t\t'small',\n\t\t'state',\n\t\t'suffix'\n\t)\n)) {\n\t$elements: map-get($opts, 'elements');\n\t$features: map-get($opts, 'features');\n\n\t$disabled: index($features, 'disabled');\n\t$inline: index($features, 'inline');\n\t$inverse: index($features, 'inverse');\n\t$error-summary: index($features, 'error-summary');\n\t$right: index($features, 'right');\n\t$small: index($features, 'small');\n\t$state: index($features, 'state');\n\t$suffix: index($features, 'suffix');\n\n\t@include _oFormsBase();\n\n\t@if index($elements, 'pseudo-radio-link') {\n\t\t@include _oFormsPseudoRadioLink();\n\t}\n\n\t@if index($elements, 'checkbox') {\n\t\t@include _oFormsCheckbox(\n\t\t\t$disabled,\n\t\t\t$right\n\t\t);\n\t}\n\n\t@if index($elements, 'date') {\n\t\t@include _oFormsDate(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'password') {\n\t\t@include _oFormsTextInput(\n\t\t\t$disabled,\n\t\t\t$input-type: 'password'\n\t\t);\n\t}\n\n\t@if index($elements, 'radio-round') {\n\t\t@include _oFormsRadioRound(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'radio-box') {\n\t\t@include _oFormsRadioBox(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'select') {\n\t\t@include _oFormsSelect(\n\t\t\t$disabled,\n\t\t\t$small,\n\t\t\t$suffix\n\t\t);\n\t}\n\n\t@if index($elements, 'textarea') {\n\t\t@include _oFormsTextArea($disabled);\n\t}\n\n\t@if index($elements, 'text') {\n\t\t@include _oFormsTextInput(\n\t\t\t$disabled,\n\t\t\t$small,\n\t\t\t$suffix,\n\t\t\t$input-type: 'text'\n\t\t);\n\t}\n\n\t@if index($elements, 'toggle') {\n\t\t@include _oFormsToggle($disabled);\n\t}\n\n\t@if $inline {\n\t\t@include _oFormsInline();\n\t}\n\n\t@if $inverse {\n\t\t@include _oFormsInverse();\n\t}\n\n\t@if $error-summary {\n\t\t@include _oFormsErrorSummary();\n\t}\n\n\t@if $state {\n\t\t@include _oFormsState();\n\t}\n}\n\n@if $o-forms-is-silent == false {\n\t@include oForms();\n\n\t$o-forms-is-silent: true !global;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"This component provides responsive styling for form fields and inputs. It provides validation and error handling for forms, as well.\",\n\t\"keywords\": [ \"form\", \"input\", \"field\", \"fieldset\", \"submit\" ],\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"components\",\n\t\"origamiVersion\": 1,\n\t\"brands\" : [\n\t\t\"master\",\n\t\t\"internal\",\n\t\t\"whitelabel\"\n\t],\n\t\"support\": \"https://github.com/Financial-Times/o-forms/issues\",\n\t\"supportContact\": {\n\t\t\"email\": \"origami.support@ft.com\",\n\t\t\"slack\": \"financialtimes/ft-origami\"\n\t},\n\t\"supportStatus\": \"active\",\n\t\"browserFeatures\": {\n\t\t\"required\": [\n\t\t\t\"DOMTokenList\",\n\t\t\t\"Element.prototype.closest\",\n\t\t\t\"Array.prototype.includes\"\n\t\t]\n\t},\n\t\"demosDefaults\": {\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"documentClasses\": \"demo\",\n\t\t\"dependencies\": [\n\t\t\t\"o-fonts@^3\",\n\t\t\t\"o-buttons@^5\",\n\t\t\t\"o-normalise@1\"\n\t\t]\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"name\": \"pseudo-radio-links\",\n\t\t\t\"title\": \"Pseudo Radio Links\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Anchor elements that imitate box-style radio inputs\",\n\t\t\t\"data\": \"/demos/src/data/pseudo-radio-links.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"checkboxes\",\n\t\t\t\"title\": \"Checkboxes\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Checkbox inputs with a default squared style\",\n\t\t\t\"data\": \"/demos/src/data/checkboxes.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"custom\",\n\t\t\t\"title\": \"Customised pseudo-radio-links/radio-boxes\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Custom theme example for box-styled anchors and radio inputs\",\n\t\t\t\"data\": \"/demos/src/data/custom.json\",\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"date\",\n\t\t\t\"title\": \"Date input\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Date input with text fields instead of a date picker\",\n\t\t\t\"data\": \"/demos/src/data/date.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"radio-box\",\n\t\t\t\"title\": \"Box-styled radio inputs\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Radio button inputs with a box-like style\",\n\t\t\t\"data\": \"/demos/src/data/radio-box.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"radio-round\",\n\t\t\t\"title\": \"Round-styled radio inputs\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Radio button inputs with a default circular style\",\n\t\t\t\"data\": \"/demos/src/data/radio-round.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toggle\",\n\t\t\t\"title\": \"Toggle\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Checkbox inputs with a toggle style\",\n\t\t\t\"data\": \"/demos/src/data/toggle.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"text-input\",\n\t\t\t\"title\": \"Text input\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Regular text input\",\n\t\t\t\"data\": \"/demos/src/data/text-input.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"text-area\",\n\t\t\t\"title\": \"Text Area\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Regular textarea input\",\n\t\t\t\"data\": \"/demos/src/data/text-area.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"title\": \"Select boxes\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Dropdown/Selection inputs\",\n\t\t\t\"data\": \"/demos/src/data/select.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"title\": \"Accessibility testing\",\n\t\t\t\"template\": \"/demos/src/pa11y.mustache\",\n\t\t\t\"description\": \"pa11y\",\n\t\t\t\"data\": \"/demos/src/data/pa11y.json\",\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"interactive\",\n\t\t\t\"title\": \"Interactive form demo\",\n\t\t\t\"template\": \"/demos/src/interactive.mustache\",\n\t\t\t\"description\": \"Illustrates validation and state behaviour with form JS\",\n\t\t\t\"js\": \"demos/src/interactive.js\",\n\t\t\t\"hidden\": true\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-forms\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {\n\t\t\"@financial-times/o-brand\": \"^3.2.3\",\n\t\t\"@financial-times/o-colors\": \"^4.0.1\",\n\t\t\"@financial-times/o-grid\": \"^4.0.0\",\n\t\t\"@financial-times/o-icons\": \"^5.7.0\",\n\t\t\"@financial-times/o-loading\": \"^3.0.0\",\n\t\t\"@financial-times/o-normalise\": \"^1.6.2\",\n\t\t\"@financial-times/o-typography\": \"^5.11.3\"\n\t},\n\t\"component\": \"o-forms\",\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/error-summary.js",
      "contents": "class ErrorSummary {\n\t/**\n\t* Class constructor.\n\t* @param {Array} [elements] - An array of objects, where each object describes an invalid input element\n\t* @example\n\t* const example = [\n\t*\t{\n\t*\t\tid: 'text-input',\n\t*\t\tvalid: false,\n\t*\t\terror: 'Please fill out this field'\n\t*\t\tlabel: 'Input Label'\n\t*\t}\n\t*\t...\n\t*\t]\n\t*\tnew ErrorSummary(example)\n\t*/\n\tconstructor(elements) {\n\t\tthis.elements = elements;\n\t\tthis.invalidInputs = [];\n\n\t\treturn this.createSummary();\n\t}\n\n\t/**\n\t * Generate Node to hold list of invalid inputs\n\t */\n\tcreateSummary() {\n\t\tlet invalidInputs = [];\n\t\tthis.elements.forEach(element => {\n\t\t\tif (element.valid) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinvalidInputs.push(element);\n\t\t});\n\n\t\tlet div = document.createElement('div');\n\t\tdiv.classList.add('o-forms__error-summary');\n\t\tdiv.setAttribute('aria-labelledby', 'error-summary');\n\t\tdiv.setAttribute('role', 'alert');\n\t\tdiv.innerHTML = '<h4 id=\"error-summary\">There is a problem</h4>';\n\n\t\tdiv.appendChild(ErrorSummary.createList(invalidInputs));\n\t\treturn div;\n\t}\n\n\t/**\n\t * Generate list of anchors\n\t */\n\tstatic createList(inputs) {\n\t\tlet list = document.createElement('ul');\n\t\tinputs.forEach(input => {\n\t\t\tif (input.id && !input.valid) {\n\t\t\t\tlet listItem = document.createElement('li');\n\t\t\t\tlet anchor = ErrorSummary.createAnchor(input);\n\t\t\t\tlistItem.appendChild(anchor);\n\t\t\t\tlist.appendChild(listItem);\n\t\t\t}\n\t\t});\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Generate anchor element to point at invalid input\n\t * @param {Object} [input] - The input object to construct an anchor for\n\t */\n\tstatic createAnchor(input) {\n\t\tlet anchor = document.createElement('a');\n\t\tanchor.setAttribute('href', `#${input.id}`);\n\t\tanchor.innerHTML = `<span>${input.label}</span>: ${input.error}`;\n\t\tanchor.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tdocument.querySelector(e.target.hash).focus();\n\t\t});\n\t\treturn anchor;\n\t}\n}\n\nexport default ErrorSummary;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/forms.js",
      "contents": "import Input from './input';\nimport State from './state';\nimport ErrorSummary from './error-summary';\n\nclass Forms {\n\t/**\n\t* Class constructor.\n\t* @param {HTMLElement} [formElement] - The form element in the DOM\n\t* @param {Object} [options={}] - An options object for configuring the form\n\t*/\n\tconstructor(formElement, options) {\n\t\tif (formElement.nodeName !== 'FORM') {\n\t\t\tthrow new Error(`[data-o-component=\"o-forms\"] must be set on a form element. It is currently set on a '${formElement.nodeName.toLowerCase()}'.`);\n\t\t}\n\n\t\tthis.form = formElement;\n\t\tthis.formInputs = Array.from(this.form.elements, element => new Input(element));\n\t\tthis.stateElements = [];\n\n\t\tthis.opts = Object.assign({\n\t\t\tuseBrowserValidation: false,\n\t\t\terrorSummary: true\n\t\t}, options || Forms.getDataAttributes(formElement));\n\n\t\tif (!this.opts.useBrowserValidation) {\n\t\t\tthis.form.setAttribute('novalidate', true);\n\t\t\tthis.form.addEventListener('submit', this);\n\t\t} else {\n\t\t\tthis.form.removeAttribute('novalidate');\n\t\t\tthis.submits = this.form.querySelectorAll('[type=submit]');\n\t\t\tthis.submits.forEach(submit => {\n\t\t\t\tsubmit.addEventListener('click', this);\n\t\t\t\tsubmit.addEventListener('keydown', this);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the data attributes from the formElement. If the form is being set up\n\t * declaratively, this method is used to extract the data attributes from the DOM.\n\t * @param {HTMLElement} formElement - The message element in the DOM\n\t */\n\tstatic getDataAttributes(formElement) {\n\t\tif (!(formElement instanceof HTMLElement)) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn Object.keys(formElement.dataset).reduce((options, key) => {\n\t\t\t// Ignore data-o-component\n\t\t\tif (key === 'oComponent') {\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\t// Build a concise key and get the option value\n\t\t\tconst shortKey = key.replace(/^oMessage(\\w)(\\w+)$/, (m, m1, m2) => m1.toLowerCase() + m2);\n\t\t\tconst value = formElement.dataset[key];\n\n\t\t\t// Try parsing the value as JSON, otherwise just set it as a string\n\t\t\ttry {\n\t\t\t\toptions[shortKey] = JSON.parse(value.replace(/\\'/g, '\"'));\n\t\t\t} catch (error) {\n\t\t\t\toptions[shortKey] = value;\n\t\t\t}\n\n\t\t\treturn options;\n\t\t}, {});\n\t}\n\n\t/**\n\t * Event Handler\n\t * @param {Object} event - The event emitted by element/window interactions\n\t */\n\thandleEvent(e) {\n\t\tconst RETURN_KEY = 13;\n\t\tif (e.type === 'click' || (e.type === 'keydown' && e.key === RETURN_KEY)) {\n\t\t\tif (this.form.checkValidity() === false) {\n\t\t\t\tthis.validateFormInputs();\n\t\t\t}\n\t\t}\n\n\t\tif (e.type === 'submit') {\n\t\t\te.preventDefault();\n\t\t\tlet checkedElements = this.validateFormInputs();\n\n\t\t\tif (checkedElements.some(input => input.valid === false)) {\n\t\t\t\tif (this.opts.errorSummary) {\n\t\t\t\t\tif (this.summary) {\n\t\t\t\t\t\tthis.summary = this.form.replaceChild(new ErrorSummary(checkedElements), this.summary);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.summary = this.form.insertBefore(new ErrorSummary(checkedElements), this.form.firstElementChild);\n\t\t\t\t\t}\n\t\t\t\t\tthis.summary.querySelector('a').focus();\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.target.submit();\n\t\t}\n\t}\n\n\t/**\n\t* Form validation\n\t* Validates every element in the form and creates input objects for the error summary\n\t*/\n\tvalidateFormInputs () {\n\t\treturn this.formInputs.map(element => {\n\t\t\tlet valid = element.validate();\n\t\t\tlet input = element.input;\n\t\t\tlet field = input.closest('.o-forms-field');\n\t\t\tlet label = field ? field.querySelector('.o-forms-title__main').innerHTML : null;\n\t\t\tlet errorElement = field ? field.querySelector('.o-forms-input__error') : null;\n\t\t\tlet error = errorElement ? errorElement.innerHTML : input.validationMessage;\n\t\t\treturn {\n\t\t\t\tid: input.id,\n\t\t\t\tvalid,\n\t\t\t\terror: !valid ? error : null,\n\t\t\t\tlabel\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t* Input state\n\t* @param {String} [name] - name of the input fields to add state to\n\t* @param {String} [state] - type of state to apply — one of 'saving', 'saved', 'none'\n\t*/\n\tsetState(state, name, iconOnly = false) {\n\t\tlet object = this.stateElements.find(item => item.name === name);\n\t\tif (!object) {\n\t\t\tobject = {\n\t\t\t\tname,\n\t\t\t\telement: new State(this.form.elements[name], { iconOnly })\n\t\t\t};\n\n\t\t\tthis.stateElements.push(object);\n\t\t}\n\t\tobject.element.set(state);\n\t}\n\n\t/**\n\t* Destroy form instance\n\t*/\n\tdestroy() {\n\t\tif (!this.opts.useBrowserValidation) {\n\t\t\tthis.form.removeEventListener('submit', this);\n\t\t} else {\n\t\t\tthis.submits.forEach(submit => {\n\t\t\t\tsubmit.removeEventListener('click', this);\n\t\t\t\tsubmit.removeEventListener('keydown', this);\n\t\t\t});\n\t\t}\n\t\tthis.form = null;\n\t\tthis.formInputs.forEach(input => input.destroy());\n\t\tthis.formInputs = null;\n\t\tthis.stateElements = null;\n\t\tthis.opts = null;\n\t}\n\n\t/**\n\t * Initialise form component.\n\t * @param {(HTMLElement|String)} rootElement - The root element to intialise a form in, or a CSS selector for the root element\n\t * @param {Object} [options={}] - An options object for configuring the banners\n\t */\n\tstatic init(rootEl, opts) {\n\t\tif (!rootEl) {\n\t\t\trootEl = document.body;\n\t\t}\n\n\t\tif (!(rootEl instanceof HTMLElement)) {\n\t\t\trootEl = document.querySelector(rootEl);\n\t\t}\n\n\t\tif (rootEl instanceof HTMLFormElement) {\n\t\t\treturn new Forms(rootEl, opts);\n\t\t}\n\n\t\treturn Array.from(rootEl.querySelectorAll('[data-o-component=\"o-forms\"]'), rootEl => new Forms(rootEl, opts));\n\t}\n}\n\nexport default Forms;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/input.js",
      "contents": "class Input {\n\t/**\n\t* Class constructor.\n\t* @param {HTMLElement} [inputElement] - An input element in the DOM\n\t*/\n\tconstructor(element) {\n\t\tthis.input = element;\n\t\tthis.parent = element.closest('.o-forms-input');\n\n\t\tthis.input.addEventListener('blur', this);\n\t\tthis.input.addEventListener('input', this);\n\n\t\tthis.className = {\n\t\t\tinvalid: 'o-forms-input--invalid',\n\t\t\tvalid: 'o-forms-input--valid'\n\t\t};\n\t}\n\n\t/**\n\t* Event Handler\n\t* @param {Object} event - The event emitted by element/window interactions\n\t*/\n\thandleEvent(e) {\n\t\tif (e.type === 'blur' || e.type === 'input') {\n\t\t\tthis.validate(e.target);\n\t\t}\n\t}\n\n\t/**\n\t* Input validation\n\t* Conditions for input validation\n\t*/\n\tvalidate() {\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.input.validity.valid) {\n\t\t\tthis.parent.classList.add(this.className.invalid);\n\t\t\treturn false;\n\n\t\t} else if (this.input.validity.valid && this.parent.classList.contains(this.className.invalid)) {\n\t\t\tthis.parent.classList.replace(this.className.invalid, this.className.valid);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdestroy() {\n\t\tthis.input.removeEventListener('blur', this);\n\t\tthis.input.removeEventListener('input', this);\n\t\tthis.input = null;\n\t}\n}\n\nexport default Input;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/state.js",
      "contents": "class State {\n\t/**\n\t* Class constructor.\n\t* @param {RadioNodeList} [inputs] - A NodeList of radio input elements\n\t*/\n\tconstructor(inputs, opts) {\n\t\tlet radioInputs = inputs instanceof RadioNodeList;\n\t\tif (radioInputs) {\n\t\t\tthis.inputs = inputs;\n\t\t\tthis.parent = this.inputs[0].closest('.o-forms-input');\n\t\t} else {\n\t\t\tthrow new Error('State can only be applied to `radio` type inputs.');\n\t\t}\n\n\t\tthis._verify();\n\t\tthis.opts = Object.assign({\n\t\t\ticonOnly: false\n\t\t}, opts);\n\n\t\tthis.className = {\n\t\t\tsaving: 'o-forms-input--saving',\n\t\t\tsaved: 'o-forms-input--saved'\n\t\t};\n\t}\n\n\t/**\n\t* Create state element\n\t* @access private\n\t*/\n\t_generateStateEl() {\n\t\tthis.stateEl = document.createElement('span');\n\t\tlet classNames = this.opts.iconOnly ? ['o-forms-input__state', 'o-forms-input__state--icon-only'] : ['o-forms-input__state'];\n\t\t this.stateEl.classList.add(...classNames);\n\t\tthis.parent.append(this.stateEl);\n\t}\n\n\t/**\n\t* State setter\n\t* @param {String} [state] type of state to display\n\t*/\n\tset(state) {\n\t\tif (!this.stateEl) {\n\t\t\tthis._generateStateEl();\n\t\t}\n\n\t\tif (state === 'saving') {\n\t\t\tthis._saving();\n\t\t} else if (state === 'saved') {\n\t\t\tthis._saved();\n\t\t} else if (state === 'none') {\n\t\t\tthis._remove();\n\t\t} else {\n\t\t\tthrow new Error(`${state} is not a recognised state, the options are 'saving', 'saved' or 'none'.`);\n\t\t}\n\t}\n\n\t/**\n\t* Saving state\n\t* @access private\n\t*/\n\t_saving() {\n\t\tthis.parent.classList.add(this.className.saving);\n\t}\n\n\t/**\n\t* Saved state\n\t* @access private\n\t*/\n\t_saved() {\n\t\tthis.parent.classList.replace(this.className.saving, this.className.saved);\n\t}\n\n\t/**\n\t* Remove state\n\t* @access private\n\t*/\n\t_remove() {\n\t\tthis.parent.classList.remove(this.className.saved);\n\t\tthis.parent.removeChild(this.stateEl);\n\t\tthis.stateEl = null;\n\t}\n\n\t/**\n\t* Verify input parent\n\t* @access private\n\t*/\n\t_verify() {\n\t\tif (!this.parent.classList.contains('o-forms-input--radio-box')) {\n\t\t\tthrow new Error('State can only be set on radio inputs with a box style (o-forms-input--radio-box).');\n\t\t} else if (this.parent.classList.contains('.o-forms--input-invalid')) {\n\t\t\tthrow new Error('State cannot be set on an invalid input field.');\n\t\t}\n\t}\n}\n\nexport default State;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_checkbox.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $right Whether to display checkbox to the right of text\n/// @output Styling for text inputs\n@mixin _oFormsCheckbox(\n\t$disabled: null,\n\t$right: null\n) {\n\t.o-forms-input--checkbox {\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:indeterminate + .o-forms-input__label:after {\n\t\t\t\t@include oIconsGetIcon('minus', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\n\t\t@if $right {\n\t\t\t.o-forms-input__right {\n\t\t\t\tdisplay: inline-block;\n\t\n\t\t\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__label {\n\t\t\t\t\tpadding-left: 0;\n\t\t\t\t\tpadding-right: $_o-forms-spacing-controls;\n\t\n\t\t\t\t\t&:before,\n\t\t\t\t\t&:after {\n\t\t\t\t\t\t// right: 0;\n\t\t\t\t\t\tleft: calc(100% - #{$_o-forms-spacing-six});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 0 $_o-forms-spacing-controls;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t\tbackground-color: _oFormsGet('default-background');\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 0;\n\t\t\t\ttransition: opacity 0.1s ease;\n\t\t\t}\n\n\t\t\t// this handles spacing between two input__label spans for the same input element, \n\t\t\t// which is necessary in the case of 'additional content'\n\t\t\t& + .o-forms-input__label {\n\t\t\t\tpadding-top: $_o-forms-spacing-three; \n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_date.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for date inputs\n@mixin _oFormsDate (\n\t$disabled: null,\n) {\n\t.o-forms-input--date {\n\n\t\tlabel {\n\t\t\tdisplay: flex;\n\t\t\tfloat: left;\n\t\t\tflex-direction: column-reverse;\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\tinput[type=text] { \n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tdisplay: block;\n\t\t\tmargin: $_o-forms-spacing-one $_o-forms-spacing-three 0 0;\n\t\t\t\n\t\t\t&[pattern$='{2}'],\n\t\t\t&[pattern$='[012]'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(2.2ch + 1em);\n\t\t\t}\n\t\t\t\n\t\t\t&[pattern$='{4}'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(4.2ch + 1em);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tpadding-top: $_o-forms-spacing-one;\n\t\t\tclear: both;\n\t\t}\n\t}\n}\n// sass-lint:enable no-qualifying-elements\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_pseudo-radio-link.scss",
      "contents": "/// @access private\n/// @output Styling for anchor 'controls'\n\n@mixin _oFormsPseudoRadioLink {\n\t.o-forms-input--pseudo-radio-link {\n\t\t@include _oFormsControlsBoxContainer();\n\t\t@include oTypographyMargin($top: 0);\n\n\t\t@include _oFormsPseudoRadioLinkStyles();\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// Outpus styling for box-styled anchors\n@mixin _oFormsPseudoRadioLinkStyles($theme: null) {\n\ta {\n\t\t@include _oFormsControlsBoxBase();\n\t\tbox-sizing: border-box;\n\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\tpadding: ($_o-forms-spacing-one + $_o-forms-spacing-half) $_o-forms-spacing-two;\n\t\tposition: relative;\n\t\ttext-decoration: none;\n\n\t\t&:hover {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&.o-forms-input__link--current {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:first-of-type) {\n\t\t\tborder-left: $_o-forms-border;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_radio-box.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioBox(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-box {\n\t\t@include _oFormsRadioBoxInputStyles();\n\n\t\t.o-forms-input--radio-box__container {\n\t\t\t@include _oFormsControlsBoxContainer();\n\t\t}\n\n\t\t&.o-forms-input--invalid .o-forms-input--radio-box__container {\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t}\n\n\t\tlabel {\n\t\t\t@include _oFormsControlsBoxBase();\n\n\t\t\t&:not(:first-of-type) {\n\t\t\t\tborder-left: $_o-forms-border;\n\t\t\t}\n\n\t\t\t.o-forms-input__label {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmax-height: $_o-forms-spacing-controls;\n\t\t\t\tpadding: $_o-forms-spacing-one;\n\t\t\t\ttransition: 0.3s background-color, 0.15s color ease-out;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: absolute;\n\t\t\topacity: 0;\n\n\t\t\t@if $disabled {\n\t\t\t\t&:disabled + .o-forms-input__label {\n\t\t\t\t\tcursor: default;\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridRespondTo(S) {\n\t\t\t&.o-forms-input--inline .o-forms-input__state {\n\t\t\t\tposition: relative;\n\t\t\t\tbottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__state {\n\t\t\tposition: absolute;\n\t\t\tbottom: -($_o-forms-spacing-five + $_o-forms-spacing-half);\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tbottom: -$_o-forms-spacing-four;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// @output styling for box-styled radio inputs\n@mixin _oFormsRadioBoxInputStyles($theme: null) {\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t& + .o-forms-input__label {\n\t\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:checked):not(:disabled):hover + .o-forms-input__label {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&:checked + .o-forms-input__label {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\n\t\t\t&.o-forms-input__label--negative {\n\t\t\t\tbackground-color: _oFormsGet('controls-negative-checked-background', $from: $theme);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_radio-round.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioRound(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-round {\n\t\t.o-forms-input__label {\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-controls;\n\t\t\tdisplay: inline-block;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\ttransition: opacity 0.1s ease-in;\n\t\t\t\tbackground-color: transparent;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oColorsFor(page, background);\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\theight: $_o-forms-spacing-three;\n\t\t\t\twidth: $_o-forms-spacing-three;\n\t\t\t\tmargin: $_o-forms-spacing-three / 2;\n\t\t\t\topacity: 0;\n\t\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t\t@media screen and (-ms-high-contrast: active) {\n\t\t\t\t\tbackground-color: windowText;\n\t\t\t\t}\n\t\t\t\t// sass-lint:enable no-vendor-prefixes\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:checked\t+ .o-forms-input__label:before {\n\t\t\t\tborder-color: _oFormsGet('controls-base');\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\tborder-color: $o-normalise-focus-color;\n\t\t\t\tbox-shadow: 0 0 0 $_o-forms-spacing-half $o-normalise-focus-color;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t}\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_select.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @output Styling for text areas\n@mixin _oFormsSelect(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null\n) {\n\t.o-forms-input--select {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall('select');\n\t\t}\n\t\t\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix('select');\n\t\t}\n\n\t\tselect {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('field-standard-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\tappearance: none;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: auto $_o-forms-spacing-six;\n\t\t\tborder-radius: 0;\n\t\t\tbackground-clip: padding-box;\n\t\t\tcolor: _oFormsGet('default-text');\n\t\t\tcursor: pointer;\n\t\t\toutline: none;\n\n\t\t\t// For iOS 6 that doesn't support 4-value background-position\n\t\t\t// Handles background sizing and positioning issues with IE10+\n\t\t\t// sass-lint:disable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\t\t\tbackground-position: right center;\n\t\t\tbackground-position: right $_o-forms-spacing-two center;\n\t\t\t-ms-background-position-x: right -75%;\n\t\t\t-ms-background-position-y: center;\n\t\t\t// sass-lint:enable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\n\t\t\t// Hide stock browser arrow in IE 10+\n\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t&::-ms-expand {\n\t\t\t\tcolor: oColorsGetPaletteColor('white');\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t// sass-lint:enable no-vendor-prefixes\n\n\t\t\t&:disabled {\n\t\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('disabled-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\t}\n\n\t\t\t&[multiple] {\n\t\t\t\tbackground-image: none;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_text-area.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for text areas\n@mixin _oFormsTextArea(\n\t$disabled: null\n) {\n\t.o-forms-input--textarea {\n\t\ttextarea {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tresize: vertical;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_text-input.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @param {Boolean} $small Whether to output small styles\n/// @param {String} $input-type Which text-like input to style (password, email, text)\n/// @output Styling for text inputs\n@mixin _oFormsTextInput(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null,\n\t$input-type: 'text'\n) {\n\t$element: 'input[type=#{$input-type}]';\n\n\t.o-forms-input--#{$input-type} {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall($element);\n\t\t}\n\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix($element);\n\t\t}\n\n\t\t#{$element} {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_toggle.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output styles for toggle based on a checkbox input\n@mixin _oFormsToggle($disabled: null) {\n\t.o-forms-input--toggle {\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-eight;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tcontent: '';\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle');\n\t\t\t\tborder-radius: $_o-forms-spacing-ten;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-ten;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: oColorsGetColorFor(page, background);\n\t\t\t\tborder: $_o-forms-spacing-half solid _oFormsGet('default-text');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-six;\n\t\t\t\ttransition: left 75ms ease-in-out;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: relative;\n\t\t\tleft: $_o-forms-spacing-three;\n\n\t\t\t&:checked + .o-forms-input__label {\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t\t&:after {\n\t\t\t\t\tleft: $_o-forms-spacing-four;\n\t\t\t\t\tborder-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:invalid:not(:disabled) + .o-forms-input__label:after {\n\t\t\t\tborder-color: inherit;\n\t\t\t}\n\t\t}\n\n\t\t@if $disabled {\n\t\t\tinput[type=checkbox]:disabled + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\tcolor: _oFormsGet('disabled-text');\n\n\t\t\t\t&:after {\n\t\t\t\t\tborder-color: _oFormsGet('toggle-disabled');\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-knob-disabled');\n\t\t\t\t}\n\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/main.scss",
      "contents": "// Styles shared between all input types\n@import './shared/brand';\n@import './shared/variables';\n@import './shared/base'; \n@import './shared/control-inputs'; // grouped inputs (e.g. radio/checkboxes) \n@import './shared/error-summary';\n@import './shared/inline';\n@import './shared/single-inputs'; // individual inputs (e.g. text, select)\n@import './shared/validity';\n\n// Input-type specific styles\n@import './checkbox';\n@import './date';\n@import './pseudo-radio-link';\n@import './radio-box';\n@import './radio-round';\n@import './select';\n@import './text-area';\n@import './text-input';\n@import './toggle';\n\n// Modifiers for certain input types\n@import './modifiers/custom'; // for radio box & anchors\n@import './modifiers/inverse'; // for toggle\n@import './modifiers/state'; // for radio box\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_custom.scss",
      "contents": "/// Transforms a custom theme map into brand variables. See `_brand.scss`.\n/// @access private\n/// @param {map|null} $theme - A custom theme map.\n/// @return {map} Brand variables.\n@function _oFormsThemeToBrandVariants($theme) {\n\t@if $theme {\n\t\t\t@if not index(map-keys($theme), 'controls-base') {\n\t\t\t\t@error \"The custom theme for box-styled controls is missing a 'controls-base' key. (see @mixin _oFormsAnchorBox)\";\n\t\t\t}\n\t\t// Add default value for checked background if not specified.\n\t\t@if not map-get($theme, 'negative-checked-background') {\n\t\t\t$theme: map-merge($theme, (\n\t\t\t\t'negative-checked-background': map-get($theme, 'checked-background')\n\t\t\t));\n\t\t}\n\n\t\t$theme: (\n\t\t\tcontrols-base: oColorsGetPaletteColor(map-get($theme, 'controls-base')),\n\t\t\tcontrols-checked-base: oColorsGetPaletteColor(map-get($theme, 'controls-checked-base')),\n\t\t\tcontrols-negative-checked-background: oColorsGetPaletteColor(map-get($theme, 'controls-negative-checked-background'))\n\t\t);\n\t}\n\n\t@return $theme;\n}\n\n/// @access private\n/// Outputs base styling for custom icons\n@mixin _oFormsCustomIconBase {\n\t.o-forms-input__label {\n\t\tmin-width: unset;\n\t}\n\n\ta.o-forms-input__link--current, // sass-lint:disable-line no-qualifying-elements\n\tinput[type=radio]:checked + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n/// @access public\n/// @param {String} $icon Name of the icon to request from the image set\n/// @param {String} $input Type of input to set icons on ('anchor' or radio)\n/// @param {Map|null} $theme Custom theme map\n@mixin _oFormsCustomIcon($icon, $input, $theme: null) {\n\t@include _oFormsCustomIconBase();\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\t$element: '';\n\n\t@if $input == 'radio' {\n\t\t$element: 'label .o-forms-input__label.o-forms-input__label__#{$icon}-icon';\n\t} @else {\n\t\t$element: 'a.o-forms-input__link--#{$icon}-icon';\n\t} \n\t\n\t#{$element} {\n\t\tpadding-left: $_o-forms-spacing-six;\n\t\tpadding-right: $_o-forms-spacing-two;\n\t\ttext-align: left;\n\n\t\t&:after,\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position-y: 0.175em;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t}\n\n\t\t&:before {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t}\n\n\t\t&:after {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-checked-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n\n/// @access public\n/// @param {String} $input Type of input to customise, one of 'anchor' or 'radio'\n/// @param {List} $icons A list of icons to render\n/// @param {Map|null} $theme Custom theme map\n@mixin oFormsAddCustom(\n\t$input: null,\n\t$class: null, \n\t$icons: null,\n\t$theme: null\n) {\n\n\t@if not $input {\n\t\t@error('Please specify whether you would like to customise radio inputs or anchors');\n\t}\n\n\t@if not $class {\n\t\t@error('Please specify a name for the custom modifier (e.g. o-forms-input--{custom-modifier}).');\n\t}\n\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\t.o-forms-input--#{$class} {\n\t\t@if $input == 'pseudo-radio-link' {\n\t\t\t@include _oFormsPseudoRadioLinkStyles($theme);\n\t\t} @else if $input == 'radio' {\n\t\t\t@include _oFormsRadioBoxInputStyles($theme);\n\t\t} @else {\n\t\t\t@error('#{$input} inputs do not accept customisation. If you need to customise this type of input, please contact the Origami team.');\n\t\t};\n\t}\n\n\t@if $icons {\n\t\t@each $icon in $icons {\n\t\t\t@include _oFormsCustomIcon($icon, $input, $theme);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_inverse.scss",
      "contents": "/// @access private\n/// @output styles for inverse toggle based on a checkbox input\n@mixin _oFormsInverse {\n\t.o-forms-field--inverse {\n\t\tcolor: _oFormsGet('toggle-inverse');\n\n\t\t.o-forms-title {\n\t\t\t.o-forms-title__main:after,\n\t\t\t.o-forms-title__prompt {\n\t\t\t\tcolor: rgba(_oFormsGet('toggle-inverse'), 0.7);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label:before {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\t.o-forms-input__label:after {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse-knob');\n\t\t\tborder-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\tinput[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements\n\t\t\t+ .o-forms-input__label:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_state.scss",
      "contents": "/// @access private\n/// @output styles for state animation for the box-styled radio inputs\n@mixin _oFormsState() {\n\t.o-forms-input__state {\n\t\t// the loading spinner and tick icons for state are mismatched in terms of size/padding, \n\t\t// the custom line-height aligns them as closely as possible (with minimal style changes)\n\t\t@include oTypographySize($scale: -1, $line-height: 1.75);\n\t\tcolor: inherit;\n\t\tdisplay: block;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-forms-input__state--icon-only:after {\n\t\t@include oNormaliseVisuallyHidden;\n\t}\n\n\t.o-forms-input--saving {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tpadding: 0;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saving';\n\t\t\t}\n\t\t\t\n\t\t\t&:before {\n\t\t\t\t@include oLoadingContent($opts: ('theme': 'dark', 'size': 'mini'));\n\t\t\t\tmargin: 0 $_o-forms-spacing-two 0 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-forms-input--saved {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tmargin-left: -$_o-forms-spacing-one;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saved';\n\t\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('valid-base'), $_o-forms-spacing-seven);\n\t\t\t\tvertical-align: middle;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t@include oGridRespondTo(S) {\n\t\t.o-forms-input--inline {\n\t\t\t&.o-forms-input--saving,\n\t\t\t&.o-forms-input--saved {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t\talign-items: center;\n\n\t\t\t\tlabel {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__state--icon-only {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.o-forms-input--saving .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three;\n\t\t\t}\n\n\t\t\t&.o-forms-input--saved .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three 0 $_o-forms-spacing-two;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_base.scss",
      "contents": "/// @access private\n/// @output Shared base state styles for all form elements.\n@mixin _oFormsBase() {\n\t@include _oFormsValidityStates();\n\n\t.o-forms-field,\n\t.o-forms-title,\n\t.o-forms-input {\n\t\t@include oTypographySans(0);\n\t}\n\t\n\t.o-forms-field {\t\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-bottom: $_o-forms-spacing-six;\n\t\tposition: relative;\n\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 0 $_o-forms-spacing-three;\n\t\t\tposition: relative;\n\t\t}\n\n\t\tlabel:last-of-type {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n\t\n\t.o-forms-field--optional .o-forms-title__main:after {\n\t\t@include oTypographySize($scale: -1);\n\t\tcontent: '(optional)';\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tfont-weight: 400;\n\t\tmargin-left: $_o-forms-spacing-one;\n\t}\n\n\t.o-forms-title__main {\n\t\t@include oTypographyBold('sans');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-title__prompt {\n\t\t@include oTypographySize($scale: -1);\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-input {\n\t\tmargin-top: $_o-forms-spacing-three;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsGet($variables, $from: null) {\n\t@return oBrandGet($component: 'o-forms', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsSupports($variant) {\n\t@return oBrandSupportsVariant($component: 'o-forms', $variant: $variant);\n}\n\n$_o-forms-shared-brand-config: (\n\tdefault-text: oColorsGetPaletteColor('black-80'),\n\tdefault-prompt-text: oColorsGetPaletteColor('black-60'),\n\tdefault-border: oColorsGetPaletteColor('black-50'),\n\tdefault-background: oColorsGetPaletteColor('white'),\n\tdisabled-text: oColorsGetPaletteColor('black-60'),\n\tdisabled-base: oColorsGetPaletteColor('black-10'),\n\tcontrols-base: oColorsGetPaletteColor('teal'),\n\tcontrols-checked-base: oColorsGetPaletteColor('white'),\n\tcontrols-negative-checked-background: oColorsGetPaletteColor('teal-30'),\n\tinvalid-base: oColorsGetPaletteColor('crimson'),\n\ttoggle: oColorsGetPaletteColor('black'),\n\ttoggle-knob: oColorsMix('black', 'white', 10),\n\ttoggle-selected: oColorsGetPaletteColor('teal'),\n\ttoggle-knob-selected: oColorsGetPaletteColor('white'),\n\ttoggle-disabled: oColorsGetPaletteColor('black-20'),\n\ttoggle-knob-disabled: oColorsGetPaletteColor('black-40'),\n\ttoggle-inverse: oColorsGetPaletteColor('white'),\n\ttoggle-inverse-knob: oColorsGetPaletteColor('slate'),\n\ttoggle-inverse-selected: oColorsGetPaletteColor('teal-100'),\n\tvalid-base: oColorsMix('jade', 'black', 80)\n);\n\n@include oBrandDefine('o-forms', 'master', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'internal', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'whitelabel', (\n\t'variables': map-merge($_o-forms-shared-brand-config, (\n\t\tcontrols-base: oColorsGetPaletteColor('black'),\n\t\tcontrols-negative-checked-background: oColorsGetPaletteColor('black'),\n\t\ttoggle-inverse-selected: oColorsGetPaletteColor('white'),\n\t\ttoggle-inverse-knob: oColorsGetPaletteColor('black'),\n\t)),\n\t'supports-variants': ()\n));\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_control-inputs.scss",
      "contents": "/// @access private\n/// @output Shared base styles for checkboxes, toggles, round- and box-style radio buttons.\n@mixin _oFormsControlsBase($disabled: null) {\n\tposition: absolute;\n\tpadding: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\n\t&:checked + .o-forms-input__label:after {\n\t\topacity: 1;\n\t}\n\n\t@if $disabled {\n\t\t&:disabled {\n\t\t\topacity: 0;\n\n\t\t\t+ .o-forms-input__label {\n\t\t\t\topacity: 0.4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared pseudo element styles for checkboxes, toggle, round- and box-style radio buttons.\n@mixin _oFormsControlsPseudoElements {\n\tcontent: '';\n\tcursor: pointer;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\tbox-sizing: border-box;\n}\n\n/// @access private\n/// @output Shared styles for box-style radio buttons and anchor controls\n@mixin _oFormsControlsBoxBase {\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tfloat: left;\n\tmargin: 0;\n\tmin-height: $_o-forms-spacing-seven;\n\tmin-width: oTypographySpacingSize(15);\n}\n\n/// @access private\n/// @output Shared styles for box-style containers\n@mixin _oFormsControlsBoxContainer {\n\t@include oTypographySize($scale: -1, $line-height: unset);\n\t@include oTypographyBold('sans');\n\tbox-sizing: border-box;\n\tborder: $_o-forms-border;\n\tdisplay: inline-block;\n\tpadding: $_o-forms-spacing-half;\n\ttext-align: center;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_error-summary.scss",
      "contents": "/// @access private\n/// @output styles for error summary\n@mixin _oFormsErrorSummary() {  \n\t.o-forms__error-summary {\n\t\t@include oTypographySans($scale: 0);\n\t\tbackground-color: oColorsMix('crimson', $percentage: 10);\n\t\tmargin-bottom: $_o-forms-spacing-four;\n\t\tpadding: $_o-forms-spacing-three;\n\n\t\th4 {\n\t\t\t@include oTypographyBold('sans');\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tmargin: 0 0 $_o-forms-spacing-one;\n\t\t}\n\n\t\tul {\n\t\t\tlist-style-type: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\n\t\t\tspan {\n\t\t\t\t@include oTypographyBold('sans');\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tdisplay: inline-block;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-top: $_o-forms-spacing-one;\n\t\t\ttext-decoration: none;\n\t\t\tborder-bottom: 1px solid _oFormsGet('invalid-base');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_inline.scss",
      "contents": "/// @access private\n/// @output styles for inlining labels and inputs\n@mixin _oFormsInline() {\n\t/* inline field titles and inputs\n\t\t[title] [input]\n\t\tor\n\t\t[title] [input]\n\t\t\t\t\t\t[input]\n\t*/\n\t@include oGridRespondTo(S) {\n\t\t&.o-forms-field--inline {\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-between;\n\t\t\n\t\t\t.o-forms-title {\n\t\t\t\tflex: 0 1 50%;\n\t\t\t\tmargin-right: $_o-forms-spacing-three;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\t&.o-forms-title--shrink {\n\t\t\t\t\tflex-basis: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.o-forms-title--vertical-center {\n\t\t\t\t\talign-self: center;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t.o-forms-input {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tflex: 1 0 50%;\n\t\t\t\talign-items: flex-start;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* inline inputs\n\t\t\t[title] \n\t\t\t[input] [input]\n\t\t\tor (combined with field inline)\n\t\t\t[title] [input] [input]\n\t\t*/\n\t\t.o-forms-input.o-forms-input--inline {\n\t\t\tdisplay: flex;\n\t\t\tflex-flow: row wrap;\n\t\t\t\t\n\t\t\tlabel {\n\t\t\t\tmargin: 0 $_o-forms-spacing-four $_o-forms-spacing-three 0;\n\t\t\t\tmax-width: 75%;\n\t\t\t}\n\n\t\t\t&.o-forms-input--date label,\n\t\t\t&.o-forms-input--radio-box label {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_single-inputs.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output base styles for select, textarea and text input\n@mixin _oFormsInputBase($disabled) {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tbackground-color: _oFormsGet('default-background');\n\tborder: $_o-forms-border;\n\tbox-sizing: border-box;\n\tmin-height: $_o-forms-spacing-ten;\n\tpadding: $_o-forms-spacing-two;\n\twidth: 100%;\n\n\t@if $disabled {\n\t\t@include _oFormsInputDisabled();\n\t}\n}\n\n/// @access private\n/// @output Shared disabled state styles for inputs.\n@mixin _oFormsInputDisabled {\n\t&:disabled {\n\t\tcursor: default;\n\t\tcolor: _oFormsGet('disabled-text');\n\t\tbackground-color: _oFormsGet('disabled-base');\n\t\tborder-color: _oFormsGet('disabled-base');\n\t}\n}\n\n/// @access private\n/// @output Shared small styles for select and text input.\n@mixin _oFormsInputSmall($element) {\n\t&.o-forms-input--small {\n\t\t#{$element} {\n\t\t\t@include oTypographySize($scale: -1, $line-height: 1.65);\n\t\t\tmin-height: $_o-forms-spacing-seven;\n\t\t\tpadding: 0 $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared suffix styles for select and text input.\n@mixin _oFormsInputSuffix($element) {\n\t&.o-forms-input--suffix {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t\t#{$element} {\n\t\t\tflex: 1;\n\t\t\tmargin-right: $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_validity.scss",
      "contents": "/// @access private\n/// @output styles for valid and invalid inputs\n@mixin _oFormsValidityStates() {\n\t.o-forms-input--valid {\n\t\t*:valid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\tborder-color: _oFormsGet('valid-base');\n\t\t}\n\t}\n\n\t*:invalid {\n\t\tbox-shadow: none;\n\t}\n\t\n\t.o-forms-input__error {\n\t\tdisplay: none;\n\t}\n\n\t.o-forms-input--invalid {\n\t\t*:invalid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\n\t\t\t+ .o-forms-input__label:before,\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\t@include oTypographySize($scale: -1);\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tbottom: -$_o-forms-spacing-five;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_variables.scss",
      "contents": "$o-forms-is-silent: true !default;\n\n$_o-forms-border: 1px solid _oFormsGet('default-border');\n\n$_o-forms-spacing-half: oTypographySpacingSize(1) / 2; //2px\n$_o-forms-spacing-one: oTypographySpacingSize(1); // 4px\n$_o-forms-spacing-two: oTypographySpacingSize(2); // 8px\n$_o-forms-spacing-three: oTypographySpacingSize(3); // 12px\n$_o-forms-spacing-four: oTypographySpacingSize(4); // 16px\n$_o-forms-spacing-five: oTypographySpacingSize(5); // 20px\n$_o-forms-spacing-six: oTypographySpacingSize(6); // 24px && checkbox/radio widths\n$_o-forms-spacing-seven: oTypographySpacingSize(7); // 28px\n$_o-forms-spacing-eight: oTypographySpacingSize(8); // 32px\n$_o-forms-spacing-nine: oTypographySpacingSize(9); // 36px\n$_o-forms-spacing-ten: oTypographySpacingSize(10); // 40px\n\n$_o-forms-spacing-controls: $_o-forms-spacing-nine + $_o-forms-spacing-half;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/forms.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport formFixture from \"./helpers/fixtures\";\nimport Forms from \"../browser\";\ndescribe('Forms', () => {\n  let formEl;\n  let parentClass;\n  let requiredTextField;\n  let dateFields;\n  before(() => {\n    parentClass = (element, modifier) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${modifier}`);\n  });\n  context('on `submit`', () => {\n    let submit;\n    let summary;\n    let formSpy;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      formSpy = sinon.spy(formEl, 'addEventListener');\n      dateFields = formEl.elements['date'];\n      requiredTextField = formEl.elements['required'];\n      submit = formEl.elements[formEl.elements.length - 1];\n    });\n    afterEach(() => {\n      document.body.innerHTML = null;\n    });\n    it('`opts.useBrowserValidation = true` relays form validation to browser on all invalid form inputs', () => {\n      new Forms(formEl, {\n        useBrowserValidation: true\n      });\n      submit.click();\n      proclaim.isTrue(formSpy.withArgs('submit').notCalled);\n      proclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n      proclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n    });\n    it('`opts.useBrowserValidation = false` manually validates form inputs', () => {\n      new Forms(formEl);\n      submit.click();\n      proclaim.isTrue(formSpy.withArgs('submit').calledOnce);\n      proclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n      proclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n    });\n    context('`opts.errorSummary = true`', () => {\n      let listItems;\n      let textInput;\n      beforeEach(() => {\n        new Forms(formEl);\n      });\n      it('creates new summary when inputs are invalid', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        proclaim.isNotNull(summary);\n      });\n      it('the summary reflects the number of invalid inputs', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 4);\n      });\n      it('the summary gets updated on second submit if a form field has been amended', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 4);\n        textInput = formEl.elements['text'];\n        textInput.value = 'something';\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 3);\n      });\n    });\n    context('`opts.errorSummary = false`', () => {\n      it('does not create a new summary when inputs are invalid ', () => {\n        new Forms(formEl, {\n          errorSummary: false\n        });\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        proclaim.isNull(summary);\n      });\n    });\n  });\n  context('.setState()', () => {\n    let form;\n    let name;\n    let radioInputs;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      name = 'radioBox';\n      radioInputs = formEl.elements[name];\n      form = new Forms(formEl);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`saving` to named input', () => {\n      form.setState('saving', name);\n      proclaim.isTrue(parentClass(radioInputs[0], 'saving'));\n    });\n    it('`saved` to named input', () => {\n      form.setState('saved', name);\n      proclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n      proclaim.isTrue(parentClass(radioInputs[0], 'saved'));\n    });\n    it('`none` to named input', () => {\n      form.setState('none', name);\n      proclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n      proclaim.isFalse(parentClass(radioInputs[0], 'saved'));\n    });\n  });\n  context('.destroy()', () => {\n    let form;\n    let formSpy;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      form = new Forms(formEl);\n    });\n    afterEach(() => {\n      document.body.innerHTML = null;\n    });\n    it('removes all references to Forms, Inputs and State', () => {\n      proclaim.isInstanceOf(form, Forms);\n      form.destroy();\n      proclaim.isNull(form.form);\n      proclaim.isNull(form.opts);\n      proclaim.isNull(form.formInputs);\n      proclaim.isNull(form.stateElements);\n    });\n    it('removes all event listeners', () => {\n      formSpy = sinon.spy(formEl, 'removeEventListener');\n      form.destroy();\n      proclaim.isTrue(formSpy.calledOnce);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/fixtures.js",
      "contents": "export default `\n<form action=\"\" data-o-component=\"o-forms\">\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t\t\t<input id=\"date1\" type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t\t\t<input id=\"date2\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t</span>\n\t</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"text\" type=\"text\" name=\"required\" value=\"\" required>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\">\n\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\" checked>\n\t\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</span>\n\t</div>\n\n\t<input class=\"o-buttons\" type=\"submit\">\n</form>\n`;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/input.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport formFixture from \"./helpers/fixtures\";\nimport Input from \"../dist/js/input\";\ndescribe('Input', () => {\n  let form;\n  let dispatch;\n  let parentClass;\n  beforeEach(() => {\n    dispatch = (event, element) => element.dispatchEvent(new Event(event));\n\n    parentClass = (element, validity) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${validity}`);\n  });\n  it('validation ignores an input that is not required or invalid', () => {\n    document.body.innerHTML = formFixture;\n    form = document.forms[0];\n    let optionalField = form.elements['optional'];\n    new Input(optionalField);\n    proclaim.isFalse(parentClass(optionalField, 'invalid'));\n    proclaim.isFalse(parentClass(optionalField, 'valid'));\n  });\n  context('validates required fields', () => {\n    let requiredField;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      requiredField = form.elements['required'];\n      new Input(requiredField);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`blur` event sets the field to invalid if required input is left empty', () => {\n      dispatch('blur', requiredField);\n      proclaim.isTrue(parentClass(requiredField, 'invalid'));\n    });\n    it('`input` event updates validity when input is given (if previously invalid)', () => {\n      dispatch('blur', requiredField);\n      proclaim.isTrue(parentClass(requiredField, 'invalid'));\n      requiredField.value = \"some text\";\n      dispatch('input', requiredField);\n      proclaim.isFalse(parentClass(requiredField, 'invalid'));\n      proclaim.isTrue(parentClass(requiredField, 'valid'));\n    });\n  });\n  context('validates pattern-matching fields', () => {\n    let dateField;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      dateField = form.elements['date'][0];\n      new Input(dateField);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`blur` event sets the field to invalid if input does not match pattern', () => {\n      dateField.value = \"tenth\";\n      dispatch('blur', dateField);\n      proclaim.isTrue(parentClass(dateField, 'invalid'));\n    });\n    it('`input` event updates validity when format is corrected (if previously invalid)', () => {\n      dateField.value = 'tenth';\n      dispatch('blur', dateField);\n      proclaim.isTrue(parentClass(dateField, 'invalid'));\n      dateField.value = 10;\n      dispatch('input', dateField);\n      proclaim.isFalse(parentClass(dateField, 'invalid'));\n      proclaim.isTrue(parentClass(dateField, 'valid'));\n    });\n  });\n  context('.destroy()', () => {\n    let fieldSpy;\n    let input;\n    let requiredField;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      requiredField = form.elements['required'];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('removes all event listeners', () => {\n      input = new Input(requiredField);\n      fieldSpy = sinon.spy(requiredField, 'removeEventListener');\n      input.destroy();\n      proclaim.isTrue(fieldSpy.calledTwice);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/state.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport formFixture from \"./helpers/fixtures\";\nimport State from \"../dist/js/state\";\ndescribe('State', () => {\n  let form;\n  let state;\n  let nodeList;\n  context('new instance', () => {\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('initialises a state instance successfully', () => {\n      nodeList = form.elements['radioBox'];\n      state = new State(nodeList);\n      proclaim.isInstanceOf(state, State);\n    });\n    it('throws an error if input type is not `o-forms-input--radio-box`', () => {\n      let field = form.elements['optional'];\n      let message = 'State can only be applied to `radio` type inputs.';\n      proclaim.throws(() => new State(field), message);\n    });\n  });\n  context('.set()', () => {\n    let stateClass;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      nodeList = form.elements['radioBox'];\n      state = new State(nodeList);\n\n      stateClass = state => nodeList[0].closest('.o-forms-input').classList.contains(`o-forms-input--${state}`);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`saving` state', () => {\n      state.set('saving');\n      proclaim.isTrue(stateClass('saving'));\n    });\n    it('`saved` state', () => {\n      state.set('saved');\n      proclaim.isFalse(stateClass('saving'));\n      proclaim.isTrue(stateClass('saved'));\n    });\n    it('`none` state', () => {\n      state.set('none');\n      proclaim.isFalse(stateClass('saving'));\n      proclaim.isFalse(stateClass('saved'));\n    });\n  });\n  context('opts', () => {\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      nodeList = form.elements['radioBox'];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('accepts an options object with iconOnly key', () => {\n      state = new State(nodeList, {\n        iconOnly: true\n      });\n      state.set('saving');\n      let icon = document.querySelector('.o-forms-input__state--icon-only');\n      proclaim.isNotNull(icon);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/forms.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport formFixture from './helpers/fixtures';\nimport Forms from './../main';\n\ndescribe('Forms', () => {\n\tlet formEl;\n\tlet parentClass;\n\tlet requiredTextField;\n\tlet dateFields;\n\n\tbefore(() => {\n\t\tparentClass = (element, modifier) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${modifier}`);\n\t});\n\n\tcontext('on `submit`', () => {\n\t\tlet submit;\n\t\tlet summary;\n\t\tlet formSpy;\n\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tformSpy = sinon.spy(formEl, 'addEventListener');\n\n\t\t\tdateFields = formEl.elements['date'];\n\t\t\trequiredTextField = formEl.elements['required'];\n\t\t\tsubmit = formEl.elements[formEl.elements.length - 1];\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`opts.useBrowserValidation = true` relays form validation to browser on all invalid form inputs', () => {\n\t\t\tnew Forms(formEl, { useBrowserValidation: true });\n\t\t\tsubmit.click();\n\n\t\t\tproclaim.isTrue(formSpy.withArgs('submit').notCalled);\n\t\t\tproclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n\t\t});\n\n\t\tit('`opts.useBrowserValidation = false` manually validates form inputs', () => {\n\t\t\tnew Forms(formEl);\n\t\t\tsubmit.click();\n\n\t\t\tproclaim.isTrue(formSpy.withArgs('submit').calledOnce);\n\t\t\tproclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n\t\t});\n\n\t\tcontext('`opts.errorSummary = true`', () => {\n\t\t\tlet listItems;\n\t\t\tlet textInput;\n\n\t\t\tbeforeEach(() => {\n\t\t\t\tnew Forms(formEl);\n\t\t\t});\n\n\t\t\tit('creates new summary when inputs are invalid', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tproclaim.isNotNull(summary);\n\t\t\t});\n\n\t\t\tit('the summary reflects the number of invalid inputs', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 4);\n\t\t\t});\n\n\t\t\tit('the summary gets updated on second submit if a form field has been amended', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 4);\n\n\t\t\t\ttextInput = formEl.elements['text'];\n\t\t\t\ttextInput.value = 'something';\n\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 3);\n\t\t\t});\n\t\t});\n\n\t\tcontext('`opts.errorSummary = false`', () => {\n\t\t\tit('does not create a new summary when inputs are invalid ', () => {\n\t\t\t\tnew Forms(formEl, { errorSummary: false });\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tproclaim.isNull(summary);\n\t\t\t});\n\t\t});\n\t});\n\n\tcontext('.setState()', () => {\n\t\tlet form;\n\t\tlet name;\n\t\tlet radioInputs;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tname = 'radioBox';\n\t\t\tradioInputs = formEl.elements[name];\n\n\t\t\tform = new Forms(formEl);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`saving` to named input', () => {\n\t\t\tform.setState('saving', name);\n\t\t\tproclaim.isTrue(parentClass(radioInputs[0], 'saving'));\n\t\t});\n\n\t\tit('`saved` to named input', () => {\n\t\t\tform.setState('saved', name);\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n\t\t\tproclaim.isTrue(parentClass(radioInputs[0], 'saved'));\n\t\t});\n\n\t\tit('`none` to named input', () => {\n\t\t\tform.setState('none', name);\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saved'));\n\t\t});\n\t});\n\n\tcontext('.destroy()', () => {\n\t\tlet form;\n\t\tlet formSpy;\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tform = new Forms(formEl);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('removes all references to Forms, Inputs and State', () => {\n\t\t\tproclaim.isInstanceOf(form, Forms);\n\n\t\t\tform.destroy();\n\t\t\tproclaim.isNull(form.form);\n\t\t\tproclaim.isNull(form.opts);\n\t\t\tproclaim.isNull(form.formInputs);\n\t\t\tproclaim.isNull(form.stateElements);\n\t\t});\n\n\t\tit('removes all event listeners', () => {\n\t\t\tformSpy = sinon.spy(formEl, 'removeEventListener');\n\n\t\t\tform.destroy();\n\n\t\t\tproclaim.isTrue(formSpy.calledOnce);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/fixtures.js",
      "contents": "export default `\n<form action=\"\" data-o-component=\"o-forms\">\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t\t\t<input id=\"date1\" type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t\t\t<input id=\"date2\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t</span>\n\t</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"text\" type=\"text\" name=\"required\" value=\"\" required>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\">\n\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\" checked>\n\t\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</span>\n\t</div>\n\n\t<input class=\"o-buttons\" type=\"submit\">\n</form>\n`;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/input.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport formFixture from './helpers/fixtures';\nimport Input from '../src/js/input';\n\ndescribe('Input', () => {\n\tlet form;\n\tlet dispatch;\n\tlet parentClass;\n\n\tbeforeEach(() => {\n\t\tdispatch = (event, element) => element.dispatchEvent(new Event(event));\n\t\tparentClass = (element, validity) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${validity}`);\n\t});\n\n\tit('validation ignores an input that is not required or invalid', () => {\n\t\tdocument.body.innerHTML = formFixture;\n\t\tform = document.forms[0];\n\t\tlet optionalField = form.elements['optional'];\n\t\tnew Input(optionalField);\n\n\t\tproclaim.isFalse(parentClass(optionalField, 'invalid'));\n\t\tproclaim.isFalse(parentClass(optionalField, 'valid'));\n\t});\n\n\tcontext('validates required fields', () => {\n\t\tlet requiredField;\n\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\trequiredField = form.elements['required'];\n\t\t\tnew Input(requiredField);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`blur` event sets the field to invalid if required input is left empty', () => {\n\t\t\tdispatch('blur', requiredField);\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'invalid'));\n\t\t});\n\n\t\tit('`input` event updates validity when input is given (if previously invalid)', () => {\n\t\t\tdispatch('blur', requiredField);\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'invalid'));\n\n\t\t\trequiredField.value = \"some text\";\n\t\t\tdispatch('input', requiredField);\n\n\t\t\tproclaim.isFalse(parentClass(requiredField, 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'valid'));\n\t\t});\n\t});\n\n\tcontext('validates pattern-matching fields', () => {\n\t\tlet dateField;\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tdateField = form.elements['date'][0];\n\t\t\tnew Input(dateField);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`blur` event sets the field to invalid if input does not match pattern', () => {\n\t\t\tdateField.value = \"tenth\";\n\t\t\tdispatch('blur', dateField);\n\n\t\t\tproclaim.isTrue(parentClass(dateField, 'invalid'));\n\t\t});\n\n\t\tit('`input` event updates validity when format is corrected (if previously invalid)', () => {\n\t\t\tdateField.value = 'tenth';\n\t\t\tdispatch('blur', dateField);\n\t\t\tproclaim.isTrue(parentClass(dateField, 'invalid'));\n\n\t\t\tdateField.value = 10;\n\t\t\tdispatch('input', dateField);\n\n\t\t\tproclaim.isFalse(parentClass(dateField, 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(dateField, 'valid'));\n\t\t});\n\t});\n\n\tcontext('.destroy()', () => {\n\t\tlet fieldSpy;\n\t\tlet input;\n\t\tlet requiredField;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\trequiredField = form.elements['required'];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('removes all event listeners', () => {\n\t\t\tinput = new Input(requiredField);\n\t\t\tfieldSpy = sinon.spy(requiredField, 'removeEventListener');\n\t\t\tinput.destroy();\n\n\t\t\tproclaim.isTrue(fieldSpy.calledTwice);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/state.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport formFixture from './helpers/fixtures';\nimport State from '../src/js/state';\n\ndescribe('State', () => {\n\tlet form;\n\tlet state;\n\tlet nodeList;\n\n\tcontext('new instance', () => {\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('initialises a state instance successfully', () => {\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t\tstate = new State(nodeList);\n\n\t\t\tproclaim.isInstanceOf(state, State);\n\t\t});\n\n\t\tit('throws an error if input type is not `o-forms-input--radio-box`', () => {\n\t\t\tlet field = form.elements['optional'];\n\n\t\t\tlet message = 'State can only be applied to `radio` type inputs.';\n\t\t\tproclaim.throws(() => new State(field), message);\n\t\t});\n\t});\n\n\tcontext('.set()', () => {\n\t\tlet stateClass;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t\tstate = new State(nodeList);\n\t\t\tstateClass = (state) => nodeList[0].closest('.o-forms-input').classList.contains(`o-forms-input--${state}`);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`saving` state', () => {\n\t\t\tstate.set('saving');\n\t\t\tproclaim.isTrue(stateClass('saving'));\n\t\t});\n\n\t\tit('`saved` state', () => {\n\t\t\tstate.set('saved');\n\t\t\tproclaim.isFalse(stateClass('saving'));\n\t\t\tproclaim.isTrue(stateClass('saved'));\n\t\t});\n\n\t\tit('`none` state', () => {\n\t\t\tstate.set('none');\n\t\t\tproclaim.isFalse(stateClass('saving'));\n\t\t\tproclaim.isFalse(stateClass('saved'));\n\t\t});\n\t});\n\n\tcontext('opts', () => {\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('accepts an options object with iconOnly key', () => {\n\t\t\tstate = new State(nodeList, { iconOnly: true });\n\t\t\tstate.set('saving');\n\t\t\tlet icon = document.querySelector('.o-forms-input__state--icon-only');\n\t\t\tproclaim.isNotNull(icon);\n\t\t});\n\t});\n});\n"
    }
  ]
}

exports['occ o-forms-7.0.0 o-forms-7.0.0 with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".idea/\n.sass-cache/\nbower_components/\nbuild/\ncoverage/\ndemos/local/\nnode_modules/\n/bin\n/.classpath\n/.project\n.DS_Store\n.env\n.idea/\n.sass-cache/\nbower_components/\nbuild/\ncoverage/\ndemos/local/\nnode_modules/\n/bin\n/.classpath\n/.project\n.DS_Store\n.env\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "ACCESSIBILITY.md",
      "contents": "# Form Accessibility\n\nForms can present a challenge when it comes to accessibility, most specifically in terms of Assitive Technology (in this case screen readers, which we will refer to as 'AT' going forward).\n\n`o-forms` has been tested with our [contrast checker](https://registry.origami.ft.com/components/o-colors#demo-contrast-ratio-checker) to make sure that our colour contrasts meet [WCAG](https://www.w3.org/WAI/standards-guidelines/wcag/) requirements, so this document is going to walk through `aria` attributes we recommend using.\n\n### Table of Contents:\n- [Single Inputs](#single-inputs)\n- [Multiple Inputs](#multiple-inputs)\n- [Form Validation](#form-validation)\n\n## Single inputs\n`o-forms` considers these types of input 'single input fields`:\n- `input[type=text]` \n- `input[type=password]`\n- `select`\n- `textarea`\n\nThe base structure for all of these types of input is as follows:\n```html\n<label>\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">\n\t\t\tLabel to describe the input here\n\t\t</span>\n\t</span>\n\n\t<!-- the input container below accepts a number of different modifiers, which are outlined in the README -->\n\t<span class=\"o-forms-input\"> \n\t\t<input type=\"text\"/>\n\t\t<!-- or --> \n\t\t<input type=\"password\"/>\n\t\t<!-- or --> \n\t\t<textarea></textarea>\n\t\t<!-- or -->\n\t\t<select>...</select> \n\t</span>\n</label>\n```\nAT will read this markup correctly by identifying the type of input declared, and the label for it. As long as our markup is semantic, this should be read out as intended. \n\n## Multiple inputs\n`o-forms` considers these types of input 'multiple input fields`:\n- `input[type=radio]` \n- `input[type=checkbox]`\n\nEssentially, if there is more than one input, they should be grouped with their input siblings.\n\nThe base structure for these types of input (ignoring some modifiers) is:\n```html\n<div class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox2\">\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 2</span>\n\t\t</label>\n\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox3\" checked>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 3</span>\n\t\t</label>\n\t</span>\n</div>\n```\nOur approach to grouping input elements mimicks the structure of a `<fieldset>` with a `<legend>` and multiple `<input>`s. \n\nWe chose not to work with a fieldset because they are [especially difficult to style consistently](https://thatemil.com/blog/2015/01/03/reset-your-fieldset/) _and_ we wanted to provide visual flexibility for our users.\n\nBut in doing this, we've lost the `<fieldset>`'s semantic structure, which ATs rely on to read out correctly.\n\nHow to make our mimicked stucture more semantic? Enter `aria` (and `role`) attributes!\n\nThere are five attributes we recommend implementing in multiple input fields:\n- [`role=\"group\"`](#role-group)\n- [`aria-labelledby` & `aria-describedby`](#aria-labelledby--aria-describedby)\n- [`aria-label` & `aria-hidden`](#aria-label--aria-hidden)\n\n#### `role=\"group\"`\n\nThis role should be set on the parent `<div>`:\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field\" role=\"group\">\n\t...\n</div>\n```\nThis denominates the `<div>` as the element that holds a group of inputs, similar to the behaviour of a `<fieldset>`.  \n[According to MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_group_role): \n>'A group should be used to form a logical collection of items with related functionality ...'\n\n#### `aria-labelledby` & `aria-describedby`\nThis attribute should also be added to the parent `<div>`. It accepts an id, which should be set on `<span class=\"o-forms-title__main\">`:\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\">\n\t<span class=\"o-forms-title\">\n-\t\t<span class=\"o-forms-title__main\">Group Title</span>\n+\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\t...\n</div>\n```\n\nUsing `aria-labelledby` will help us simulate the behaviour that a `<legend>` is responsible for, which is linking a title to a group. This difference is important because we have more than one input in a group, and each one of those inputs has their own label, independent of the group title. \n\nIf we are using \"prompt\" text to provide further explanation about the group, we should use `aria-describedby`, with an id of its own, to provide that description, e.g.:\n```diff\n-<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\">\n+<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\" aria-describedby=\"example-group-info\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n-\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n+\t\t<span class=\"o-forms-title__prompt\" id=\"example-group-info\">Group info</span>\n\t\t...\n\t</span>\n\t...\n</div>\n```\n\n`aria-labelledby` and `aria-describedby` are similar attributes, though semantically they provide different functionality.\nYou can [read more about them on MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-labelledby_attribute):\n\n>A label provides essential information about an object, while a description provides extended information that the user might need.\n\n#### `aria-label` & `aria-hidden`\n\nIndependently of whether or not a group of inputs is in a `<fieldset>` or a `<div>`, their structure exhibits a peculiar type of behaviour: AT will focus on the `<input>`, read out its label, and then focus on the label text, and read that out again. To avoid focusing on the label to provide a more natural 'tabbing' experience, we recommend combining `aria-label` and `aria-hidden` on the grouped inputs:\n\n```diff\n<label>\n-\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked=>\n+\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked aria-label=\"Checkbox 1\">\n-\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n+\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 1</span>\n</label>\n```\n\nBy defining what the label of the input is and hiding the actual label from the AT, we'll make the transition between inputs far smoother. \n\n_Note 1: `aria-label` also accepts an id if you would rather set an id on the input's label_\n\n_Note 2: `aria-hidden` is sometimes used as a CSS selector to visually hide/show elements. However, it's primary functionality is to hide the contents of an element from the AT_\n\n\n#### Example\n\nPutting everything we've just seen together, our multiple input field should look like this:\n```html\n<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"example-group-title\" aria-describedby=\"example-group-info\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\" id=\"example-group-title\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\" id=\"example-group-info\">Group Info</span>\n\t</span>\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox1\" checked aria-label=\"Checkbox 1\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox2\" checked aria-label=\"Checkbox 2\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 2</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"default\" value=\"checkbox3\" checked aria-label=\"Checkbox 3\">\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Checkbox 3</span>\n\t\t</label>\n\t<span>\n</div>\n```\n\n## Form Validation\n\n_Phew_. Now that we've covered static attributes for our form elements, let's jump into dynamic form validation. There are many approaches to validating in an accessible way, and none are infallible due to the nature of ATs, but we'll cover what we've considered so far.\n\n#### Native browser validation\n\nBrowsers have native form validation. This could mean different implementation details for different browsers, but overall, a browser will check input fields in a form against the [ValidityState interface](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState), which checks for pattern matches, whether input is present in a required field, among a few other conditions.\n\nThis means that invalid inputs will recieve messages tailored to describe the condition that has _not_ been met. These messages are presented in the language that the user has chosen for their browser. In addition to that, the browser will shift focus onto the first invalid input. Depending on the browser, the AT will read out the generated error message. \n\nThe main problem with this approach is that there is no guarantee that the experience is consistent. Since browsers process this information differently and interact with screen readers differently, relying on native validation could lead to confusing behaviour for ATs. \n\n\n#### Non native validation\n\nWe do _not_ style the tool tip that the browser's message appears in, so frequently forms are given the `novalidate` attribute, which doesn't run any native validation on submit. This means that the messages can be overriden and styled according to the FT's design and the behaviour determined by the product's needs.\n\nPrimarily because of this, we've chosen to default to non-native validation, using [custom errors](./README.md#custom-errors) and to producing an [error summary](#error-summary) instead.\n\n#### `aria-live` regions\n\nAt its core, `aria-live` is an attribute that can be set to an area of a document to denote that the AT should announce changes to that area. It is possible to determine what kind of changes it should recognise (additions, changes to text, etc), how forceful it should be in informing the user of the change (polite, assertive), alongside a few more advanced features.\n\n`o-forms` cannot handle this attribute for you, and it can create an incoherent experience across browsers, so we generate an [error summary](#error-summary) instead.\n\nIf you choose not to use the error summary functionality that comes with `o-forms`, please consider adding the `aria-live` attribute to your markup, keeping the following in mind:\n- this attribute accepts three politeness settings: off, polite or assertive. We recommend using polite, which will avoid interfering with any other actions the AT may be reading out.\n- `aria-live` needs to be set on the markup so that the AT can register it when the document loads. Dynamically added regions won't be recognised. \n\t- this means `o-forms` cannot add it to a form or its elements\n- it shoud **not** be set to the document `<body>`, as it could overrun the AT with unnecessary information. \n\t- in forms with many inputs we might end up with many live regions\n- the information a region relays can get lost or confusing amidst a users interaction with the page\n\t- the validation–and change to the region–could happen on blur, on change, on input, on submit, &c\n\nYou can read more about [`aria-live` on MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions).\n\n#### Error summary\n\nGDS has a [very good reference](https://design-system.service.gov.uk/components/error-summary/) for error handling.\n\nOverall, it outlines that:\n- There should be a summary of errors at the top of a page\n- The focus should be shifted to that summary\n- Each error should link to the input that is invalid\n- Each invalid input should *also* have the error beneath/beside/above it\n\nThis means that not only will ATs have clear access to what has happend on the page, but it will be clear for any other user of the product's form.\n\n`o-forms` implements this behaviour for you if the [error summary options is enabled](./README#form-instance)\n\nIf you would like help implementing anything you've read here, please [get in touch with the team](./README.md#contact). \n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "MIGRATION.md",
      "contents": "\n## Migration Guide\n\n### Migrating from v6 to v7\n\nVersion 7 introduces a complete redesign to the `o-forms` markup, Sass and JavaScript API, and makes small design changes and additions.\n\nAll Sass mixins have been removed, and have been replaced with two public mixins:\n- `oForms()`\n- `oFormsAddCustom()`\n\nThe primary mixin makes an options map public, which allows you to output styles specific to the elements that you want to use in your form. `o-forms` [no longer supports custom classes](https://github.com/Financial-Times/origami/issues/4). \n\nThe following example would output small text inputs and regular checkboxes:\n\n```diff\n-@include oFormsBaseFeatures();\n-@include oFormsRadioCheckboxFeatures();\n-@include oFormsSmallFeature();\n\n+@include oForms($opts: (\n+\t'elements': (\n+\t\t'text', \n+\t\t'checkbox'\n+\t),\n+\t'features': (\n+\t\t'small'\n+\t)\n+))\n```\n\nThe customisation mixin outputs a custom modifier, and can be applied as follows:\n```diff\n-.o-forms__radio-button.o-forms__radio-button--my-theme {\n-\t@include oFormsRadioButtonsStyledTheme($theme: $my-theme);\n-}\n\n+@include oFormsAddCustom(\n+\t$input: 'radio',\n+\t$class: 'my-theme',\n+\t$theme: $my-theme\n+);\n\n// the custom class modifier will be: .o-forms-input--my-theme\n```\n\nThe markup has been changed entirely to accomodate the following structure:\n```\n┌— field container (.o-forms-field) —————┐\n|      (one of div or label)             |\n|                                        |\n|  ┌ title container (.o-forms-title) ┐  |\n|  |    (group titles or              |  |\n|  |     individual input labels)     |  |\n|  └——————————————————————————————————┘  |\n|                                        |\n|  ┌ input container (.o-forms-input) ┐  |\n|  |    (group inputs or              |  |\n|  |     individual inputs)           |  |\n|  └——————————————————————————————————┘  |\n└————————————————————————————————————————┘\n```\n\nThe root `o-forms` class is no longer used. Instead, there are modifiers for each type of container (field, title, input) illustrated above, and some modifiers that only work for specific inputs:\n- Field container modifiers:\n\t- `.o-forms-field--optional`\n\t- `.o-forms-field--inline`\n\t- `.o-forms-field--inverse`\n- Title container modifiers:\n\t- `.o-forms-title`\n\t- `.o-forms-title--shrink`\n\t- `.o-forms-title--vertical-center`\n- Input container modifiers:\n\t- `.o-forms-input--pseudo-radio-box`\n\t- `.o-forms-input--checkbox`\n\t- `.o-forms-input--date`\n\t- `.o-forms-input--inline`\n\t- `.o-forms-input--invalid`\n\t- `.o-forms-input--radio-box`\n\t- `.o-forms-input--radio-round`\n\t- `.o-forms-input--select`\n\t- `.o-forms-input--text-area`\n\t- `.o-forms-input--text-input`\n\t- `.o-forms-input--toggle`\n\t- `.o-forms-input--valid`\n\n\nThe JavaScript for `o-forms` now accepts two options:\n- `useBrowserValidation`: whether to use the browsers validtion and error messages. Defaults to `false`\n- `errorSummary`: whether to display a summary of invalid fields on form submit. Defaults to `true`\n\n### Migrating from v5 to v6\nVersion 6 uses a new major version of o-loading. Make sure your project is compatible with o-loading@3.0.0\n\n### Migrating from v4 to v5\n\nVersion 5 makes some design improvements including tightening up the spacing around checkboxes and radio buttons. It also provides many [new mixins](#sass) to make it easier to output `o-forms` features granularly.\n\n#### Checkboxes & Radios\n- Wrap groups of checkboxes and radios in `.o-forms__group` for correct vertical spacing.\n- `oFormsRadioCheckbox` no longer outputs all styles for checkboxes and radios, only what is shared between them. Use `oFormsRadioCheckboxFeatures` instead.\n- It is no longer possible to modify the complete selector of radios, checkboxes, or their labels. The base `.o-forms` class may still be updated using the `$class` argument.\n\n#### Prefix, Suffix\n- Prefixes have been removed entirely. We recommend using additional label information and feedback in form validation instead.\n- Suffix buttons now use standard `o-buttons` styling.\n- Check your uses of suffixs still display correctly. In the case of button suffixes it may be necessary to apply the extra `o-buttons` classes `.o-buttons--secondary` and `.o-buttons--big`.\n- The mixins `oFormsAffixButton`, `oFormsAffixCheckbox`, `oFormsPrefixSuffix` have been removed. Use `oFormsSuffixFeature` for suffix classes including the affix wrapper (as documented above).\n\n#### Toggles\n- `.o-forms__checkbox-toggle` has been renamed `.o-forms__toggle`.\n- The `oFormsCheckboxToggleSize` mixin has been removed due to lack of use.\n\n#### Wrappers and Messages\n- Wrappers have been renamed to sections. Their class names have also been updated to conform to the BEM naming convention (as optional containers their name should not contain `__` as they are not elements of a block).\n\t- `.o-forms__wrapper` becomes `.o-forms-section`.\n\t- `.o-forms__wrapper--highlight` becomes `.o-forms-section--highlight`.\n\t- `.o-forms__wrapper--error` which becomes `.o-forms-section--error`.\n\t- The `oFormsMessage` mixin now only outputs minimal message styles, uses should be replaced with `oFormsSectionFeature`.\n- Messages are now child elements of a section and must not be used independently.\n\t- Wrap messages within a form section `.o-forms-section` if they are not already. They should be the first child of the section.\n\t- Remove the class `.o-forms__message--error`. A message now infers that it is an error message based on its parent section `.o-forms-section--error`.\n\n#### Other changes\n- `oFormsFullWidth` has been removed. Use `oFormsWideFeature` for classes to remove form max width restrictions.\n- There is a new dependancy on `o-icons`. Build your project to confirm that it is compatible.\n\nPlease [contact us](#contact) if you have any queries.\n\n### Migrating from v3 to v4\n- A dependency on [o-typography](http://github.com/financial-times/o-typography) v5 has been introduced. This will break any builds that use o-typography <v5. __Resolution__: Update to o-typography v5.\n- The o-colors dependency has been updated to `^4`. This could create bower conflicts which should be resolved by updating to the newest release of o-colors.\n- The design for o-forms has changed in v4. This could create issues on your pages which make use of o-forms. Ensure that the updated design does not break the layout on your webpage.\n\n----\n\n### Migrating from v2 to v3\n\nThe main change in `v2` is that classes provided by `o-forms` now conform more strictly to the [BEM naming convention][bem]. All form field classes now follow the element convention, so `o-forms-text` is now `o-forms__text`.\n\nThere is also now a main block class of `o-forms` which replaces the previous `o-forms-group` class. Full class changes are below:\n\n- `o-forms-group` becomes `o-forms`\n- Search templates for `o-forms-xxxxx` and replace with `o-forms__xxxxx`\n\nAn example of the changes should be:\n\n```diff\n-<div class=\"o-forms-group\">\n+<div class=\"o-forms\">\n\n-<label class=\"o-forms-label\"></label>\n+<label class=\"o-forms__label\"></label>\n\n-<input type=\"radio\" class=\"o-forms-radio\" />\n+<input type=\"radio\" class=\"o-forms__radio\" />\n\n-<input type=\"checkbox\" class=\"o-forms-checkbox\" />\n+<input type=\"checkbox\" class=\"o-forms__checkbox\" />\n\n-<input type=\"text\" class=\"o-forms-text\" />\n+<input type=\"text\" class=\"o-forms__text\" />\n```\n\nAny modifier classes like `o-forms--error` have remained the same.\n\n\n### Migrating to v1\n\n#### 1. Module name change\n\n`o-ft-forms` becomes `o-forms` in v1.\n\n1. Search `o-ft-forms` and replace with `o-forms`\n2. Search `oFtForms` and replace with `oForms`\n\n#### 2. Web fonts and icons\n\nIn the v0.x.x of o-forms, the module loaded webfonts itself and was setting its own font-family.\n\nThe module now inherits the `font-family` set in your application and doesn't embed web fonts anymore.\n\nSolution: products must load webfonts themselves (tipically, with [o-fonts](https://github.com/Financial-Times/o-fonts) and [o-ft-icons](https://github.com/Financial-Times/o-ft-icons)).\n\n```html\n<!-- Load web fonts and icons with @font-face declarations  -->\n<link rel=\"stylesheet\" href=\"https://www.ft.com/__origami/service/build/v2/bundles/css?modules=o-fonts@^3.0.0,o-icons@^5.0.0\" />\n\n<!-- Set the font family on the whole document -->\n<style>\n\thtml {\n\t\tfont-family: BentonSans, sans-serif;\n\t}\n</style>\n```\n\n\n#### 3. Helper classes name changes\n\nThe most important change is with input elements, that now have their own classes:\n\n```diff\n-<input type=\"radio\" class=\"o-ft-forms__field\" />\n+<input type=\"radio\" class=\"o-forms-radio\" />\n\n-<input type=\"checkbox\" class=\"o-ft-forms__field\" />\n+<input type=\"checkbox\" class=\"o-forms-checkbox\" />\n\n-<input type=\"text\" class=\"o-ft-forms__field\" />\n+<input type=\"text\" class=\"o-forms-text\" />\n```\n\n- `o-ft-forms__field-group` > `o-forms-group`\n- `o-ft-forms__field--textarea` becomes `o-forms-textarea`\n- `o-ft-forms__field--select` becomes `o-forms-select`\n- Any `o-ft-forms__xxxx` becomes `o-forms-xxxx`\n- Search templates for `o-ft-forms__global-message--error` and replace with `o-forms-message o-forms-message--error`\n- Search templates for `o-forms-error-wrapper` and replace with `o-forms-wrapper o-forms-wrapper--error`\n\n`o-ft-forms__section` is deprecated: sections (previously `<fieldset class=\"o-ft-forms__section\">`) have to be styled at a product level. Since fieldsets have browser-specific styling issues, prefer `<div>` elements.\n\n#### 4. Mixins and placeholder classes\n\nIf using placeholder classes or extending styles using `oFormsClass` and `oFormsPlaceholderOptionalSelector`, use normal selectors, and include the matching mixins, documented in the [SassDoc documentation of the module](http://sassdoc.webservices.ft.com/v1/sassdoc/o-forms).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-forms [![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](#licence)\n\nFT-branded styles for form elements.\n\n- [Markup](#markup)\n\t- [Single input fields](#single-input-fields)\n\t\t- [`input[type=text]`](#inputtypetext)\n\t\t- [`input[type=password]`](#inputtypepassword)\n\t\t- [`textarea`](#textarea)\n\t\t- [`select`](#select)\n\t\t- [Modifiers](#modifiers)\n\t- [Multiple input fields](#multiple-input-fields)\n\t\t- [`input[type=radio]`](#inputtyperadio)\n\t\t\t- [Round](#round)\n\t\t\t- [Box](#box)\n\t\t- [`input[type=checkbox]`](#inputtypecheckbox)\n\t\t\t- [Square](#square)\n\t\t\t- [Toggle](#toggle)\n\t- [Uncategorised input fields](#uncategorised-input-fields)\n\t\t- [Date inputs](#date-inputs)\n\t\t- [Pseudo Radio Links](#pseudo-radio-links)\n\t- [Shared Modifiers](#shared-modifiers)\n\t\t- [Field modifiers](#field-modifiers)\n\t\t- [Input modifiers](#input-modifiers)\n\t- [Errors](#errors)\n\t\t- [Custom errors](#custom-errors)\n\t\t- [Error summary](#error-summary)\n- [Sass](#sass)\n\t- [Options](#options)\n\t- [Customisation](#customisation)\n- [Accessibility](#accessibility)\n- [JavaScript](#javascript)\n\t- [Form Instance](#form-instance)\n\t- [Individual Inputs](#individual-inputs)\n\t- [State](#state)\n- [Migration guide](#migration-guide)\n- [Contact](#contact)\n- [Licence](#licence)\n\n\n## Markup\n`o-forms` defines form elements as a combination of 'fields' and 'inputs'. At its core, a field holds the information about an input (such as a label) and the input itself.\n\nRegardless of the input type used, all elements follow the same structure:\n```\n┌— field container (.o-forms-field) —————┐\n|      (one of div or label)             |\n|                                        |\n|  ┌ title container (.o-forms-title) ┐  |\n|  |    (group titles or              |  |\n|  |     individual input labels)     |  |\n|  └——————————————————————————————————┘  |\n|                                        |\n|  ┌ input container (.o-forms-input) ┐  |\n|  |    (group inputs or              |  |\n|  |     individual inputs)           |  |\n|  └——————————————————————————————————┘  |\n└————————————————————————————————————————┘\n```\n\nBearing that in mind, all form elements are divided into two main categories, with a couple of outliers: \n- [single input fields](#single-input-fields)\n- [multiple input fields](#multiple-input-fields)\n- [uncategorised input fields](#uncategorised-input-fields)\n\nOverall, the same modifiers will work for the structure outlined above. \nIf a particular form element has a unique modifier, it will be under its markup description.\n- [Field modifiers](#field-modifiers)\n- [Input modifiers](#input-modifiers)\n\n### Single input fields\n\n`o-forms` consideres a single input field to be a field that has **one** input, like a text input, rather than multiple children, such as radio buttons.\n\nEvery single input field requires a root structure that looks like this:\n```html\n<label class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\"> Label for input here </span>\n\t\t<span class=\"o-forms-title__prompt\"> Optional text to describe the input here </span>\n\t</span>\n\n\t<span class=\"o-forms-input\">\n\t\t<!-- input element -->\n\t</span>\n</label>\n```\n\n`o-forms` provides a different modifier class for each input type, as shown in the examples below:\n\n#### `input[type=text]`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t<input type=\"text\"/>\n\t</span>\n...\n```\n\n#### `input[type=password]`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--password\">\n\t\t<input type=\"password\"/>\n\t</span>\n...\n```\n[_See the full markup for text and password input in the registry_](https://registry.origami.ft.com/components/o-forms#text-input)\n#### `textarea`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--textarea\">\n\t\t<textarea></textarea>\n\t</span>\n...\n```\n[_See the full markup for text areas in the registry_](https://registry.origami.ft.com/components/o-forms#text-area)\n#### `select`\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--select\">\n\t\t<select>\n\t\t\t<option>Option 1</option>\n\t\t\t<!-- further options -->\n\t\t</select>\n\t</span>\n...\n```\nIt is also possible to have a multiple select input by adding the `multiple` attribute\t:\n```diff\n...\n\t<span class=\"o-forms-input o-forms-input--select\">\n-\t\t<select>\n+\t\t<select multiple>\n\t\t\t<option>Option 1</option>\n\t\t\t<!-- further options -->\n\t\t</select>\n\t</span>\n...\n```\n[_See the full markup for select inputs in the registry_](https://registry.origami.ft.com/components/o-forms#select)\n\n#### Modifiers\nAll single input fields accept the following modifiers on the input container:\n- `o-forms-input--small`: reduces the height of the input field\n- `o-forms-input--suffix`: inlines a sibling element (e.g. a button) with the input\n- `o-forms-title--vertical-center`: aligns the title container vertically (most useful when there is no prompt text)\n- `o-forms-title--shrink`: shrinks the title container to the width of a shorter title (should be used with `o-forms-field--inline`):\n```diff\n...\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field o-forms-field--inline\">\n-\t<span class=\"o-forms-title\">\n+\t<span class=\"o-forms-title o-forms-title--shrink\">\n\t\t<span class=\"o-forms-title__main\"> Label for input here </span>\n\t\t<span class=\"o-forms-title__prompt\"> Optional text to describe the input here </span>\n\t</span>\n\t...\n</div>\n```\n### Multiple input fields\nA multiple input field is considered a field with multiple sibling inputs, e.g. radio buttons.\n\nEvery multiple input field requires a root structure that looks like this:\n```html\n<div class=\"o-forms-field\">\n\t<span class=\"o-forms-title\">\n\t\t<span class=\"o-forms-title__main\">Group Title</span>\n\t\t<span class=\"o-forms-title__prompt\">Group info</span>\n\t</span>\n\n\t<span class=\"o-forms-input\">\n\t\t<!-- sibling inputs -->\n\t</span>\n</div>\n```\n\n#### `input[type=radio]`\nThere are two different visual styles available for radio inputs, which we've called 'Round' and 'Box'. They can be output using specific modifier classes:\n\n##### Round\nFor a regular, round radio button, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--radio-round\">\n\t\t<label>\n\t\t\t<input type=\"radio\" name=\"my-round-radio\"/>\n\t\t\t<span class=\"o-forms-input__label\">Radio 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"radio\" name=\"my-round-radio\"/>\n\t\t\t<span class=\"o-forms-input__label\">Radio 2</span>\n\t\t</label>\n\t</span>\n...\n```\n[_See the full markup for a round radio button in the registry_](https://registry.origami.ft.com/components/o-forms#radio-round)\n\n##### Box\nFor a box-like, rectangular radio button, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"my-box-radio\"/>\n\t\t\t\t<span class=\"o-forms-input__label\">Radio 1</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"my-box-radio\"/>\n\t\t\t\t<span class=\"o-forms-input__label\">Radio 2</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n...\n```\n\nThis input type also accepts a 'negative' modifier `o-forms-input__label--negative`, which changes the background colour of an input when selected (usually for a negative choice):\n```html\n<div class=\"o-forms-field\">\n\t...\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"negative\" value=\"Yes\">\n\t\t\t\t<span class=\"o-forms-input__label\">Yes</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"negative\" value=\"No\"checked>\n\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\">No</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n</div>\n```\n[_See the full markup for a box-style radio button in the registry_](https://registry.origami.ft.com/components/o-forms#radio-box)\n\n#### `input[type=checkbox]`\nThere are two different visual styles available for checkbox inputs, which are a default square checkbox or a toggle checkbox. They can be output using specific modifier classes:\n\n##### Square\nFor a regular, squared checkbox, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--checkbox\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 2</span>\n\t\t</label>\n\t</span>\n...\n```\n\nTo align the checkbox to the **right** of its label, you can add the `o-forms-input__right` class:\n```diff\n...\n<span class=\"o-forms-input o-forms-input--checkbox\">\n-\t\t<label>\n+\t\t<label class=\"o-forms-input__right\">\n\t\t\t<input type=\"checkbox\" name=\"my-checkbox\"/>\n\t\t\t<span class=\"o-forms-input__label\">Checkbox 1</span>\n\t\t</label>\n\t</span>\n...\n```\n\n[_See the full markup for regular checkboxes in the registry_](https://registry.origami.ft.com/components/o-forms#checkboxes)\n\n##### Toggle\n\nFor a toggle checkbox, you'll need the following markup:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--toggle\">\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-toggle\"/>\n\t\t\t<span class=\"o-forms-input__label\">Toggle 1</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"checkbox\" name=\"my-toggle\"/>\n\t\t\t<span class=\"o-forms-input__label\">Toggle 2</span>\n\t\t</label>\n\t</span>\n...\n```\n\nThis is currently the only input type that has an inverse state. \nFor this you'll need to add the `o-forms-field--inverse` to the parent element:\n\n```diff\n-<div class=\"o-forms-field\">\n+<div class=\"o-forms-field o-forms-field--inverse\">\n\t<span class=\"o-forms-title\">\n\t\t...\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--toggle\">\n\t\t<!-- toggle inputs -->\n\t</span>\n</div>\n```\n[_See the full markup for regular checkboxes in the registry_](https://registry.origami.ft.com/components/o-forms#toggle)\n\n\n### Uncategorised input fields\nDate inputs and anchor elements with box-like styling are outliers to the rules above.\n\n#### Date inputs\nWe do not use `input[type=date]`, but instead combine three `input[type=text]` within the [base structure for a multiple input field](#multiple-input-fields), as shown below:\n```html\n...\n\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"[0-9]{2}\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">DD</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"0?[1-9]|1[012]\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">MM</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" pattern=\"[0-9]{4}\" name=\"my-date\"/>\n\t\t\t<span class=\"o-forms-input__label\">YYYY</span>\n\t\t</label>\n\t</span>\n...\n```\n[_See the full markup for date inputs in the registry_](https://registry.origami.ft.com/components/o-forms#date)\n\n#### Pseudo Radio Links\nAnchor elements are an entirely separate entity. They _look_ like a form element but do not function as one. They are styled to look like a box-like radio button.\n\n```html\n<div class=\"o-forms-input o-forms-input--pseudo-radio-link\">\n\t\t<a class=\"o-forms-input__link o-forms-input__link--current\" href=\"#\">Link A</a>\n\t\t<a class=\"o-forms-input__link\" href=\"#\">Link B</a>\n</div>\n```\n[_See the full markup for an anchor element in the registry_](https://registry.origami.ft.com/components/o-forms#pseudo-radio-links)\n\n\n### Shared Modifiers\nThe markup structure outlined at the [beginning of this section](#markup) indicates containers for a form field that accept modifiers.\n\n#### Field Modifiers\nThe following modifiers are available for the `o-forms-field` element:\n- `o-forms-field--optional`: indicates that a field is optional, and will append `(optional)` to the end of the field's title.\n- `o-forms-field--inline`: inlines the title container to the input container\n\n#### Input Modifiers\n- `o-forms-input--valid`: identifies a valid input, gets set dynamically on form valdiation\n- `o-forms-input--invalid`: identifies an invalid input, gets set dynamically on form valdiation. This requires additional markup to be added as a direct child of the `o-forms-input` element:\n```diff\n-<span class=\"o-forms-input\">\n+<span class=\"o-forms-input o-forms--invalid\">\n\t<!-- input(s) -->\n+\t<span class=\"o-forms-input__error>Error message here</span>\n</span>\n```\n- `o-forms-input--inline`: inlines all inputs with each other (usually only used on multiple input fields).\n\n\n### Errors\n\nIn terms of invalid inputs, `o-forms` has a built in mechanism to display custom errors and an error summary. If neither of these work for your product, you can also choose to use [native browser validation](#form-instance).\n\n#### Custom Errors\nIn order to provide customised error messages for an invalid input field, you'll need to add the message to the markup. In any of the structures shown in the markup above, the error message will need to live within the input container as a sibling to the input elements:\n```html\n...\n\t<span class=\"o-forms-input\">\n\t\t<!-- inputs -->\n\t\t<span class=\"o-forms-input__error\">This is the error message</span>\n\t</span>\n...\n```\nThe message is hidden by default, until the input field becomes invalid. \n\n#### Error Summary\n`o-forms` also generates an error message element when a form is submitted and invalid inputs are recognised.\n\nThis feature will collect the custom messages of the invalid fields if they are present in the markup, or will default to the browsers native error message if they aren't. It will associate the message to the title of the input that is invalid, generate a list of links at the top of the form, and focus on the first link.\n\nThis markup will always be generated dynamically if the [errorSummary option](#form-instance) is set to `true`.\n\n## Sass\n`o-forms` has a primary mixin; `oForms()`.\n\nYou can include styles for every input type and feature by calling that mixin:\n```scss\n@import 'o-forms';\n@include oForms();\n```\n\nIf you would like to be more specific about what aspects of the styles get output, then you'll need to provide the primary mixin with an `$opts` map. For example, in order to output styles for text inputs and checkboxes, and add the abilty to inlne them, you would use the following:\n```scss\n@import 'o-forms';\n@include oForms($opts: (\n\t'elements': ('text-input', 'checkbox'),\n\t'features': ('inline')\n));\n```\n### Options\n`o-forms` has many options due to its comprehensive nature.  \nThe `$opts` map accepts two lists with the following options:\n- `'elements'`:\n\t- `'checkbox'`\n\t- `'date'`\n\t- `'password'`\n\t- `'pseudo-radio-link'`\n\t- `'radio-round'`\n\t- `'radio-box'`\n\t- `'select'`\n\t- `'textarea'`\n\t- `'text'`\n\t- `'toggle'`\n- `'features'`:\n\t- `'disabled'`\n\t- `'inline'`\n\t- `'right'`\n\t- `'inverse'`\n\t- `'small'`\n\t- `'state'`\n\t- `'suffix'`\n\n_Note 1: `valid` and `invalid` styles are output with the base of `o-forms` so there is no need to include them in the list above._\n\n_Note 2: It's important to remember that not all features will apply to all input types. If there are any features you would like to see added to an input, please [get in touch with the team](#contact)._\n\n\n### Customisation\n\nThere is one public mixin to customise two types of input: [pseudo radio links](#pseudo-radio-links) and [box-styled `input[type=radio]`](#inputttyperadio-box).\nIt accepts four arguments:\n- `$input`: (required) either `'pseudo-radio-link'` or `'radio'`\n- `$modifier`: (required) this will name the modifier to add to the input container class list\n- `$icons`: (optional) accepts an icon or a list of icons to output according to the custom theme\n- `$theme`: (required) a map of the colors that define the custom theme:\n\t- `'controls-base'`: the base color of the theme\n\t- `'controls-checked'`: the background color of a checked input\n\t- `'controls-negative-checked-background'`: the background color for a 'negative' checked input\n\n```scss\n@include oFormsAddCustom({\n\t$input: 'radio',\n\t$modifier: 'my-theme', // outputs the class 'o-forms-input--my-theme',\n\t$icons: 'burger'\n\t$theme: (\n\t\tcontrols-base: 'claret',\n\t\tcontrols-checked-base: 'white',\n\t\tcontrols-negative-checked-background: 'claret-30'\n\t)\n})\n```\n\n## Accessibility\n\n`o-forms` has been written with a strong focus on accessibility.\nWe've chosen to override native browser validation and to provide an error summary on form submit (this behaviour relies on JavaScript to run). We [have a more detailed explanation](./ACCESSIBILITY.md) about these topics and writing markup to comply with that accessibility, please read through it to familiarise yourself with some of our reasoning and recommended practices.\n\n## JavaScript\n\nNo code will run automatically unless you are using the Build Service. You must either construct an `o-forms` object or fire an `o.DOMContentLoaded` event, which `o-forms` listens for.\n\nThe JavaScript for this component is primarily responsible for individual input validation and overall form validation.\n\nIf you would like to use an input without a form element, you can still apply validation to it with the `o-forms` [individual `Input` API](#individual-inputs).\n\n### Form Instance\n\nThe main `o-forms` JavaScript has been written to identify and run on a `<form>` element. You'll need to set up your form and include the data attribute `data-o-component=\"o-forms\"`:\n```html\n<form data-o-component=\"o-forms\">\n\t<!-- form elements as demonstrated in the markup section above  -->\n</form>\n```\n\nBy default, `o-forms` is initialised _without_ native browser validation, and with an error summary for invalid elements when the form is submitted. In order to use the default behaviour, you'll need to do the following:\n```js\nimport oForms from 'o-forms';\noForms.init()\n```\nThe default behaviour can be changed by configuring the options object:\n```js\noForms.init(null, {\n\tuseBrowserValidation: true, \n\terrorSummary: false\n})\n```\nYou can also set these values to the data attributes `data-o-forms-use-browser-validation` and `data-o-forms-error-summary` on the `<form>` element if you are not initialising the `oForms` instance in your product.\n\n### Individual Inputs\n\nIn the case where a single input is enough for a product but requires validation, you can initialise an `Input` instance:\n```js\nimport Input from 'o-forms/src/js/input';\nnew Input(myInputEl);\n```\n\n### State\n`o-forms` offers the ability to display a 'saving' or 'saved' state. However, currently the only input that accepts state is the [box-styled `input[type=radio]`](#inputtyperadio-box). If you would like to apply state to any other input, please [get in touch with the team](#contact).\n\n`o-forms` has no opinion about the timing of the states—it doesn't know when to change from 'saving' to 'saved', but it has a public method that allows the project to control this (shown below).\n\nIn order to set up a state, you'll need to use a method on an existing form instance. \n\nThis method accepts a state and a name argument. State can be one of 'saving', 'saved' or 'none', 'none' being responsible for removing the state from the input. The name argument must be the name of the inputs that will be recieving the state. For example:\n```html\n<form data-o-component=\"o-forms\">\n\t...\n\t\t<label>\n\t\t\t<span class=\"o-forms-input__label\">Daily</span>\n\t\t\t<input type=\"radio\" name=\"my-radio-box\"/>\n\t\t</label>\n\t\t\t<label>\n\t\t\t<span class=\"o-forms-input__label\">Weekly</span>\n\t\t\t<input type=\"radio\" name=\"my-radio-box\"/>\n\t\t</label>\n\t...\n</form>\n``` \n```js\nimport oForms from 'o-forms';\nlet myForm = oForms.init();\n// on event, e.g. click\nmyForm.setState('saving', 'my-radio-box');\n```\n\nYou also have the option of displaying state as an icon without text. In order to do this, you can call the method above with an extra argument:\n\n```js\nmyForm.setState('saving', 'my-radio-box', iconOnly: true);\n```\n\n\n## Migration\n\nState | Major Version | Last Minor Release | Migration guide |\n:---: | :---: | :---: | :---:\n✨ active | 7 | N/A | [migrate to v7](MIGRATION.md#migrating-from-v6-to-v7) |\n⚠ maintained | 6 | 6.0 | [migrate to v6](MIGRATION.md#migrating-from-v5-to-v6) |\n╳ deprecated | 5 | 5.11 | [migrate to v5](MIGRATION.md#migrating-from-v4-to-v5) |\n╳ deprecated | 4 | 4.1 | [migrate to v4](MIGRATION.md#migrating-from-v3-to-v4) |\n╳ deprecated | 3 | 3.5 | [migrate to v3](MIGRATION.md#migrating-from-v2-to-v3) |\n╳ deprecated | 2 | 2.0 | [migrate to v2](MIGRATION.md#migrating-from-v1-to-v2) |\n╳ deprecated | 1 | 1.0 | [migrate to v1](MIGRATION.md#migrating-to-v1) |\n╳ deprecated | 0 | 0.13 | N/A |\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-forms/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n\t\"name\": \"o-forms\",\n\t\"main\": [\n\t\t\"main.scss\",\n\t\t\"main.js\"\n\t],\n\t\"dependencies\": {\n\t\t\"o-brand\": \"^3.2.3\",\n\t\t\"o-colors\": \"^4.0.1\",\n\t\t\"o-grid\": \"^4.0.0\",\n\t\t\"o-icons\": \"^5.7.0\",\n\t\t\"o-loading\": \"^3.0.0\",\n\t\t\"o-normalise\": \"^1.6.2\",\n\t\t\"o-typography\": \"^5.11.3\"\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "browser.js",
      "contents": "import oForms from \"./dist/js/forms\";\n\nvar constructAll = function constructAll() {\n  oForms.init();\n  document.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\nexport default oForms;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/checkboxes.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"checkbox-group-title\",\n\t\t\t\t\t\"info\": \"checkbox-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Stacked checkboxes\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Stacked 3\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-checkbox-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select at least one option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"This is a very long inlined checkbox to demonstrate the correct alignment of checkboxes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-inline-checkbox-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"inline\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inline 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inline 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-checkbox-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and stacked checkboxes\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 2\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inline 3\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"password-checkbox-group-title\",\n\t\t\t\t\t\"info\": \"password-checkbox-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"password\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Right side checkboxes\",\n\t\t\t\t\"prompt\": \"Interface demo only, password hide/show functionality is not currently included in o-forms.\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"password\",\n\t\t\t\t\t\"value\": \"password\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"show\",\n\t\t\t\t\t\"value\": \"Show password\",\n\t\t\t\t\t\"label\": \"o-forms-input__right\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"extra-content-checkbox-group-title\",\n\t\t\t\t\t\"info\": \"extra-content-checkbox-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Checkboxes with extra content\",\n\t\t\t\t\"prompt\": \"Indeterminate interface demo only, select/unselect all functionality is not currently included in o-forms\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"Select All\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"I confirm I have read and agree to the terms &amp; conditions, privacy policy and cookie policy*.\",\n\t\t\t\t\t\"additionalContent\": \"We will send you occasional emails to improve your experience of the Financial Times.\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"name\": \"extra\",\n\t\t\t\t\t\"value\": \"By submitting this form, you indicate your consent to also being contacted by the Financial Times by email. post or phone about our other products, services or special offers unless you untick this box. You can change your preferences anytime in the My Account section.\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/custom.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"demo-radio\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Custom radio buttons and anchor\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"modifiers\": [ \"demo-pseudo-radio-link\" ],\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Anchor Link A\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Anchor Link B\",\n\t\t\t\t\t\"href\": \"#\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"demo-radio\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Custom radio buttons and anchor\",\n\t\t\t\t\"prompt\": \"With prefixed icons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Grid\",\n\t\t\t\t\t\"icon\": \"grid\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"List\",\n\t\t\t\t\t\"icon\": \"list\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"modifiers\": [ \"demo-pseudo-radio-link\" ],\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Grid Link\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true,\n\t\t\t\t\t\"icon\": \"grid\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"List Link\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"icon\": \"list\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/date.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"date-group-title\",\n\t\t\t\t\t\"info\": \"date-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Date input\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabled-date-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled date input\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"disabled-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-date-group-title\",\n\t\t\t\t\t\"info\": \"error-date-group-info\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Not a valid date\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Invalid date input\",\n\t\t\t\t\"prompt\": \"Exemplifies a pattern mismatch\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\"value\": \"01\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\"value\": \"24\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"invalid-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\"value\": \"2019\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-date-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"inline\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline date input\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\":\"[0-9]{2}\",\n\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"name\": \"inline-date\",\n\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/pa11y.json",
      "contents": "{\n\t\"multiple-inputs\": {\n\t\t\"variants\": [\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"checkbox-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Stacked checkboxes\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 3\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"disabed-checkbox-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled checkboxes\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"date-group-title\",\n\t\t\t\t\t\t\"info\": \"date-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Date input\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{2}\",\n\t\t\t\t\t\t\"date\": \"DD\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\t\"date\": \"MM\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\t\"date\": \"YYYY\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"date\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"error-date-group-title\"\n\t\t\t\t\t},\n\t\t\t\t\t\"error\": \"Not a valid date\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"invalid\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Invalid date input\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{2}\",\n\t\t\t\t\t\t\"date\": \"DD\",\n\t\t\t\t\t\t\"value\": \"01\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"0?[1-9]|1[012]\",\n\t\t\t\t\t\t\"date\": \"MM\",\n\t\t\t\t\t\t\"value\": \"24\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\"pattern\": \"[0-9]{4}\",\n\t\t\t\t\t\t\"date\": \"YYYY\",\n\t\t\t\t\t\t\"value\": \"2019\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Box style radio buttons\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"multiple-radio-box-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Multiple checkboxes\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\t\"value\": \"Monthly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"radioBox\": true,\n\t\t\t\t\"inline-field\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t\t},\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"saving\",\n\t\t\t\t\t\t\"inline\"\n\t\t\t\t\t],\n\t\t\t\t\t\"state\": true\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Inline Saving state\",\n\t\t\t\t\t\"prompt\": \"When saving a preference\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"radio-round-group-title\",\n\t\t\t\t\t\t\"info\": \"radio-round-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Default radio buttons\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Default 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Default 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"disabed-radio-round-group-title\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled radio buttons\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\t\"disabled\": true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"toggle\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"toggle-group-title\",\n\t\t\t\t\t\t\"info\": \"toggle-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Default toggle checkboxes\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\t\"value\": \"Stacked 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"inverse\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"field\": {\n\t\t\t\t\t\"type\": \"toggle\",\n\t\t\t\t\t\"aria\": {\n\t\t\t\t\t\t\"label\": \"inverse-toggle-group-title\",\n\t\t\t\t\t\t\"info\": \"inverse-toggle-group-info\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Inverse checkboxes\",\n\t\t\t\t\t\"prompt\": \"Inverse prompt text\"\n\t\t\t\t},\n\t\t\t\t\"inputs\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"inverse\",\n\t\t\t\t\t\t\"value\": \"Inverse 1\",\n\t\t\t\t\t\t\"checked\": true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\"name\": \"inverse\",\n\t\t\t\t\t\t\"value\": \"Inverse 2\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t\"single-input\": {\n\t\t\"variants\": [\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Optional text input\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with a valid entry\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"valid\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"Valid Input\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with an invalid entry\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"invalid\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"Invalid Input\",\n\t\t\t\t\t\"error\": \"Something went wrong\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"disabled\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled text input\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"value\": \"Disabled\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Text input with suffix\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"suffix\"\n\t\t\t\t\t],\n\t\t\t\t\t\"value\": \"\",\n\t\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textInput\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Password input\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"password\",\n\t\t\t\t\t\"value\": \"password\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"select\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Small select box\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\"Option 1\",\n\t\t\t\t\t\t\"Option 2\",\n\t\t\t\t\t\t\"Option 3\",\n\t\t\t\t\t\t\"Option 4\"\n\t\t\t\t\t],\n\t\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\t\"small\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"select\": true,\n\t\t\t\t\"multiple\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Multiple select box\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"select\",\n\t\t\t\t\t\"options\": [\n\t\t\t\t\t\t\"Option 1\",\n\t\t\t\t\t\t\"Option 2\",\n\t\t\t\t\t\t\"Option 3\",\n\t\t\t\t\t\t\"Option 4\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textArea\": true,\n\t\t\t\t\"optional\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Optional text area\",\n\t\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"textarea\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"textArea\": true,\n\t\t\t\t\"disabled\": true,\n\t\t\t\t\"title\": {\n\t\t\t\t\t\"main\": \"Disabled text area\"\n\t\t\t\t},\n\t\t\t\t\"input\": {\n\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\"value\": \"Disabled\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/pseudo-radio-links.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"anchor\": true,\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Link A\",\n\t\t\t\t\t\"href\": \"#\",\n\t\t\t\t\t\"current\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"Link B\",\n\t\t\t\t\t\"href\": \"#\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/radio-box.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-box-group-title\",\n\t\t\t\t\t\"info\": \"radio-box-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Box style radio buttons\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"negative-radio-box-group-title\",\n\t\t\t\t\t\"info\": \"negative-radio-box-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Negative highlight\",\n\t\t\t\t\"prompt\": \"Requires a modifier on the label\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"negative\",\n\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"negative\",\n\t\t\t\t\t\"value\": \"No\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"modifier\": [\"negative\"]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"multiple-radio-box-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Multiple box-styled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"multiple\",\n\t\t\t\t\t\"value\": \"Monthly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-radio-box-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled box-styled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Monthly\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select an option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error box-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Yes\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"No\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-box-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"V-centered inline radio box\",\n\t\t\t\t\"modifiers\": [ \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"saving\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline box-style radio buttons\",\n\t\t\t\t\"prompt\": \"With a stacked saving state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saving\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saved-state-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"saved\", \"inline\"],\n\t\t\t\t\"state\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline saved state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saved\",\n\t\t\t\t\t\"value\": \"Daily\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"saved\",\n\t\t\t\t\t\"value\": \"Weekly\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"radioBox\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-box\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"saving-state-group-title\",\n\t\t\t\t\t\"info\": \"saving-state-group-info\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [ \"saving\", \"inline\" ],\n\t\t\t\t\"state\": true,\n\t\t\t\t\"icon\": true\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline saving state\",\n\t\t\t\t\"prompt\": \"Icon only—also available for saved state\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Daily\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"icon\",\n\t\t\t\t\t\"value\": \"Weekly\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/radio-round.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"optional\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"radio-round-group-title\",\n\t\t\t\t\t\"info\": \"radio-round-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Default round-style radio buttons\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Default 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"default\",\n\t\t\t\t\t\"value\": \"Default 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\"inline\"]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-radio\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"disabed-radio-round-group-title\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 1\",\n\t\t\t\t\t\"checked\": true,\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"disabled\",\n\t\t\t\t\t\"value\": \"Disabled 2\",\n\t\t\t\t\t\"disabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"error-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"error\": \"Please select an option\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Error round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"error\",\n\t\t\t\t\t\"value\": \"Error 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline round-style radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-radio-round-group-title\"\n\t\t\t\t},\n\t\t\t\t\"modifiers\": [\n\t\t\t\t\t\"inline\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field and radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-field\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"inline-field\": true,\n\t\t\t\"field\": {\n\t\t\t\t\"type\": \"radio-round\",\n\t\t\t\t\"aria\": {\n\t\t\t\t\t\"label\": \"inline-field-stacked-radio-round-group-title\",\n\t\t\t\t\t\"info\": \"inline-field-stacked-radio-round-group-info\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline field\",\n\t\t\t\t\"prompt\": \"And stacked radio buttons\"\n\t\t\t},\n\t\t\t\"inputs\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 1\",\n\t\t\t\t\t\"checked\": true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"radio\",\n\t\t\t\t\t\"name\": \"inline-stacked\",\n\t\t\t\t\t\"value\": \"Inlined 3\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/select.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Default select box\",\n\t\t\t\t\"prompt\": \"Optional prompt/description text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1 (low chars: qgjpy)\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Valid selection\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [\"valid\"]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Invalid selection\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"\",\n\t\t\t\t\"options\": [\"\", \"Option 1\", \"Option 2\", \"Option 3\" ],\n\t\t\t\t\"modifiers\": [\"invalid\"],\n\t\t\t\t\"error\": \"Please select an option\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"small\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"multiple\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Multiple select box\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Select box with suffix\",\n\t\t\t\t\"prompt\": \"And prompt text for good measure\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"suffix\" ],\n\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small select box with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ],\n\t\t\t\t\"modifiers\": [ \"suffix\", \"small\" ],\n\t\t\t\t\"button\": \"o-buttons\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Short title\",\n\t\t\t\t\"prompt\": \"Long input\",\n\t\t\t\t\"modifiers\": [ \"shrink\"]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Vertically centered title\",\n\t\t\t\t\"modifiers\": [ \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"select\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"multiple\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline multiple selectbox\",\n\t\t\t\t\"prompt\": \"Multiple select boxes can also be inlined.\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"select\",\n\t\t\t\t\"selected\": \"Option 1\",\n\t\t\t\t\"options\": [ \"Option 2\", \"Option 3\", \"Option 4\" ]\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/text-area.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Optional text area\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text area with a valid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"modifiers\": [ \"valid\" ],\n\t\t\t\t\"value\": \"Yup!\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text area with an invalid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"error\": \"Please fill out this field\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled text area\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\"value\": \"Disabled\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Inline text area\",\n\t\t\t\t\"prompt\": \"Inline text area fields can be set in this way.\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textArea\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Shrunken title\",\n\t\t\t\t\"prompt\": \"A prompt can go here\",\n\t\t\t\t\"modifiers\": [ \"shrink\"]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"textarea\"\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/text-input.json",
      "contents": "{\n\t\"variants\": [\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Optional text input\",\n\t\t\t\t\"prompt\": \"Optional prompt text\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with a valid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"valid\" ],\n\t\t\t\t\"value\": \"Valid Input\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with an invalid entry\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"invalid\" ],\n\t\t\t\t\"error\": \"Please fill out this field\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"disabled\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Disabled text input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"value\": \"Disabled\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small text input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"small\" ],\n\t\t\t\t\"value\": \"Value\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Text input with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"suffix\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"button\": \"o-buttons o-buttons--big\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Small text input with suffix\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"modifiers\": [ \"small\", \"suffix\" ],\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"button\": \"o-buttons\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"optional\": true,\n\t\t\t\"inline-field\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Shrunken title\",\n\t\t\t\t\"prompt\": \"Vertically centered\",\n\t\t\t\t\"modifiers\": [ \"shrink\", \"vertical-center\" ]\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"text\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"textInput\": true,\n\t\t\t\"title\": {\n\t\t\t\t\"main\": \"Password input\"\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"type\": \"password\",\n\t\t\t\t\"value\": \"password\"\n\t\t\t}\n\t\t}\n\t]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/data/toggle.json",
      "contents": "{\n  \"variants\": [\n    {\n      \"optional\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"toggle-group-title\",\n          \"info\": \"toggle-group-info\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Default toggle inputs\",\n        \"prompt\": \"Optional prompt text\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"default\",\n          \"value\": \"Stacked 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"default\",\n          \"value\": \"Stacked 2\"\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inlined-toggle-group-title\"\n        },\n        \"modifiers\": [ \"inline\" ]\n      },\n      \"title\": {\n        \"main\": \"Inline toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"optional\",\n          \"value\": \"Optional 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"optional\",\n          \"value\": \"Optional 2\"\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"disabed-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Disabled toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"disabled\",\n          \"value\": \"Disabled 1\",\n          \"checked\": true,\n          \"disabled\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"disabled\",\n          \"value\": \"Disabled 2\",\n          \"disabled\": true\n        }\n      ]\n    },\n    {\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"error-toggle-group-title\"\n        },\n        \"error\": \"Something has gone wrong.\",\n        \"modifiers\": [ \"invalid\" ]\n      },\n      \"title\": {\n        \"main\": \"Error toggle inputs\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"error\",\n          \"value\": \"Error 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"error\",\n          \"value\": \"Error 2\"\n        }\n      ]\n    },\n    {\n      \"inline-field\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inline-field-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Inline field with toggle\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-field\",\n          \"value\": \"Inlined 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-field\",\n          \"value\": \"Inlined 2\"\n        }\n      ]\n    },\n    {\n      \"inline-field\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inline-field-toggle-group-title\"\n        },\n        \"modifiers\": [ \"inline\" ]\n      },\n      \"title\": {\n        \"main\": \"Inline field with inline toggle\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-all\",\n          \"value\": \"Inlined 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inline-all\",\n          \"value\": \"Inlined 2\"\n        }\n      ]\n    },\n    {\n      \"inverse\": true,\n      \"optional\": true,\n      \"field\": {\n        \"type\": \"toggle\",\n        \"aria\": {\n          \"label\": \"inverse-toggle-group-title\"\n        }\n      },\n      \"title\": {\n        \"main\": \"Inverse checkboxes\",\n        \"prompt\": \"Inverse prompt text\"\n      },\n      \"inputs\": [\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inverse\",\n          \"value\": \"Inverse 1\",\n          \"checked\": true\n        },\n        {\n          \"type\": \"checkbox\",\n          \"name\": \"inverse\",\n          \"value\": \"Inverse 2\"\n        }\n      ]\n    }\n  ]\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "import '../../main.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\tdocument.dispatchEvent(new CustomEvent('o.DOMContentLoaded'));\n});\n\nlet extraContentInput = document.querySelector(\"input[name='extra']\");\n// indeterminate states can only be set dynamically, there is no attribute for them.\nif (extraContentInput) { extraContentInput.indeterminate = true; }\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-forms-is-silent: false;\n@import \"../../../main\";\n\nbody {\n\t@include oColorsFor(page, background);\n}\n\n.demo {\n\tmargin: 12px;\n\tmax-width: 500px;\n}\n\n.demo-inverse {\n\tmargin-top: 16px;\n\tbackground-color: #262a33;\n\tpadding: 10px;\n\n\t.o-forms {\n\t\tmargin: 0;\n\t}\n}\n\n$custom-theme: (\n\tcontrols-base: 'claret',\n\tcontrols-checked-base: 'white',\n\tcontrols-negative-checked-background: 'claret-30'\n);\n\n$icon-list: ('grid', 'list');\n\n@include oFormsAddCustom(\n\t$input: 'pseudo-radio-link',\n\t$class: 'demo-pseudo-radio-link',\n\t$icons: $icon-list,\n\t$theme: $custom-theme\n);\n\n@include oFormsAddCustom(\n\t$input: 'radio',\n\t$class: 'demo-radio',\n\t$icons: $icon-list,\n\t$theme: $custom-theme\n);\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/interactive.js",
      "contents": "import Forms from '../../src/js/forms.js';\n\nlet formEl = document.forms[0];\nconst form = new Forms(formEl);\n\nlet inputs = formEl.querySelectorAll('input[type=\"radio\"]');\n\nfor (let input of inputs) {\n\tinput.addEventListener('click', (e) => {\n\t\tlet name = e.target.name;\n\t\tform.setState('saving', name);\n\t\tsetTimeout(() => form.setState('saved', name), 400);\n\t\tsetTimeout(() => form.setState('none', name), 1000);\n\t});\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/interactive.mustache",
      "contents": "<form action=\"\" data-o-component=\"o-forms\">\n\n<div class=\"o-forms-field o-forms-field--optional\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t<span class=\"o-forms-title__prompt\">Optional prompt text</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t<label>\n\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"Day (DD)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"Month (MM)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t</label>\n\t\t<label>\n\t\t\t<input type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"Year (YYYY)\" required>\n\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t</label>\n\t\t<span class=\"o-forms-input__error\">Please fill out this field with the required format (DD/MM/YYYY)</span>\n\t</span>\n</div>\n\n<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t</span>\n\n\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t<label>\n\t\t\t\t<input id=\"radio\" type=\"radio\" name=\"box\">\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<input type=\"radio\" name=\"box\" checked>\n\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t</label>\n\t\t</div>\n\t</span>\n</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"required\" type=\"text\" name=\"text\" value=\"\" required>\n\t\t\t<span class=\"o-forms-input__error\">Please fill out this field</span>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t\t<span class=\"o-forms-title__prompt\">Optional prompt text</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<input class=\"o-buttons\" type=\"submit\"/>\n</form>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/multiple-input-field.mustache",
      "contents": "{{#variants}}\n\n{{#anchor}}\n\t<div class=\"o-forms-input o-forms-input--pseudo-radio-link {{#modifiers}}o-forms-input--{{.}}{{/modifiers}}\">\n\t\t{{#inputs}}\n\t\t\t<a class=\"\n\t\t\t\to-forms-input__link\n\t\t\t\t{{#current}} o-forms-input__link--current{{/current}}\n\t\t\t\t{{#icon}} o-forms-input__link--{{.}}-icon{{/icon}}\" href={{href}}>{{value}}</a>\n\t\t{{/inputs}}\n\t</div>\n{{/anchor}}\n\n{{^anchor}}\n\n{{#inverse}}<div class=\"demo-inverse\">{{/inverse}}\n\t\n\t<div class=\"o-forms-field\n\t\t{{#inline-field}} o-forms-field--inline{{/inline-field}}\n\t\t{{#inverse}} o-forms-field--inverse{{/inverse}}\n\t\t{{#optional}} o-forms-field--optional{{/optional}}\n\t\t{{#custom}} demo-custom-radio-theme{{/custom}}\" \n\t\trole=\"group\" \n\t\t{{#field.aria}}\n\t\t\taria-labelledby=\"{{label}}\"\n\t\t\t{{#info}}aria-describedby=\"{{info}}\"{{/info}}\n\t\t{{/field.aria}}>\n\t\t\n\t\t<span\tclass=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"{{field.aria.label}}\">{{title.main}}</span>\n\t\t\t{{#title.prompt}}\n\t\t\t\t<span class=\"o-forms-title__prompt\" {{#field.aria.info}} id={{field.aria.info}} {{/field.aria.info}}>{{.}}</span>\n\t\t\t{{/title.prompt}}\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--{{field.type}}{{#field.modifiers}} o-forms-input--{{.}}{{/field.modifiers}}\">\n\n\t\t\t{{#radioBox}}<div class=\"o-forms-input--radio-box__container\">{{/radioBox}}\n\n\t\t\t{{#inputs}}\n\t\t\t\t<label {{#label}}class=\"{{.}}\"{{/label}}>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"{{type}}\" \n\t\t\t\t\t\tname=\"{{name}}\"\n\t\t\t\t\t\tvalue=\"{{value}}\" \n\t\t\t\t\t\t{{#pattern}}pattern={{.}}{{/pattern}} \n\t\t\t\t\t\taria-label=\"{{value}}\" \n\t\t\t\t\t\t{{#checked}}checked{{/checked}} \n\t\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\n\t\t\t\t\t{{#name}}\n\t\t\t\t\t\t<span class=\"o-forms-input__label\n\t\t\t\t\t\t\t\t\t{{#modifier}} o-forms-input__label--{{.}}{{/modifier}}\n\t\t\t\t\t\t\t\t\t{{#icon}} o-forms-input__label__{{.}}-icon{{/icon}}\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t\t\t{{#pattern}}{{date}}{{/pattern}}{{^pattern}}{{value}}{{/pattern}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t{{/name}}\n\n\t\t\t\t\t{{#additionalContent}}\n\t\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">{{.}}</span>\n\t\t\t\t\t{{/additionalContent}}\n\t\t\t\t</label>\n\t\t\t{{/inputs}}\n\n\t\t\t{{#radioBox}}</div>{{/radioBox}}\n\n\t\t\t{{#field.error}}<span class=\"o-forms-input__error\">{{.}}</span>{{/field.error}}\n\n\t\t\t{{#field.state}}<span class=\"o-forms-input__state {{#field.icon}}o-forms-input__state--icon-only{{/field.icon}}\"></span>{{/field.state}}\n\t\t</span>\n\t\n\t</div>\n\n{{#inverse}}</div>{{/inverse}}\n\n{{/anchor}}\n{{/variants}}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "{{#multiple-inputs}}\n\t{{> multiple-input-field }}\n{{/multiple-inputs}}\n\n{{#single-input}}\n\t{{> single-input-field }}\n{{/single-input}}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/single-input-field.mustache",
      "contents": "{{#variants}}\n\t<label class=\"o-forms-field{{#inline-field}} o-forms-field--inline{{/inline-field}}{{#optional}} o-forms-field--optional{{/optional}}\">\n\t\t\n\t\t<span\tclass=\"o-forms-title{{#title.modifiers}} o-forms-title--{{.}}{{/title.modifiers}}\">\n\t\t\t<span class=\"o-forms-title__main\">{{title.main}}</span>\n\t\t\t{{#title.prompt}}<span class=\"o-forms-title__prompt\">{{.}}</span>{{/title.prompt}}\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--{{input.type}}{{#input.modifiers}} o-forms-input--{{.}}{{/input.modifiers}}\">\n\n\t\t\t{{#textInput}}\n\t\t\t\t<input \n\t\t\t\t\ttype=\"{{input.type}}\" \n\t\t\t\t\tname=\"text\" \n\t\t\t\t\tvalue=\"{{input.value}}\" \n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\t\t\t{{/textInput}}\n\t\t\t\n\t\t\t{{#textArea}}\n\t\t\t\t<textarea \n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>{{input.value}}</textarea>\n\t\t\t{{/textArea}}\n\n\t\t\t{{#select}}\n\t\t\t\t<select \n\t\t\t\t\t{{#multiple}}multiple{{/multiple}}\n\t\t\t\t\t{{#disabled}}disabled{{/disabled}}\n\t\t\t\t\t{{^disabled}}{{^optional}}required{{/optional}}{{/disabled}}>\n\t\t\t\t\t{{#input.selected}}<option value=\"{{.}}\" selected>{{.}}</option>{{/input.selected}}\n\t\t\t\t\t{{#input.options}}<option value=\"{{.}}\">{{.}}</option>{{/input.options}}\n\t\t\t\t</select>\n\t\t\t{{/select}}\n\n\t\t\t{{#input.error}}<span class=\"o-forms-input__error\">{{.}}</span>{{/input.error}}\n\t\t\t{{#input.button}}<button class=\"{{.}}\">Go</button>{{/input.button}}\n\t\t</span>\n\t\n\t</label>\n{{/variants}}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/error-summary.js",
      "contents": "class ErrorSummary {\n  /**\n  * Class constructor.\n  * @param {Array} [elements] - An array of objects, where each object describes an invalid input element\n  * @example\n  * const example = [\n  *\t{\n  *\t\tid: 'text-input',\n  *\t\tvalid: false,\n  *\t\terror: 'Please fill out this field'\n  *\t\tlabel: 'Input Label'\n  *\t}\n  *\t...\n  *\t]\n  *\tnew ErrorSummary(example)\n  */\n  constructor(elements) {\n    this.elements = elements;\n    this.invalidInputs = [];\n    return this.createSummary();\n  }\n  /**\n   * Generate Node to hold list of invalid inputs\n   */\n\n\n  createSummary() {\n    var invalidInputs = [];\n    this.elements.forEach(element => {\n      if (element.valid) {\n        return;\n      }\n\n      invalidInputs.push(element);\n    });\n    var div = document.createElement('div');\n    div.classList.add('o-forms__error-summary');\n    div.setAttribute('aria-labelledby', 'error-summary');\n    div.setAttribute('role', 'alert');\n    div.innerHTML = '<h4 id=\"error-summary\">There is a problem</h4>';\n    div.appendChild(ErrorSummary.createList(invalidInputs));\n    return div;\n  }\n  /**\n   * Generate list of anchors\n   */\n\n\n  static createList(inputs) {\n    var list = document.createElement('ul');\n    inputs.forEach(input => {\n      if (input.id && !input.valid) {\n        var listItem = document.createElement('li');\n        var anchor = ErrorSummary.createAnchor(input);\n        listItem.appendChild(anchor);\n        list.appendChild(listItem);\n      }\n    });\n    return list;\n  }\n  /**\n   * Generate anchor element to point at invalid input\n   * @param {Object} [input] - The input object to construct an anchor for\n   */\n\n\n  static createAnchor(input) {\n    var anchor = document.createElement('a');\n    anchor.setAttribute('href', \"#\".concat(input.id));\n    anchor.innerHTML = \"<span>\".concat(input.label, \"</span>: \").concat(input.error);\n    anchor.addEventListener('click', e => {\n      e.preventDefault();\n      document.querySelector(e.target.hash).focus();\n    });\n    return anchor;\n  }\n\n}\n\nexport default ErrorSummary;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/forms.js",
      "contents": "import Input from \"./input\";\nimport State from \"./state\";\nimport ErrorSummary from \"./error-summary\";\n\nclass Forms {\n  /**\n  * Class constructor.\n  * @param {HTMLElement} [formElement] - The form element in the DOM\n  * @param {Object} [options={}] - An options object for configuring the form\n  */\n  constructor(formElement, options) {\n    if (formElement.nodeName !== 'FORM') {\n      throw new Error(\"[data-o-component=\\\"o-forms\\\"] must be set on a form element. It is currently set on a '\".concat(formElement.nodeName.toLowerCase(), \"'.\"));\n    }\n\n    this.form = formElement;\n    this.formInputs = Array.from(this.form.elements, element => new Input(element));\n    this.stateElements = [];\n    this.opts = Object.assign({\n      useBrowserValidation: false,\n      errorSummary: true\n    }, options || Forms.getDataAttributes(formElement));\n\n    if (!this.opts.useBrowserValidation) {\n      this.form.setAttribute('novalidate', true);\n      this.form.addEventListener('submit', this);\n    } else {\n      this.form.removeAttribute('novalidate');\n      this.submits = this.form.querySelectorAll('[type=submit]');\n      this.submits.forEach(submit => {\n        submit.addEventListener('click', this);\n        submit.addEventListener('keydown', this);\n      });\n    }\n  }\n  /**\n   * Get the data attributes from the formElement. If the form is being set up\n   * declaratively, this method is used to extract the data attributes from the DOM.\n   * @param {HTMLElement} formElement - The message element in the DOM\n   */\n\n\n  static getDataAttributes(formElement) {\n    if (!(formElement instanceof HTMLElement)) {\n      return {};\n    }\n\n    return Object.keys(formElement.dataset).reduce((options, key) => {\n      // Ignore data-o-component\n      if (key === 'oComponent') {\n        return options;\n      } // Build a concise key and get the option value\n\n\n      var shortKey = key.replace(/^oMessage(\\w)(\\w+)$/, (m, m1, m2) => m1.toLowerCase() + m2);\n      var value = formElement.dataset[key]; // Try parsing the value as JSON, otherwise just set it as a string\n\n      try {\n        options[shortKey] = JSON.parse(value.replace(/\\'/g, '\"'));\n      } catch (error) {\n        options[shortKey] = value;\n      }\n\n      return options;\n    }, {});\n  }\n  /**\n   * Event Handler\n   * @param {Object} event - The event emitted by element/window interactions\n   */\n\n\n  handleEvent(e) {\n    var RETURN_KEY = 13;\n\n    if (e.type === 'click' || e.type === 'keydown' && e.key === RETURN_KEY) {\n      if (this.form.checkValidity() === false) {\n        this.validateFormInputs();\n      }\n    }\n\n    if (e.type === 'submit') {\n      e.preventDefault();\n      var checkedElements = this.validateFormInputs();\n\n      if (checkedElements.some(input => input.valid === false)) {\n        if (this.opts.errorSummary) {\n          if (this.summary) {\n            this.summary = this.form.replaceChild(new ErrorSummary(checkedElements), this.summary);\n          } else {\n            this.summary = this.form.insertBefore(new ErrorSummary(checkedElements), this.form.firstElementChild);\n          }\n\n          this.summary.querySelector('a').focus();\n        }\n\n        return;\n      }\n\n      e.target.submit();\n    }\n  }\n  /**\n  * Form validation\n  * Validates every element in the form and creates input objects for the error summary\n  */\n\n\n  validateFormInputs() {\n    return this.formInputs.map(element => {\n      var valid = element.validate();\n      var input = element.input;\n      var field = input.closest('.o-forms-field');\n      var label = field ? field.querySelector('.o-forms-title__main').innerHTML : null;\n      var errorElement = field ? field.querySelector('.o-forms-input__error') : null;\n      var error = errorElement ? errorElement.innerHTML : input.validationMessage;\n      return {\n        id: input.id,\n        valid,\n        error: !valid ? error : null,\n        label\n      };\n    });\n  }\n  /**\n  * Input state\n  * @param {String} [name] - name of the input fields to add state to\n  * @param {String} [state] - type of state to apply — one of 'saving', 'saved', 'none'\n  */\n\n\n  setState(state, name) {\n    var iconOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var object = this.stateElements.find(item => item.name === name);\n\n    if (!object) {\n      object = {\n        name,\n        element: new State(this.form.elements[name], {\n          iconOnly\n        })\n      };\n      this.stateElements.push(object);\n    }\n\n    object.element.set(state);\n  }\n  /**\n  * Destroy form instance\n  */\n\n\n  destroy() {\n    if (!this.opts.useBrowserValidation) {\n      this.form.removeEventListener('submit', this);\n    } else {\n      this.submits.forEach(submit => {\n        submit.removeEventListener('click', this);\n        submit.removeEventListener('keydown', this);\n      });\n    }\n\n    this.form = null;\n    this.formInputs.forEach(input => input.destroy());\n    this.formInputs = null;\n    this.stateElements = null;\n    this.opts = null;\n  }\n  /**\n   * Initialise form component.\n   * @param {(HTMLElement|String)} rootElement - The root element to intialise a form in, or a CSS selector for the root element\n   * @param {Object} [options={}] - An options object for configuring the banners\n   */\n\n\n  static init(rootEl, opts) {\n    if (!rootEl) {\n      rootEl = document.body;\n    }\n\n    if (!(rootEl instanceof HTMLElement)) {\n      rootEl = document.querySelector(rootEl);\n    }\n\n    if (rootEl instanceof HTMLFormElement) {\n      return new Forms(rootEl, opts);\n    }\n\n    return Array.from(rootEl.querySelectorAll('[data-o-component=\"o-forms\"]'), rootEl => new Forms(rootEl, opts));\n  }\n\n}\n\nexport default Forms;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/input.js",
      "contents": "class Input {\n  /**\n  * Class constructor.\n  * @param {HTMLElement} [inputElement] - An input element in the DOM\n  */\n  constructor(element) {\n    this.input = element;\n    this.parent = element.closest('.o-forms-input');\n    this.input.addEventListener('blur', this);\n    this.input.addEventListener('input', this);\n    this.className = {\n      invalid: 'o-forms-input--invalid',\n      valid: 'o-forms-input--valid'\n    };\n  }\n  /**\n  * Event Handler\n  * @param {Object} event - The event emitted by element/window interactions\n  */\n\n\n  handleEvent(e) {\n    if (e.type === 'blur' || e.type === 'input') {\n      this.validate(e.target);\n    }\n  }\n  /**\n  * Input validation\n  * Conditions for input validation\n  */\n\n\n  validate() {\n    if (!this.parent) {\n      return;\n    }\n\n    if (!this.input.validity.valid) {\n      this.parent.classList.add(this.className.invalid);\n      return false;\n    } else if (this.input.validity.valid && this.parent.classList.contains(this.className.invalid)) {\n      this.parent.classList.replace(this.className.invalid, this.className.valid);\n    }\n\n    return true;\n  }\n\n  destroy() {\n    this.input.removeEventListener('blur', this);\n    this.input.removeEventListener('input', this);\n    this.input = null;\n  }\n\n}\n\nexport default Input;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/state.js",
      "contents": "class State {\n  /**\n  * Class constructor.\n  * @param {RadioNodeList} [inputs] - A NodeList of radio input elements\n  */\n  constructor(inputs, opts) {\n    var radioInputs = inputs instanceof RadioNodeList;\n\n    if (radioInputs) {\n      this.inputs = inputs;\n      this.parent = this.inputs[0].closest('.o-forms-input');\n    } else {\n      throw new Error('State can only be applied to `radio` type inputs.');\n    }\n\n    this._verify();\n\n    this.opts = Object.assign({\n      iconOnly: false\n    }, opts);\n    this.className = {\n      saving: 'o-forms-input--saving',\n      saved: 'o-forms-input--saved'\n    };\n  }\n  /**\n  * Create state element\n  * @access private\n  */\n\n\n  _generateStateEl() {\n    this.stateEl = document.createElement('span');\n    var classNames = this.opts.iconOnly ? ['o-forms-input__state', 'o-forms-input__state--icon-only'] : ['o-forms-input__state'];\n    this.stateEl.classList.add(...classNames);\n    this.parent.append(this.stateEl);\n  }\n  /**\n  * State setter\n  * @param {String} [state] type of state to display\n  */\n\n\n  set(state) {\n    if (!this.stateEl) {\n      this._generateStateEl();\n    }\n\n    if (state === 'saving') {\n      this._saving();\n    } else if (state === 'saved') {\n      this._saved();\n    } else if (state === 'none') {\n      this._remove();\n    } else {\n      throw new Error(\"\".concat(state, \" is not a recognised state, the options are 'saving', 'saved' or 'none'.\"));\n    }\n  }\n  /**\n  * Saving state\n  * @access private\n  */\n\n\n  _saving() {\n    this.parent.classList.add(this.className.saving);\n  }\n  /**\n  * Saved state\n  * @access private\n  */\n\n\n  _saved() {\n    this.parent.classList.replace(this.className.saving, this.className.saved);\n  }\n  /**\n  * Remove state\n  * @access private\n  */\n\n\n  _remove() {\n    this.parent.classList.remove(this.className.saved);\n    this.parent.removeChild(this.stateEl);\n    this.stateEl = null;\n  }\n  /**\n  * Verify input parent\n  * @access private\n  */\n\n\n  _verify() {\n    if (!this.parent.classList.contains('o-forms-input--radio-box')) {\n      throw new Error('State can only be set on radio inputs with a box style (o-forms-input--radio-box).');\n    } else if (this.parent.classList.contains('.o-forms--input-invalid')) {\n      throw new Error('State cannot be set on an invalid input field.');\n    }\n  }\n\n}\n\nexport default State;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_checkbox.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $right Whether to display checkbox to the right of text\n/// @output Styling for text inputs\n@mixin _oFormsCheckbox(\n\t$disabled: null,\n\t$right: null\n) {\n\t.o-forms-input--checkbox {\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:indeterminate + .o-forms-input__label:after {\n\t\t\t\t@include oIconsGetIcon('minus', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\n\t\t@if $right {\n\t\t\t.o-forms-input__right {\n\t\t\t\tdisplay: inline-block;\n\t\n\t\t\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__label {\n\t\t\t\t\tpadding-left: 0;\n\t\t\t\t\tpadding-right: $_o-forms-spacing-controls;\n\t\n\t\t\t\t\t&:before,\n\t\t\t\t\t&:after {\n\t\t\t\t\t\t// right: 0;\n\t\t\t\t\t\tleft: calc(100% - #{$_o-forms-spacing-six});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 0 $_o-forms-spacing-controls;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t\tbackground-color: _oFormsGet('default-background');\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 0;\n\t\t\t\ttransition: opacity 0.1s ease;\n\t\t\t}\n\n\t\t\t// this handles spacing between two input__label spans for the same input element, \n\t\t\t// which is necessary in the case of 'additional content'\n\t\t\t& + .o-forms-input__label {\n\t\t\t\tpadding-top: $_o-forms-spacing-three; \n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_date.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for date inputs\n@mixin _oFormsDate (\n\t$disabled: null,\n) {\n\t.o-forms-input--date {\n\n\t\tlabel {\n\t\t\tdisplay: flex;\n\t\t\tfloat: left;\n\t\t\tflex-direction: column-reverse;\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\tinput[type=text] { \n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tdisplay: block;\n\t\t\tmargin: $_o-forms-spacing-one $_o-forms-spacing-three 0 0;\n\t\t\t\n\t\t\t&[pattern$='{2}'],\n\t\t\t&[pattern$='[012]'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(2.2ch + 1em);\n\t\t\t}\n\t\t\t\n\t\t\t&[pattern$='{4}'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(4.2ch + 1em);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tpadding-top: $_o-forms-spacing-one;\n\t\t\tclear: both;\n\t\t}\n\t}\n}\n// sass-lint:enable no-qualifying-elements\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_pseudo-radio-link.scss",
      "contents": "/// @access private\n/// @output Styling for anchor 'controls'\n\n@mixin _oFormsPseudoRadioLink {\n\t.o-forms-input--pseudo-radio-link {\n\t\t@include _oFormsControlsBoxContainer();\n\t\t@include oTypographyMargin($top: 0);\n\n\t\t@include _oFormsPseudoRadioLinkStyles();\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// Outpus styling for box-styled anchors\n@mixin _oFormsPseudoRadioLinkStyles($theme: null) {\n\ta {\n\t\t@include _oFormsControlsBoxBase();\n\t\tbox-sizing: border-box;\n\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\tpadding: ($_o-forms-spacing-one + $_o-forms-spacing-half) $_o-forms-spacing-two;\n\t\tposition: relative;\n\t\ttext-decoration: none;\n\n\t\t&:hover {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&.o-forms-input__link--current {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:first-of-type) {\n\t\t\tborder-left: $_o-forms-border;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_radio-box.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioBox(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-box {\n\t\t@include _oFormsRadioBoxInputStyles();\n\n\t\t.o-forms-input--radio-box__container {\n\t\t\t@include _oFormsControlsBoxContainer();\n\t\t}\n\n\t\t&.o-forms-input--invalid .o-forms-input--radio-box__container {\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t}\n\n\t\tlabel {\n\t\t\t@include _oFormsControlsBoxBase();\n\n\t\t\t&:not(:first-of-type) {\n\t\t\t\tborder-left: $_o-forms-border;\n\t\t\t}\n\n\t\t\t.o-forms-input__label {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmax-height: $_o-forms-spacing-controls;\n\t\t\t\tpadding: $_o-forms-spacing-one;\n\t\t\t\ttransition: 0.3s background-color, 0.15s color ease-out;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: absolute;\n\t\t\topacity: 0;\n\n\t\t\t@if $disabled {\n\t\t\t\t&:disabled + .o-forms-input__label {\n\t\t\t\t\tcursor: default;\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridRespondTo(S) {\n\t\t\t&.o-forms-input--inline .o-forms-input__state {\n\t\t\t\tposition: relative;\n\t\t\t\tbottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__state {\n\t\t\tposition: absolute;\n\t\t\tbottom: -($_o-forms-spacing-five + $_o-forms-spacing-half);\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tbottom: -$_o-forms-spacing-four;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// @output styling for box-styled radio inputs\n@mixin _oFormsRadioBoxInputStyles($theme: null) {\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t& + .o-forms-input__label {\n\t\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:checked):not(:disabled):hover + .o-forms-input__label {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&:checked + .o-forms-input__label {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\n\t\t\t&.o-forms-input__label--negative {\n\t\t\t\tbackground-color: _oFormsGet('controls-negative-checked-background', $from: $theme);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_radio-round.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioRound(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-round {\n\t\t.o-forms-input__label {\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-controls;\n\t\t\tdisplay: inline-block;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\ttransition: opacity 0.1s ease-in;\n\t\t\t\tbackground-color: transparent;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oColorsFor(page, background);\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\theight: $_o-forms-spacing-three;\n\t\t\t\twidth: $_o-forms-spacing-three;\n\t\t\t\tmargin: $_o-forms-spacing-three / 2;\n\t\t\t\topacity: 0;\n\t\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t\t@media screen and (-ms-high-contrast: active) {\n\t\t\t\t\tbackground-color: windowText;\n\t\t\t\t}\n\t\t\t\t// sass-lint:enable no-vendor-prefixes\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:checked\t+ .o-forms-input__label:before {\n\t\t\t\tborder-color: _oFormsGet('controls-base');\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\tborder-color: $o-normalise-focus-color;\n\t\t\t\tbox-shadow: 0 0 0 $_o-forms-spacing-half $o-normalise-focus-color;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t}\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_select.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @output Styling for text areas\n@mixin _oFormsSelect(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null\n) {\n\t.o-forms-input--select {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall('select');\n\t\t}\n\t\t\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix('select');\n\t\t}\n\n\t\tselect {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('field-standard-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\tappearance: none;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: auto $_o-forms-spacing-six;\n\t\t\tborder-radius: 0;\n\t\t\tbackground-clip: padding-box;\n\t\t\tcolor: _oFormsGet('default-text');\n\t\t\tcursor: pointer;\n\t\t\toutline: none;\n\n\t\t\t// For iOS 6 that doesn't support 4-value background-position\n\t\t\t// Handles background sizing and positioning issues with IE10+\n\t\t\t// sass-lint:disable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\t\t\tbackground-position: right center;\n\t\t\tbackground-position: right $_o-forms-spacing-two center;\n\t\t\t-ms-background-position-x: right -75%;\n\t\t\t-ms-background-position-y: center;\n\t\t\t// sass-lint:enable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\n\t\t\t// Hide stock browser arrow in IE 10+\n\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t&::-ms-expand {\n\t\t\t\tcolor: oColorsGetPaletteColor('white');\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t// sass-lint:enable no-vendor-prefixes\n\n\t\t\t&:disabled {\n\t\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('disabled-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\t}\n\n\t\t\t&[multiple] {\n\t\t\t\tbackground-image: none;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_text-area.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for text areas\n@mixin _oFormsTextArea(\n\t$disabled: null\n) {\n\t.o-forms-input--textarea {\n\t\ttextarea {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tresize: vertical;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_text-input.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @param {Boolean} $small Whether to output small styles\n/// @param {String} $input-type Which text-like input to style (password, email, text)\n/// @output Styling for text inputs\n@mixin _oFormsTextInput(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null,\n\t$input-type: 'text'\n) {\n\t$element: 'input[type=#{$input-type}]';\n\n\t.o-forms-input--#{$input-type} {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall($element);\n\t\t}\n\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix($element);\n\t\t}\n\n\t\t#{$element} {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_toggle.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output styles for toggle based on a checkbox input\n@mixin _oFormsToggle($disabled: null) {\n\t.o-forms-input--toggle {\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-eight;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tcontent: '';\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle');\n\t\t\t\tborder-radius: $_o-forms-spacing-ten;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-ten;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: oColorsGetColorFor(page, background);\n\t\t\t\tborder: $_o-forms-spacing-half solid _oFormsGet('default-text');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-six;\n\t\t\t\ttransition: left 75ms ease-in-out;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: relative;\n\t\t\tleft: $_o-forms-spacing-three;\n\n\t\t\t&:checked + .o-forms-input__label {\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t\t&:after {\n\t\t\t\t\tleft: $_o-forms-spacing-four;\n\t\t\t\t\tborder-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:invalid:not(:disabled) + .o-forms-input__label:after {\n\t\t\t\tborder-color: inherit;\n\t\t\t}\n\t\t}\n\n\t\t@if $disabled {\n\t\t\tinput[type=checkbox]:disabled + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\tcolor: _oFormsGet('disabled-text');\n\n\t\t\t\t&:after {\n\t\t\t\t\tborder-color: _oFormsGet('toggle-disabled');\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-knob-disabled');\n\t\t\t\t}\n\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/main.scss",
      "contents": "// Styles shared between all input types\n@import './shared/brand';\n@import './shared/variables';\n@import './shared/base'; \n@import './shared/control-inputs'; // grouped inputs (e.g. radio/checkboxes) \n@import './shared/error-summary';\n@import './shared/inline';\n@import './shared/single-inputs'; // individual inputs (e.g. text, select)\n@import './shared/validity';\n\n// Input-type specific styles\n@import './checkbox';\n@import './date';\n@import './pseudo-radio-link';\n@import './radio-box';\n@import './radio-round';\n@import './select';\n@import './text-area';\n@import './text-input';\n@import './toggle';\n\n// Modifiers for certain input types\n@import './modifiers/custom'; // for radio box & anchors\n@import './modifiers/inverse'; // for toggle\n@import './modifiers/state'; // for radio box\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_custom.scss",
      "contents": "/// Transforms a custom theme map into brand variables. See `_brand.scss`.\n/// @access private\n/// @param {map|null} $theme - A custom theme map.\n/// @return {map} Brand variables.\n@function _oFormsThemeToBrandVariants($theme) {\n\t@if $theme {\n\t\t\t@if not index(map-keys($theme), 'controls-base') {\n\t\t\t\t@error \"The custom theme for box-styled controls is missing a 'controls-base' key. (see @mixin _oFormsAnchorBox)\";\n\t\t\t}\n\t\t// Add default value for checked background if not specified.\n\t\t@if not map-get($theme, 'negative-checked-background') {\n\t\t\t$theme: map-merge($theme, (\n\t\t\t\t'negative-checked-background': map-get($theme, 'checked-background')\n\t\t\t));\n\t\t}\n\n\t\t$theme: (\n\t\t\tcontrols-base: oColorsGetPaletteColor(map-get($theme, 'controls-base')),\n\t\t\tcontrols-checked-base: oColorsGetPaletteColor(map-get($theme, 'controls-checked-base')),\n\t\t\tcontrols-negative-checked-background: oColorsGetPaletteColor(map-get($theme, 'controls-negative-checked-background'))\n\t\t);\n\t}\n\n\t@return $theme;\n}\n\n/// @access private\n/// Outputs base styling for custom icons\n@mixin _oFormsCustomIconBase {\n\t.o-forms-input__label {\n\t\tmin-width: unset;\n\t}\n\n\ta.o-forms-input__link--current, // sass-lint:disable-line no-qualifying-elements\n\tinput[type=radio]:checked + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n/// @access public\n/// @param {String} $icon Name of the icon to request from the image set\n/// @param {String} $input Type of input to set icons on ('anchor' or radio)\n/// @param {Map|null} $theme Custom theme map\n@mixin _oFormsCustomIcon($icon, $input, $theme: null) {\n\t@include _oFormsCustomIconBase();\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\t$element: '';\n\n\t@if $input == 'radio' {\n\t\t$element: 'label .o-forms-input__label.o-forms-input__label__#{$icon}-icon';\n\t} @else {\n\t\t$element: 'a.o-forms-input__link--#{$icon}-icon';\n\t} \n\t\n\t#{$element} {\n\t\tpadding-left: $_o-forms-spacing-six;\n\t\tpadding-right: $_o-forms-spacing-two;\n\t\ttext-align: left;\n\n\t\t&:after,\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position-y: 0.175em;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t}\n\n\t\t&:before {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t}\n\n\t\t&:after {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-checked-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n\n/// @access public\n/// @param {String} $input Type of input to customise, one of 'anchor' or 'radio'\n/// @param {List} $icons A list of icons to render\n/// @param {Map|null} $theme Custom theme map\n@mixin oFormsAddCustom(\n\t$input: null,\n\t$class: null, \n\t$icons: null,\n\t$theme: null\n) {\n\n\t@if not $input {\n\t\t@error('Please specify whether you would like to customise radio inputs or anchors');\n\t}\n\n\t@if not $class {\n\t\t@error('Please specify a name for the custom modifier (e.g. o-forms-input--{custom-modifier}).');\n\t}\n\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\t.o-forms-input--#{$class} {\n\t\t@if $input == 'pseudo-radio-link' {\n\t\t\t@include _oFormsPseudoRadioLinkStyles($theme);\n\t\t} @else if $input == 'radio' {\n\t\t\t@include _oFormsRadioBoxInputStyles($theme);\n\t\t} @else {\n\t\t\t@error('#{$input} inputs do not accept customisation. If you need to customise this type of input, please contact the Origami team.');\n\t\t};\n\t}\n\n\t@if $icons {\n\t\t@each $icon in $icons {\n\t\t\t@include _oFormsCustomIcon($icon, $input, $theme);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_inverse.scss",
      "contents": "/// @access private\n/// @output styles for inverse toggle based on a checkbox input\n@mixin _oFormsInverse {\n\t.o-forms-field--inverse {\n\t\tcolor: _oFormsGet('toggle-inverse');\n\n\t\t.o-forms-title {\n\t\t\t.o-forms-title__main:after,\n\t\t\t.o-forms-title__prompt {\n\t\t\t\tcolor: rgba(_oFormsGet('toggle-inverse'), 0.7);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label:before {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\t.o-forms-input__label:after {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse-knob');\n\t\t\tborder-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\tinput[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements\n\t\t\t+ .o-forms-input__label:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/modifiers/_state.scss",
      "contents": "/// @access private\n/// @output styles for state animation for the box-styled radio inputs\n@mixin _oFormsState() {\n\t.o-forms-input__state {\n\t\t// the loading spinner and tick icons for state are mismatched in terms of size/padding, \n\t\t// the custom line-height aligns them as closely as possible (with minimal style changes)\n\t\t@include oTypographySize($scale: -1, $line-height: 1.75);\n\t\tcolor: inherit;\n\t\tdisplay: block;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-forms-input__state--icon-only:after {\n\t\t@include oNormaliseVisuallyHidden;\n\t}\n\n\t.o-forms-input--saving {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tpadding: 0;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saving';\n\t\t\t}\n\t\t\t\n\t\t\t&:before {\n\t\t\t\t@include oLoadingContent($opts: ('theme': 'dark', 'size': 'mini'));\n\t\t\t\tmargin: 0 $_o-forms-spacing-two 0 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-forms-input--saved {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tmargin-left: -$_o-forms-spacing-one;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saved';\n\t\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('valid-base'), $_o-forms-spacing-seven);\n\t\t\t\tvertical-align: middle;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t@include oGridRespondTo(S) {\n\t\t.o-forms-input--inline {\n\t\t\t&.o-forms-input--saving,\n\t\t\t&.o-forms-input--saved {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t\talign-items: center;\n\n\t\t\t\tlabel {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__state--icon-only {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.o-forms-input--saving .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three;\n\t\t\t}\n\n\t\t\t&.o-forms-input--saved .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three 0 $_o-forms-spacing-two;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_base.scss",
      "contents": "/// @access private\n/// @output Shared base state styles for all form elements.\n@mixin _oFormsBase() {\n\t@include _oFormsValidityStates();\n\n\t.o-forms-field,\n\t.o-forms-title,\n\t.o-forms-input {\n\t\t@include oTypographySans(0);\n\t}\n\t\n\t.o-forms-field {\t\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-bottom: $_o-forms-spacing-six;\n\t\tposition: relative;\n\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 0 $_o-forms-spacing-three;\n\t\t\tposition: relative;\n\t\t}\n\n\t\tlabel:last-of-type {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n\t\n\t.o-forms-field--optional .o-forms-title__main:after {\n\t\t@include oTypographySize($scale: -1);\n\t\tcontent: '(optional)';\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tfont-weight: 400;\n\t\tmargin-left: $_o-forms-spacing-one;\n\t}\n\n\t.o-forms-title__main {\n\t\t@include oTypographyBold('sans');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-title__prompt {\n\t\t@include oTypographySize($scale: -1);\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-input {\n\t\tmargin-top: $_o-forms-spacing-three;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsGet($variables, $from: null) {\n\t@return oBrandGet($component: 'o-forms', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsSupports($variant) {\n\t@return oBrandSupportsVariant($component: 'o-forms', $variant: $variant);\n}\n\n$_o-forms-shared-brand-config: (\n\tdefault-text: oColorsGetPaletteColor('black-80'),\n\tdefault-prompt-text: oColorsGetPaletteColor('black-60'),\n\tdefault-border: oColorsGetPaletteColor('black-50'),\n\tdefault-background: oColorsGetPaletteColor('white'),\n\tdisabled-text: oColorsGetPaletteColor('black-60'),\n\tdisabled-base: oColorsGetPaletteColor('black-10'),\n\tcontrols-base: oColorsGetPaletteColor('teal'),\n\tcontrols-checked-base: oColorsGetPaletteColor('white'),\n\tcontrols-negative-checked-background: oColorsGetPaletteColor('teal-30'),\n\tinvalid-base: oColorsGetPaletteColor('crimson'),\n\ttoggle: oColorsGetPaletteColor('black'),\n\ttoggle-knob: oColorsMix('black', 'white', 10),\n\ttoggle-selected: oColorsGetPaletteColor('teal'),\n\ttoggle-knob-selected: oColorsGetPaletteColor('white'),\n\ttoggle-disabled: oColorsGetPaletteColor('black-20'),\n\ttoggle-knob-disabled: oColorsGetPaletteColor('black-40'),\n\ttoggle-inverse: oColorsGetPaletteColor('white'),\n\ttoggle-inverse-knob: oColorsGetPaletteColor('slate'),\n\ttoggle-inverse-selected: oColorsGetPaletteColor('teal-100'),\n\tvalid-base: oColorsMix('jade', 'black', 80)\n);\n\n@include oBrandDefine('o-forms', 'master', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'internal', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'whitelabel', (\n\t'variables': map-merge($_o-forms-shared-brand-config, (\n\t\tcontrols-base: oColorsGetPaletteColor('black'),\n\t\tcontrols-negative-checked-background: oColorsGetPaletteColor('black'),\n\t\ttoggle-inverse-selected: oColorsGetPaletteColor('white'),\n\t\ttoggle-inverse-knob: oColorsGetPaletteColor('black'),\n\t)),\n\t'supports-variants': ()\n));\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_control-inputs.scss",
      "contents": "/// @access private\n/// @output Shared base styles for checkboxes, toggles, round- and box-style radio buttons.\n@mixin _oFormsControlsBase($disabled: null) {\n\tposition: absolute;\n\tpadding: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\n\t&:checked + .o-forms-input__label:after {\n\t\topacity: 1;\n\t}\n\n\t@if $disabled {\n\t\t&:disabled {\n\t\t\topacity: 0;\n\n\t\t\t+ .o-forms-input__label {\n\t\t\t\topacity: 0.4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared pseudo element styles for checkboxes, toggle, round- and box-style radio buttons.\n@mixin _oFormsControlsPseudoElements {\n\tcontent: '';\n\tcursor: pointer;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\tbox-sizing: border-box;\n}\n\n/// @access private\n/// @output Shared styles for box-style radio buttons and anchor controls\n@mixin _oFormsControlsBoxBase {\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tfloat: left;\n\tmargin: 0;\n\tmin-height: $_o-forms-spacing-seven;\n\tmin-width: oTypographySpacingSize(15);\n}\n\n/// @access private\n/// @output Shared styles for box-style containers\n@mixin _oFormsControlsBoxContainer {\n\t@include oTypographySize($scale: -1, $line-height: unset);\n\t@include oTypographyBold('sans');\n\tbox-sizing: border-box;\n\tborder: $_o-forms-border;\n\tdisplay: inline-block;\n\tpadding: $_o-forms-spacing-half;\n\ttext-align: center;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_error-summary.scss",
      "contents": "/// @access private\n/// @output styles for error summary\n@mixin _oFormsErrorSummary() {  \n\t.o-forms__error-summary {\n\t\t@include oTypographySans($scale: 0);\n\t\tbackground-color: oColorsMix('crimson', $percentage: 10);\n\t\tmargin-bottom: $_o-forms-spacing-four;\n\t\tpadding: $_o-forms-spacing-three;\n\n\t\th4 {\n\t\t\t@include oTypographyBold('sans');\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tmargin: 0 0 $_o-forms-spacing-one;\n\t\t}\n\n\t\tul {\n\t\t\tlist-style-type: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\n\t\t\tspan {\n\t\t\t\t@include oTypographyBold('sans');\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tdisplay: inline-block;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-top: $_o-forms-spacing-one;\n\t\t\ttext-decoration: none;\n\t\t\tborder-bottom: 1px solid _oFormsGet('invalid-base');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_inline.scss",
      "contents": "/// @access private\n/// @output styles for inlining labels and inputs\n@mixin _oFormsInline() {\n\t/* inline field titles and inputs\n\t\t[title] [input]\n\t\tor\n\t\t[title] [input]\n\t\t\t\t\t\t[input]\n\t*/\n\t@include oGridRespondTo(S) {\n\t\t&.o-forms-field--inline {\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-between;\n\t\t\n\t\t\t.o-forms-title {\n\t\t\t\tflex: 0 1 50%;\n\t\t\t\tmargin-right: $_o-forms-spacing-three;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\t&.o-forms-title--shrink {\n\t\t\t\t\tflex-basis: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.o-forms-title--vertical-center {\n\t\t\t\t\talign-self: center;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t.o-forms-input {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tflex: 1 0 50%;\n\t\t\t\talign-items: flex-start;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* inline inputs\n\t\t\t[title] \n\t\t\t[input] [input]\n\t\t\tor (combined with field inline)\n\t\t\t[title] [input] [input]\n\t\t*/\n\t\t.o-forms-input.o-forms-input--inline {\n\t\t\tdisplay: flex;\n\t\t\tflex-flow: row wrap;\n\t\t\t\t\n\t\t\tlabel {\n\t\t\t\tmargin: 0 $_o-forms-spacing-four $_o-forms-spacing-three 0;\n\t\t\t\tmax-width: 75%;\n\t\t\t}\n\n\t\t\t&.o-forms-input--date label,\n\t\t\t&.o-forms-input--radio-box label {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_single-inputs.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output base styles for select, textarea and text input\n@mixin _oFormsInputBase($disabled) {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tbackground-color: _oFormsGet('default-background');\n\tborder: $_o-forms-border;\n\tbox-sizing: border-box;\n\tmin-height: $_o-forms-spacing-ten;\n\tpadding: $_o-forms-spacing-two;\n\twidth: 100%;\n\n\t@if $disabled {\n\t\t@include _oFormsInputDisabled();\n\t}\n}\n\n/// @access private\n/// @output Shared disabled state styles for inputs.\n@mixin _oFormsInputDisabled {\n\t&:disabled {\n\t\tcursor: default;\n\t\tcolor: _oFormsGet('disabled-text');\n\t\tbackground-color: _oFormsGet('disabled-base');\n\t\tborder-color: _oFormsGet('disabled-base');\n\t}\n}\n\n/// @access private\n/// @output Shared small styles for select and text input.\n@mixin _oFormsInputSmall($element) {\n\t&.o-forms-input--small {\n\t\t#{$element} {\n\t\t\t@include oTypographySize($scale: -1, $line-height: 1.65);\n\t\t\tmin-height: $_o-forms-spacing-seven;\n\t\t\tpadding: 0 $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared suffix styles for select and text input.\n@mixin _oFormsInputSuffix($element) {\n\t&.o-forms-input--suffix {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t\t#{$element} {\n\t\t\tflex: 1;\n\t\t\tmargin-right: $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_validity.scss",
      "contents": "/// @access private\n/// @output styles for valid and invalid inputs\n@mixin _oFormsValidityStates() {\n\t.o-forms-input--valid {\n\t\t*:valid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\tborder-color: _oFormsGet('valid-base');\n\t\t}\n\t}\n\n\t*:invalid {\n\t\tbox-shadow: none;\n\t}\n\t\n\t.o-forms-input__error {\n\t\tdisplay: none;\n\t}\n\n\t.o-forms-input--invalid {\n\t\t*:invalid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\n\t\t\t+ .o-forms-input__label:before,\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\t@include oTypographySize($scale: -1);\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tbottom: -$_o-forms-spacing-five;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/shared/_variables.scss",
      "contents": "$o-forms-is-silent: true !default;\n\n$_o-forms-border: 1px solid _oFormsGet('default-border');\n\n$_o-forms-spacing-half: oTypographySpacingSize(1) / 2; //2px\n$_o-forms-spacing-one: oTypographySpacingSize(1); // 4px\n$_o-forms-spacing-two: oTypographySpacingSize(2); // 8px\n$_o-forms-spacing-three: oTypographySpacingSize(3); // 12px\n$_o-forms-spacing-four: oTypographySpacingSize(4); // 16px\n$_o-forms-spacing-five: oTypographySpacingSize(5); // 20px\n$_o-forms-spacing-six: oTypographySpacingSize(6); // 24px && checkbox/radio widths\n$_o-forms-spacing-seven: oTypographySpacingSize(7); // 28px\n$_o-forms-spacing-eight: oTypographySpacingSize(8); // 32px\n$_o-forms-spacing-nine: oTypographySpacingSize(9); // 36px\n$_o-forms-spacing-ten: oTypographySpacingSize(10); // 40px\n\n$_o-forms-spacing-controls: $_o-forms-spacing-nine + $_o-forms-spacing-half;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.js",
      "contents": "import oForms from './src/js/forms';\n\nconst constructAll = function() {\n\toForms.init();\n\tdocument.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\n\nexport default oForms;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "@import 'o-brand/main';\n@import 'o-grid/main';\n@import 'o-icons/main';\n@import 'o-loading/main';\n@import 'o-normalise/main';\n@import 'o-typography/main';\n\n@import 'src/scss/main';\n\n@mixin oForms($opts: (\n\t'elements': (\n\t\t'checkbox', \n\t\t'date',\n\t\t'password',\n\t\t'pseudo-radio-link', \n\t\t'radio-round',\n\t\t'radio-box',\n\t\t'select',\n\t\t'textarea',\n\t\t'text',\n\t\t'toggle'\n\t),\n\t'features': (\n\t\t'disabled',\n\t\t'inline',\n\t\t'inverse',\n\t\t'error-summary',\n\t\t'right',\n\t\t'small',\n\t\t'state',\n\t\t'suffix'\n\t)\n)) {\n\t$elements: map-get($opts, 'elements');\n\t$features: map-get($opts, 'features');\n\n\t$disabled: index($features, 'disabled');\n\t$inline: index($features, 'inline');\n\t$inverse: index($features, 'inverse');\n\t$error-summary: index($features, 'error-summary');\n\t$right: index($features, 'right');\n\t$small: index($features, 'small');\n\t$state: index($features, 'state');\n\t$suffix: index($features, 'suffix');\n\n\t@include _oFormsBase();\n\n\t@if index($elements, 'pseudo-radio-link') {\n\t\t@include _oFormsPseudoRadioLink();\n\t}\n\n\t@if index($elements, 'checkbox') {\n\t\t@include _oFormsCheckbox(\n\t\t\t$disabled,\n\t\t\t$right\n\t\t);\n\t}\n\n\t@if index($elements, 'date') {\n\t\t@include _oFormsDate(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'password') {\n\t\t@include _oFormsTextInput(\n\t\t\t$disabled,\n\t\t\t$input-type: 'password'\n\t\t);\n\t}\n\n\t@if index($elements, 'radio-round') {\n\t\t@include _oFormsRadioRound(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'radio-box') {\n\t\t@include _oFormsRadioBox(\n\t\t\t$disabled\n\t\t);\n\t}\n\n\t@if index($elements, 'select') {\n\t\t@include _oFormsSelect(\n\t\t\t$disabled,\n\t\t\t$small,\n\t\t\t$suffix\n\t\t);\n\t}\n\n\t@if index($elements, 'textarea') {\n\t\t@include _oFormsTextArea($disabled);\n\t}\n\n\t@if index($elements, 'text') {\n\t\t@include _oFormsTextInput(\n\t\t\t$disabled,\n\t\t\t$small,\n\t\t\t$suffix,\n\t\t\t$input-type: 'text'\n\t\t);\n\t}\n\n\t@if index($elements, 'toggle') {\n\t\t@include _oFormsToggle($disabled);\n\t}\n\n\t@if $inline {\n\t\t@include _oFormsInline();\n\t}\n\n\t@if $inverse {\n\t\t@include _oFormsInverse();\n\t}\n\n\t@if $error-summary {\n\t\t@include _oFormsErrorSummary();\n\t}\n\n\t@if $state {\n\t\t@include _oFormsState();\n\t}\n}\n\n@if $o-forms-is-silent == false {\n\t@include oForms();\n\n\t$o-forms-is-silent: true !global;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"This component provides responsive styling for form fields and inputs. It provides validation and error handling for forms, as well.\",\n\t\"keywords\": [ \"form\", \"input\", \"field\", \"fieldset\", \"submit\" ],\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"components\",\n\t\"origamiVersion\": 1,\n\t\"brands\" : [\n\t\t\"master\",\n\t\t\"internal\",\n\t\t\"whitelabel\"\n\t],\n\t\"support\": \"https://github.com/Financial-Times/o-forms/issues\",\n\t\"supportContact\": {\n\t\t\"email\": \"origami.support@ft.com\",\n\t\t\"slack\": \"financialtimes/ft-origami\"\n\t},\n\t\"supportStatus\": \"active\",\n\t\"browserFeatures\": {\n\t\t\"required\": [\n\t\t\t\"DOMTokenList\",\n\t\t\t\"Element.prototype.closest\",\n\t\t\t\"Array.prototype.includes\"\n\t\t]\n\t},\n\t\"demosDefaults\": {\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"documentClasses\": \"demo\",\n\t\t\"dependencies\": [\n\t\t\t\"o-fonts@^3\",\n\t\t\t\"o-buttons@^5\",\n\t\t\t\"o-normalise@1\"\n\t\t]\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"name\": \"pseudo-radio-links\",\n\t\t\t\"title\": \"Pseudo Radio Links\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Anchor elements that imitate box-style radio inputs\",\n\t\t\t\"data\": \"/demos/src/data/pseudo-radio-links.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"checkboxes\",\n\t\t\t\"title\": \"Checkboxes\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Checkbox inputs with a default squared style\",\n\t\t\t\"data\": \"/demos/src/data/checkboxes.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"custom\",\n\t\t\t\"title\": \"Customised pseudo-radio-links/radio-boxes\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Custom theme example for box-styled anchors and radio inputs\",\n\t\t\t\"data\": \"/demos/src/data/custom.json\",\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"date\",\n\t\t\t\"title\": \"Date input\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Date input with text fields instead of a date picker\",\n\t\t\t\"data\": \"/demos/src/data/date.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"radio-box\",\n\t\t\t\"title\": \"Box-styled radio inputs\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Radio button inputs with a box-like style\",\n\t\t\t\"data\": \"/demos/src/data/radio-box.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"radio-round\",\n\t\t\t\"title\": \"Round-styled radio inputs\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Radio button inputs with a default circular style\",\n\t\t\t\"data\": \"/demos/src/data/radio-round.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"toggle\",\n\t\t\t\"title\": \"Toggle\",\n\t\t\t\"template\": \"/demos/src/multiple-input-field.mustache\",\n\t\t\t\"description\": \"Checkbox inputs with a toggle style\",\n\t\t\t\"data\": \"/demos/src/data/toggle.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"text-input\",\n\t\t\t\"title\": \"Text input\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Regular text input\",\n\t\t\t\"data\": \"/demos/src/data/text-input.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"text-area\",\n\t\t\t\"title\": \"Text Area\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Regular textarea input\",\n\t\t\t\"data\": \"/demos/src/data/text-area.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"title\": \"Select boxes\",\n\t\t\t\"template\": \"/demos/src/single-input-field.mustache\",\n\t\t\t\"description\": \"Dropdown/Selection inputs\",\n\t\t\t\"data\": \"/demos/src/data/select.json\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"title\": \"Accessibility testing\",\n\t\t\t\"template\": \"/demos/src/pa11y.mustache\",\n\t\t\t\"description\": \"pa11y\",\n\t\t\t\"data\": \"/demos/src/data/pa11y.json\",\n\t\t\t\"hidden\": true\n\t\t},\n\t\t{\n\t\t\t\"name\": \"interactive\",\n\t\t\t\"title\": \"Interactive form demo\",\n\t\t\t\"template\": \"/demos/src/interactive.mustache\",\n\t\t\t\"description\": \"Illustrates validation and state behaviour with form JS\",\n\t\t\t\"js\": \"demos/src/interactive.js\",\n\t\t\t\"hidden\": true\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-forms\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {\n\t\t\"@financial-times/o-brand\": \"^3.2.3\",\n\t\t\"@financial-times/o-colors\": \"^4.0.1\",\n\t\t\"@financial-times/o-grid\": \"^4.0.0\",\n\t\t\"@financial-times/o-icons\": \"^5.7.0\",\n\t\t\"@financial-times/o-loading\": \"^3.0.0\",\n\t\t\"@financial-times/o-normalise\": \"^1.6.2\",\n\t\t\"@financial-times/o-typography\": \"^5.11.3\"\n\t},\n\t\"component\": \"o-forms\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/error-summary.js",
      "contents": "class ErrorSummary {\n\t/**\n\t* Class constructor.\n\t* @param {Array} [elements] - An array of objects, where each object describes an invalid input element\n\t* @example\n\t* const example = [\n\t*\t{\n\t*\t\tid: 'text-input',\n\t*\t\tvalid: false,\n\t*\t\terror: 'Please fill out this field'\n\t*\t\tlabel: 'Input Label'\n\t*\t}\n\t*\t...\n\t*\t]\n\t*\tnew ErrorSummary(example)\n\t*/\n\tconstructor(elements) {\n\t\tthis.elements = elements;\n\t\tthis.invalidInputs = [];\n\n\t\treturn this.createSummary();\n\t}\n\n\t/**\n\t * Generate Node to hold list of invalid inputs\n\t */\n\tcreateSummary() {\n\t\tlet invalidInputs = [];\n\t\tthis.elements.forEach(element => {\n\t\t\tif (element.valid) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tinvalidInputs.push(element);\n\t\t});\n\n\t\tlet div = document.createElement('div');\n\t\tdiv.classList.add('o-forms__error-summary');\n\t\tdiv.setAttribute('aria-labelledby', 'error-summary');\n\t\tdiv.setAttribute('role', 'alert');\n\t\tdiv.innerHTML = '<h4 id=\"error-summary\">There is a problem</h4>';\n\n\t\tdiv.appendChild(ErrorSummary.createList(invalidInputs));\n\t\treturn div;\n\t}\n\n\t/**\n\t * Generate list of anchors\n\t */\n\tstatic createList(inputs) {\n\t\tlet list = document.createElement('ul');\n\t\tinputs.forEach(input => {\n\t\t\tif (input.id && !input.valid) {\n\t\t\t\tlet listItem = document.createElement('li');\n\t\t\t\tlet anchor = ErrorSummary.createAnchor(input);\n\t\t\t\tlistItem.appendChild(anchor);\n\t\t\t\tlist.appendChild(listItem);\n\t\t\t}\n\t\t});\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Generate anchor element to point at invalid input\n\t * @param {Object} [input] - The input object to construct an anchor for\n\t */\n\tstatic createAnchor(input) {\n\t\tlet anchor = document.createElement('a');\n\t\tanchor.setAttribute('href', `#${input.id}`);\n\t\tanchor.innerHTML = `<span>${input.label}</span>: ${input.error}`;\n\t\tanchor.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\t\t\tdocument.querySelector(e.target.hash).focus();\n\t\t});\n\t\treturn anchor;\n\t}\n}\n\nexport default ErrorSummary;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/forms.js",
      "contents": "import Input from './input';\nimport State from './state';\nimport ErrorSummary from './error-summary';\n\nclass Forms {\n\t/**\n\t* Class constructor.\n\t* @param {HTMLElement} [formElement] - The form element in the DOM\n\t* @param {Object} [options={}] - An options object for configuring the form\n\t*/\n\tconstructor(formElement, options) {\n\t\tif (formElement.nodeName !== 'FORM') {\n\t\t\tthrow new Error(`[data-o-component=\"o-forms\"] must be set on a form element. It is currently set on a '${formElement.nodeName.toLowerCase()}'.`);\n\t\t}\n\n\t\tthis.form = formElement;\n\t\tthis.formInputs = Array.from(this.form.elements, element => new Input(element));\n\t\tthis.stateElements = [];\n\n\t\tthis.opts = Object.assign({\n\t\t\tuseBrowserValidation: false,\n\t\t\terrorSummary: true\n\t\t}, options || Forms.getDataAttributes(formElement));\n\n\t\tif (!this.opts.useBrowserValidation) {\n\t\t\tthis.form.setAttribute('novalidate', true);\n\t\t\tthis.form.addEventListener('submit', this);\n\t\t} else {\n\t\t\tthis.form.removeAttribute('novalidate');\n\t\t\tthis.submits = this.form.querySelectorAll('[type=submit]');\n\t\t\tthis.submits.forEach(submit => {\n\t\t\t\tsubmit.addEventListener('click', this);\n\t\t\t\tsubmit.addEventListener('keydown', this);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get the data attributes from the formElement. If the form is being set up\n\t * declaratively, this method is used to extract the data attributes from the DOM.\n\t * @param {HTMLElement} formElement - The message element in the DOM\n\t */\n\tstatic getDataAttributes(formElement) {\n\t\tif (!(formElement instanceof HTMLElement)) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn Object.keys(formElement.dataset).reduce((options, key) => {\n\t\t\t// Ignore data-o-component\n\t\t\tif (key === 'oComponent') {\n\t\t\t\treturn options;\n\t\t\t}\n\n\t\t\t// Build a concise key and get the option value\n\t\t\tconst shortKey = key.replace(/^oMessage(\\w)(\\w+)$/, (m, m1, m2) => m1.toLowerCase() + m2);\n\t\t\tconst value = formElement.dataset[key];\n\n\t\t\t// Try parsing the value as JSON, otherwise just set it as a string\n\t\t\ttry {\n\t\t\t\toptions[shortKey] = JSON.parse(value.replace(/\\'/g, '\"'));\n\t\t\t} catch (error) {\n\t\t\t\toptions[shortKey] = value;\n\t\t\t}\n\n\t\t\treturn options;\n\t\t}, {});\n\t}\n\n\t/**\n\t * Event Handler\n\t * @param {Object} event - The event emitted by element/window interactions\n\t */\n\thandleEvent(e) {\n\t\tconst RETURN_KEY = 13;\n\t\tif (e.type === 'click' || (e.type === 'keydown' && e.key === RETURN_KEY)) {\n\t\t\tif (this.form.checkValidity() === false) {\n\t\t\t\tthis.validateFormInputs();\n\t\t\t}\n\t\t}\n\n\t\tif (e.type === 'submit') {\n\t\t\te.preventDefault();\n\t\t\tlet checkedElements = this.validateFormInputs();\n\n\t\t\tif (checkedElements.some(input => input.valid === false)) {\n\t\t\t\tif (this.opts.errorSummary) {\n\t\t\t\t\tif (this.summary) {\n\t\t\t\t\t\tthis.summary = this.form.replaceChild(new ErrorSummary(checkedElements), this.summary);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.summary = this.form.insertBefore(new ErrorSummary(checkedElements), this.form.firstElementChild);\n\t\t\t\t\t}\n\t\t\t\t\tthis.summary.querySelector('a').focus();\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.target.submit();\n\t\t}\n\t}\n\n\t/**\n\t* Form validation\n\t* Validates every element in the form and creates input objects for the error summary\n\t*/\n\tvalidateFormInputs () {\n\t\treturn this.formInputs.map(element => {\n\t\t\tlet valid = element.validate();\n\t\t\tlet input = element.input;\n\t\t\tlet field = input.closest('.o-forms-field');\n\t\t\tlet label = field ? field.querySelector('.o-forms-title__main').innerHTML : null;\n\t\t\tlet errorElement = field ? field.querySelector('.o-forms-input__error') : null;\n\t\t\tlet error = errorElement ? errorElement.innerHTML : input.validationMessage;\n\t\t\treturn {\n\t\t\t\tid: input.id,\n\t\t\t\tvalid,\n\t\t\t\terror: !valid ? error : null,\n\t\t\t\tlabel\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t* Input state\n\t* @param {String} [name] - name of the input fields to add state to\n\t* @param {String} [state] - type of state to apply — one of 'saving', 'saved', 'none'\n\t*/\n\tsetState(state, name, iconOnly = false) {\n\t\tlet object = this.stateElements.find(item => item.name === name);\n\t\tif (!object) {\n\t\t\tobject = {\n\t\t\t\tname,\n\t\t\t\telement: new State(this.form.elements[name], { iconOnly })\n\t\t\t};\n\n\t\t\tthis.stateElements.push(object);\n\t\t}\n\t\tobject.element.set(state);\n\t}\n\n\t/**\n\t* Destroy form instance\n\t*/\n\tdestroy() {\n\t\tif (!this.opts.useBrowserValidation) {\n\t\t\tthis.form.removeEventListener('submit', this);\n\t\t} else {\n\t\t\tthis.submits.forEach(submit => {\n\t\t\t\tsubmit.removeEventListener('click', this);\n\t\t\t\tsubmit.removeEventListener('keydown', this);\n\t\t\t});\n\t\t}\n\t\tthis.form = null;\n\t\tthis.formInputs.forEach(input => input.destroy());\n\t\tthis.formInputs = null;\n\t\tthis.stateElements = null;\n\t\tthis.opts = null;\n\t}\n\n\t/**\n\t * Initialise form component.\n\t * @param {(HTMLElement|String)} rootElement - The root element to intialise a form in, or a CSS selector for the root element\n\t * @param {Object} [options={}] - An options object for configuring the banners\n\t */\n\tstatic init(rootEl, opts) {\n\t\tif (!rootEl) {\n\t\t\trootEl = document.body;\n\t\t}\n\n\t\tif (!(rootEl instanceof HTMLElement)) {\n\t\t\trootEl = document.querySelector(rootEl);\n\t\t}\n\n\t\tif (rootEl instanceof HTMLFormElement) {\n\t\t\treturn new Forms(rootEl, opts);\n\t\t}\n\n\t\treturn Array.from(rootEl.querySelectorAll('[data-o-component=\"o-forms\"]'), rootEl => new Forms(rootEl, opts));\n\t}\n}\n\nexport default Forms;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/input.js",
      "contents": "class Input {\n\t/**\n\t* Class constructor.\n\t* @param {HTMLElement} [inputElement] - An input element in the DOM\n\t*/\n\tconstructor(element) {\n\t\tthis.input = element;\n\t\tthis.parent = element.closest('.o-forms-input');\n\n\t\tthis.input.addEventListener('blur', this);\n\t\tthis.input.addEventListener('input', this);\n\n\t\tthis.className = {\n\t\t\tinvalid: 'o-forms-input--invalid',\n\t\t\tvalid: 'o-forms-input--valid'\n\t\t};\n\t}\n\n\t/**\n\t* Event Handler\n\t* @param {Object} event - The event emitted by element/window interactions\n\t*/\n\thandleEvent(e) {\n\t\tif (e.type === 'blur' || e.type === 'input') {\n\t\t\tthis.validate(e.target);\n\t\t}\n\t}\n\n\t/**\n\t* Input validation\n\t* Conditions for input validation\n\t*/\n\tvalidate() {\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.input.validity.valid) {\n\t\t\tthis.parent.classList.add(this.className.invalid);\n\t\t\treturn false;\n\n\t\t} else if (this.input.validity.valid && this.parent.classList.contains(this.className.invalid)) {\n\t\t\tthis.parent.classList.replace(this.className.invalid, this.className.valid);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdestroy() {\n\t\tthis.input.removeEventListener('blur', this);\n\t\tthis.input.removeEventListener('input', this);\n\t\tthis.input = null;\n\t}\n}\n\nexport default Input;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/state.js",
      "contents": "class State {\n\t/**\n\t* Class constructor.\n\t* @param {RadioNodeList} [inputs] - A NodeList of radio input elements\n\t*/\n\tconstructor(inputs, opts) {\n\t\tlet radioInputs = inputs instanceof RadioNodeList;\n\t\tif (radioInputs) {\n\t\t\tthis.inputs = inputs;\n\t\t\tthis.parent = this.inputs[0].closest('.o-forms-input');\n\t\t} else {\n\t\t\tthrow new Error('State can only be applied to `radio` type inputs.');\n\t\t}\n\n\t\tthis._verify();\n\t\tthis.opts = Object.assign({\n\t\t\ticonOnly: false\n\t\t}, opts);\n\n\t\tthis.className = {\n\t\t\tsaving: 'o-forms-input--saving',\n\t\t\tsaved: 'o-forms-input--saved'\n\t\t};\n\t}\n\n\t/**\n\t* Create state element\n\t* @access private\n\t*/\n\t_generateStateEl() {\n\t\tthis.stateEl = document.createElement('span');\n\t\tlet classNames = this.opts.iconOnly ? ['o-forms-input__state', 'o-forms-input__state--icon-only'] : ['o-forms-input__state'];\n\t\t this.stateEl.classList.add(...classNames);\n\t\tthis.parent.append(this.stateEl);\n\t}\n\n\t/**\n\t* State setter\n\t* @param {String} [state] type of state to display\n\t*/\n\tset(state) {\n\t\tif (!this.stateEl) {\n\t\t\tthis._generateStateEl();\n\t\t}\n\n\t\tif (state === 'saving') {\n\t\t\tthis._saving();\n\t\t} else if (state === 'saved') {\n\t\t\tthis._saved();\n\t\t} else if (state === 'none') {\n\t\t\tthis._remove();\n\t\t} else {\n\t\t\tthrow new Error(`${state} is not a recognised state, the options are 'saving', 'saved' or 'none'.`);\n\t\t}\n\t}\n\n\t/**\n\t* Saving state\n\t* @access private\n\t*/\n\t_saving() {\n\t\tthis.parent.classList.add(this.className.saving);\n\t}\n\n\t/**\n\t* Saved state\n\t* @access private\n\t*/\n\t_saved() {\n\t\tthis.parent.classList.replace(this.className.saving, this.className.saved);\n\t}\n\n\t/**\n\t* Remove state\n\t* @access private\n\t*/\n\t_remove() {\n\t\tthis.parent.classList.remove(this.className.saved);\n\t\tthis.parent.removeChild(this.stateEl);\n\t\tthis.stateEl = null;\n\t}\n\n\t/**\n\t* Verify input parent\n\t* @access private\n\t*/\n\t_verify() {\n\t\tif (!this.parent.classList.contains('o-forms-input--radio-box')) {\n\t\t\tthrow new Error('State can only be set on radio inputs with a box style (o-forms-input--radio-box).');\n\t\t} else if (this.parent.classList.contains('.o-forms--input-invalid')) {\n\t\t\tthrow new Error('State cannot be set on an invalid input field.');\n\t\t}\n\t}\n}\n\nexport default State;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_checkbox.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $right Whether to display checkbox to the right of text\n/// @output Styling for text inputs\n@mixin _oFormsCheckbox(\n\t$disabled: null,\n\t$right: null\n) {\n\t.o-forms-input--checkbox {\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:indeterminate + .o-forms-input__label:after {\n\t\t\t\t@include oIconsGetIcon('minus', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 1;\n\t\t\t}\n\t\t}\n\n\t\t@if $right {\n\t\t\t.o-forms-input__right {\n\t\t\t\tdisplay: inline-block;\n\t\n\t\t\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__label {\n\t\t\t\t\tpadding-left: 0;\n\t\t\t\t\tpadding-right: $_o-forms-spacing-controls;\n\t\n\t\t\t\t\t&:before,\n\t\t\t\t\t&:after {\n\t\t\t\t\t\t// right: 0;\n\t\t\t\t\t\tleft: calc(100% - #{$_o-forms-spacing-six});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 0 $_o-forms-spacing-controls;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t\tbackground-color: _oFormsGet('default-background');\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements();\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('controls-checked-base'), $_o-forms-spacing-six);\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\topacity: 0;\n\t\t\t\ttransition: opacity 0.1s ease;\n\t\t\t}\n\n\t\t\t// this handles spacing between two input__label spans for the same input element, \n\t\t\t// which is necessary in the case of 'additional content'\n\t\t\t& + .o-forms-input__label {\n\t\t\t\tpadding-top: $_o-forms-spacing-three; \n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_date.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for date inputs\n@mixin _oFormsDate (\n\t$disabled: null,\n) {\n\t.o-forms-input--date {\n\n\t\tlabel {\n\t\t\tdisplay: flex;\n\t\t\tfloat: left;\n\t\t\tflex-direction: column-reverse;\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\tinput[type=text] { \n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tdisplay: block;\n\t\t\tmargin: $_o-forms-spacing-one $_o-forms-spacing-three 0 0;\n\t\t\t\n\t\t\t&[pattern$='{2}'],\n\t\t\t&[pattern$='[012]'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(2.2ch + 1em);\n\t\t\t}\n\t\t\t\n\t\t\t&[pattern$='{4}'] {\n\t\t\t\t// Based on character width (plus kerning) and line height.\n\t\t\t\twidth: calc(4.2ch + 1em);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tpadding-top: $_o-forms-spacing-one;\n\t\t\tclear: both;\n\t\t}\n\t}\n}\n// sass-lint:enable no-qualifying-elements\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_pseudo-radio-link.scss",
      "contents": "/// @access private\n/// @output Styling for anchor 'controls'\n\n@mixin _oFormsPseudoRadioLink {\n\t.o-forms-input--pseudo-radio-link {\n\t\t@include _oFormsControlsBoxContainer();\n\t\t@include oTypographyMargin($top: 0);\n\n\t\t@include _oFormsPseudoRadioLinkStyles();\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// Outpus styling for box-styled anchors\n@mixin _oFormsPseudoRadioLinkStyles($theme: null) {\n\ta {\n\t\t@include _oFormsControlsBoxBase();\n\t\tbox-sizing: border-box;\n\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\tpadding: ($_o-forms-spacing-one + $_o-forms-spacing-half) $_o-forms-spacing-two;\n\t\tposition: relative;\n\t\ttext-decoration: none;\n\n\t\t&:hover {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&.o-forms-input__link--current {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:first-of-type) {\n\t\t\tborder-left: $_o-forms-border;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_radio-box.scss",
      "contents": "// sass-lint:disable no-qualifying-elements\n/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioBox(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-box {\n\t\t@include _oFormsRadioBoxInputStyles();\n\n\t\t.o-forms-input--radio-box__container {\n\t\t\t@include _oFormsControlsBoxContainer();\n\t\t}\n\n\t\t&.o-forms-input--invalid .o-forms-input--radio-box__container {\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t}\n\n\t\tlabel {\n\t\t\t@include _oFormsControlsBoxBase();\n\n\t\t\t&:not(:first-of-type) {\n\t\t\t\tborder-left: $_o-forms-border;\n\t\t\t}\n\n\t\t\t.o-forms-input__label {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tmax-height: $_o-forms-spacing-controls;\n\t\t\t\tpadding: $_o-forms-spacing-one;\n\t\t\t\ttransition: 0.3s background-color, 0.15s color ease-out;\n\t\t\t\twhite-space: nowrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: absolute;\n\t\t\topacity: 0;\n\n\t\t\t@if $disabled {\n\t\t\t\t&:disabled + .o-forms-input__label {\n\t\t\t\t\tcursor: default;\n\t\t\t\t\topacity: 0.4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridRespondTo(S) {\n\t\t\t&.o-forms-input--inline .o-forms-input__state {\n\t\t\t\tposition: relative;\n\t\t\t\tbottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__state {\n\t\t\tposition: absolute;\n\t\t\tbottom: -($_o-forms-spacing-five + $_o-forms-spacing-half);\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\tbottom: -$_o-forms-spacing-four;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @param {Map|null} $theme Custom theme map\n/// @output styling for box-styled radio inputs\n@mixin _oFormsRadioBoxInputStyles($theme: null) {\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t& + .o-forms-input__label {\n\t\t\tcolor: _oFormsGet('controls-base', $from: $theme);\n\t\t}\n\n\t\t&:not(:checked):not(:disabled):hover + .o-forms-input__label {\n\t\t\tbackground-color: rgba(_oFormsGet('controls-base', $from: $theme), 0.15);\n\t\t}\n\n\t\t&:checked + .o-forms-input__label {\n\t\t\tbackground-color: _oFormsGet('controls-base', $from: $theme);\n\t\t\tcolor: _oFormsGet('controls-checked-base', $from: $theme);\n\n\t\t\t&.o-forms-input__label--negative {\n\t\t\t\tbackground-color: _oFormsGet('controls-negative-checked-background', $from: $theme);\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_radio-round.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output Styling for box-styled radio inputs\n@mixin _oFormsRadioRound(\n\t$disabled: null\n) {\n\t.o-forms-input--radio-round {\n\t\t.o-forms-input__label {\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-controls;\n\t\t\tdisplay: inline-block;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\t@include _oFormsControlsPseudoElements;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\ttransition: opacity 0.1s ease-in;\n\t\t\t\tbackground-color: transparent;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oColorsFor(page, background);\n\t\t\t\tborder: $_o-forms-border;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: _oFormsGet('controls-base');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\theight: $_o-forms-spacing-three;\n\t\t\t\twidth: $_o-forms-spacing-three;\n\t\t\t\tmargin: $_o-forms-spacing-three / 2;\n\t\t\t\topacity: 0;\n\t\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t\t@media screen and (-ms-high-contrast: active) {\n\t\t\t\t\tbackground-color: windowText;\n\t\t\t\t}\n\t\t\t\t// sass-lint:enable no-vendor-prefixes\n\t\t\t}\n\t\t}\n\n\t\tinput[type=radio] { // sass-lint:disable-line no-qualifying-elements\n\t\t\t@include _oFormsControlsBase($disabled);\n\n\t\t\t&:checked\t+ .o-forms-input__label:before {\n\t\t\t\tborder-color: _oFormsGet('controls-base');\n\t\t\t}\n\n\t\t\t&:focus {\n\t\t\t\tborder-color: $o-normalise-focus-color;\n\t\t\t\tbox-shadow: 0 0 0 $_o-forms-spacing-half $o-normalise-focus-color;\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t}\n\t}\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_select.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @output Styling for text areas\n@mixin _oFormsSelect(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null\n) {\n\t.o-forms-input--select {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall('select');\n\t\t}\n\t\t\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix('select');\n\t\t}\n\n\t\tselect {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('field-standard-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\tappearance: none;\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: auto $_o-forms-spacing-six;\n\t\t\tborder-radius: 0;\n\t\t\tbackground-clip: padding-box;\n\t\t\tcolor: _oFormsGet('default-text');\n\t\t\tcursor: pointer;\n\t\t\toutline: none;\n\n\t\t\t// For iOS 6 that doesn't support 4-value background-position\n\t\t\t// Handles background sizing and positioning issues with IE10+\n\t\t\t// sass-lint:disable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\t\t\tbackground-position: right center;\n\t\t\tbackground-position: right $_o-forms-spacing-two center;\n\t\t\t-ms-background-position-x: right -75%;\n\t\t\t-ms-background-position-y: center;\n\t\t\t// sass-lint:enable no-duplicate-properties no-vendor-prefixes no-misspelled-properties\n\n\t\t\t// Hide stock browser arrow in IE 10+\n\t\t\t// sass-lint:disable no-vendor-prefixes\n\t\t\t&::-ms-expand {\n\t\t\t\tcolor: oColorsGetPaletteColor('white');\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t\t// sass-lint:enable no-vendor-prefixes\n\n\t\t\t&:disabled {\n\t\t\t\t@include oIconsGetIcon('arrow-down', _oFormsGet('disabled-text'), $apply-base-styles: false, $apply-width-height: false);\n\t\t\t}\n\n\t\t\t&[multiple] {\n\t\t\t\tbackground-image: none;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_text-area.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $invalid Whether to output invalid state styling\n/// @param {Boolean} $valid Whether to output valid state styling\n/// @output Styling for text areas\n@mixin _oFormsTextArea(\n\t$disabled: null\n) {\n\t.o-forms-input--textarea {\n\t\ttextarea {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t\tresize: vertical;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_text-input.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @param {Boolean} $small Whether to output small input styles\n/// @param {Boolean} $suffix Whether to output suffix styles\n/// @param {Boolean} $small Whether to output small styles\n/// @param {String} $input-type Which text-like input to style (password, email, text)\n/// @output Styling for text inputs\n@mixin _oFormsTextInput(\n\t$disabled: null,\n\t$small: null,\n\t$suffix: null,\n\t$input-type: 'text'\n) {\n\t$element: 'input[type=#{$input-type}]';\n\n\t.o-forms-input--#{$input-type} {\n\t\t@if $small {\n\t\t\t@include _oFormsInputSmall($element);\n\t\t}\n\n\t\t@if $suffix {\n\t\t\t@include _oFormsInputSuffix($element);\n\t\t}\n\n\t\t#{$element} {\n\t\t\t@include _oFormsInputBase($disabled);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_toggle.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output styles for toggle based on a checkbox input\n@mixin _oFormsToggle($disabled: null) {\n\t.o-forms-input--toggle {\n\t\t.o-forms-input__label {\n\t\t\tdisplay: inline-block;\n\t\t\tpadding: $_o-forms-spacing-half 0 $_o-forms-spacing-half $_o-forms-spacing-eight;\n\t\t\tvertical-align: top;\n\n\t\t\t&:before,\n\t\t\t&:after {\n\t\t\t\tcontent: '';\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle');\n\t\t\t\tborder-radius: $_o-forms-spacing-ten;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-ten;\n\t\t\t}\n\n\t\t\t&:after {\n\t\t\t\tbackground-color: oColorsGetColorFor(page, background);\n\t\t\t\tborder: $_o-forms-spacing-half solid _oFormsGet('default-text');\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\theight: $_o-forms-spacing-six;\n\t\t\t\twidth: $_o-forms-spacing-six;\n\t\t\t\ttransition: left 75ms ease-in-out;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=checkbox] { // sass-lint:disable-line no-qualifying-elements\n\t\t\tposition: relative;\n\t\t\tleft: $_o-forms-spacing-three;\n\n\t\t\t&:checked + .o-forms-input__label {\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t\t&:after {\n\t\t\t\t\tleft: $_o-forms-spacing-four;\n\t\t\t\t\tborder-color: _oFormsGet('toggle-selected');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:invalid:not(:disabled) + .o-forms-input__label:after {\n\t\t\t\tborder-color: inherit;\n\t\t\t}\n\t\t}\n\n\t\t@if $disabled {\n\t\t\tinput[type=checkbox]:disabled + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t\t\tcolor: _oFormsGet('disabled-text');\n\n\t\t\t\t&:after {\n\t\t\t\t\tborder-color: _oFormsGet('toggle-disabled');\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-knob-disabled');\n\t\t\t\t}\n\n\t\t\t\t&:before {\n\t\t\t\t\tbackground-color: _oFormsGet('toggle-disabled');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/main.scss",
      "contents": "// Styles shared between all input types\n@import './shared/brand';\n@import './shared/variables';\n@import './shared/base'; \n@import './shared/control-inputs'; // grouped inputs (e.g. radio/checkboxes) \n@import './shared/error-summary';\n@import './shared/inline';\n@import './shared/single-inputs'; // individual inputs (e.g. text, select)\n@import './shared/validity';\n\n// Input-type specific styles\n@import './checkbox';\n@import './date';\n@import './pseudo-radio-link';\n@import './radio-box';\n@import './radio-round';\n@import './select';\n@import './text-area';\n@import './text-input';\n@import './toggle';\n\n// Modifiers for certain input types\n@import './modifiers/custom'; // for radio box & anchors\n@import './modifiers/inverse'; // for toggle\n@import './modifiers/state'; // for radio box\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_custom.scss",
      "contents": "/// Transforms a custom theme map into brand variables. See `_brand.scss`.\n/// @access private\n/// @param {map|null} $theme - A custom theme map.\n/// @return {map} Brand variables.\n@function _oFormsThemeToBrandVariants($theme) {\n\t@if $theme {\n\t\t\t@if not index(map-keys($theme), 'controls-base') {\n\t\t\t\t@error \"The custom theme for box-styled controls is missing a 'controls-base' key. (see @mixin _oFormsAnchorBox)\";\n\t\t\t}\n\t\t// Add default value for checked background if not specified.\n\t\t@if not map-get($theme, 'negative-checked-background') {\n\t\t\t$theme: map-merge($theme, (\n\t\t\t\t'negative-checked-background': map-get($theme, 'checked-background')\n\t\t\t));\n\t\t}\n\n\t\t$theme: (\n\t\t\tcontrols-base: oColorsGetPaletteColor(map-get($theme, 'controls-base')),\n\t\t\tcontrols-checked-base: oColorsGetPaletteColor(map-get($theme, 'controls-checked-base')),\n\t\t\tcontrols-negative-checked-background: oColorsGetPaletteColor(map-get($theme, 'controls-negative-checked-background'))\n\t\t);\n\t}\n\n\t@return $theme;\n}\n\n/// @access private\n/// Outputs base styling for custom icons\n@mixin _oFormsCustomIconBase {\n\t.o-forms-input__label {\n\t\tmin-width: unset;\n\t}\n\n\ta.o-forms-input__link--current, // sass-lint:disable-line no-qualifying-elements\n\tinput[type=radio]:checked + .o-forms-input__label { // sass-lint:disable-line no-qualifying-elements\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n}\n\n/// @access public\n/// @param {String} $icon Name of the icon to request from the image set\n/// @param {String} $input Type of input to set icons on ('anchor' or radio)\n/// @param {Map|null} $theme Custom theme map\n@mixin _oFormsCustomIcon($icon, $input, $theme: null) {\n\t@include _oFormsCustomIconBase();\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\t$element: '';\n\n\t@if $input == 'radio' {\n\t\t$element: 'label .o-forms-input__label.o-forms-input__label__#{$icon}-icon';\n\t} @else {\n\t\t$element: 'a.o-forms-input__link--#{$icon}-icon';\n\t} \n\t\n\t#{$element} {\n\t\tpadding-left: $_o-forms-spacing-six;\n\t\tpadding-right: $_o-forms-spacing-two;\n\t\ttext-align: left;\n\n\t\t&:after,\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-position-y: 0.175em;\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t}\n\n\t\t&:before {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t}\n\n\t\t&:after {\n\t\t\t@include oIconsGetIcon(\n\t\t\t\t$icon-name: $icon,\n\t\t\t\t$color: _oFormsGet('controls-checked-base', $from: $theme),\n\t\t\t\t$apply-base-styles: false,\n\t\t\t\t$high-contrast-fallback: true,\n\t\t\t\t$container-width: $_o-forms-spacing-six\n\t\t\t);\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n\n/// @access public\n/// @param {String} $input Type of input to customise, one of 'anchor' or 'radio'\n/// @param {List} $icons A list of icons to render\n/// @param {Map|null} $theme Custom theme map\n@mixin oFormsAddCustom(\n\t$input: null,\n\t$class: null, \n\t$icons: null,\n\t$theme: null\n) {\n\n\t@if not $input {\n\t\t@error('Please specify whether you would like to customise radio inputs or anchors');\n\t}\n\n\t@if not $class {\n\t\t@error('Please specify a name for the custom modifier (e.g. o-forms-input--{custom-modifier}).');\n\t}\n\n\t$theme: _oFormsThemeToBrandVariants($theme);\n\n\t.o-forms-input--#{$class} {\n\t\t@if $input == 'pseudo-radio-link' {\n\t\t\t@include _oFormsPseudoRadioLinkStyles($theme);\n\t\t} @else if $input == 'radio' {\n\t\t\t@include _oFormsRadioBoxInputStyles($theme);\n\t\t} @else {\n\t\t\t@error('#{$input} inputs do not accept customisation. If you need to customise this type of input, please contact the Origami team.');\n\t\t};\n\t}\n\n\t@if $icons {\n\t\t@each $icon in $icons {\n\t\t\t@include _oFormsCustomIcon($icon, $input, $theme);\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_inverse.scss",
      "contents": "/// @access private\n/// @output styles for inverse toggle based on a checkbox input\n@mixin _oFormsInverse {\n\t.o-forms-field--inverse {\n\t\tcolor: _oFormsGet('toggle-inverse');\n\n\t\t.o-forms-title {\n\t\t\t.o-forms-title__main:after,\n\t\t\t.o-forms-title__prompt {\n\t\t\t\tcolor: rgba(_oFormsGet('toggle-inverse'), 0.7);\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__label:before {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\t.o-forms-input__label:after {\n\t\t\tbackground-color: _oFormsGet('toggle-inverse-knob');\n\t\t\tborder-color: _oFormsGet('toggle-inverse');\n\t\t}\n\n\t\tinput[type=checkbox]:checked { // sass-lint:disable-line no-qualifying-elements\n\t\t\t+ .o-forms-input__label:before {\n\t\t\t\tbackground-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('toggle-inverse-selected');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/modifiers/_state.scss",
      "contents": "/// @access private\n/// @output styles for state animation for the box-styled radio inputs\n@mixin _oFormsState() {\n\t.o-forms-input__state {\n\t\t// the loading spinner and tick icons for state are mismatched in terms of size/padding, \n\t\t// the custom line-height aligns them as closely as possible (with minimal style changes)\n\t\t@include oTypographySize($scale: -1, $line-height: 1.75);\n\t\tcolor: inherit;\n\t\tdisplay: block;\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-forms-input__state--icon-only:after {\n\t\t@include oNormaliseVisuallyHidden;\n\t}\n\n\t.o-forms-input--saving {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tpadding: 0;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saving';\n\t\t\t}\n\t\t\t\n\t\t\t&:before {\n\t\t\t\t@include oLoadingContent($opts: ('theme': 'dark', 'size': 'mini'));\n\t\t\t\tmargin: 0 $_o-forms-spacing-two 0 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-forms-input--saved {\n\t\tdisplay: block;\n\n\t\t.o-forms-input__state {\n\t\t\tmargin-left: -$_o-forms-spacing-one;\n\n\t\t\t&:after {\n\t\t\t\tcontent: 'Saved';\n\t\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\t}\n\n\t\t\t&:before {\n\t\t\t\t@include oIconsGetIcon('tick', _oFormsGet('valid-base'), $_o-forms-spacing-seven);\n\t\t\t\tvertical-align: middle;\n\t\t\t\tpadding: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t@include oGridRespondTo(S) {\n\t\t.o-forms-input--inline {\n\t\t\t&.o-forms-input--saving,\n\t\t\t&.o-forms-input--saved {\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t\talign-items: center;\n\n\t\t\t\tlabel {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\n\t\t\t\t.o-forms-input__state--icon-only {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.o-forms-input--saving .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three;\n\t\t\t}\n\n\t\t\t&.o-forms-input--saved .o-forms-input__state {\n\t\t\t\tpadding: 0 $_o-forms-spacing-three 0 $_o-forms-spacing-two;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_base.scss",
      "contents": "/// @access private\n/// @output Shared base state styles for all form elements.\n@mixin _oFormsBase() {\n\t@include _oFormsValidityStates();\n\n\t.o-forms-field,\n\t.o-forms-title,\n\t.o-forms-input {\n\t\t@include oTypographySans(0);\n\t}\n\t\n\t.o-forms-field {\t\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tmargin-bottom: $_o-forms-spacing-six;\n\t\tposition: relative;\n\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 0 $_o-forms-spacing-three;\n\t\t\tposition: relative;\n\t\t}\n\n\t\tlabel:last-of-type {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\t}\n\t\n\t.o-forms-field--optional .o-forms-title__main:after {\n\t\t@include oTypographySize($scale: -1);\n\t\tcontent: '(optional)';\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tfont-weight: 400;\n\t\tmargin-left: $_o-forms-spacing-one;\n\t}\n\n\t.o-forms-title__main {\n\t\t@include oTypographyBold('sans');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-title__prompt {\n\t\t@include oTypographySize($scale: -1);\n\t\tcolor: _oFormsGet('default-prompt-text');\n\t\tdisplay: block;\n\t}\n\n\t.o-forms-input {\n\t\tmargin-top: $_o-forms-spacing-three;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsGet($variables, $from: null) {\n\t@return oBrandGet($component: 'o-forms', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oFormsSupports($variant) {\n\t@return oBrandSupportsVariant($component: 'o-forms', $variant: $variant);\n}\n\n$_o-forms-shared-brand-config: (\n\tdefault-text: oColorsGetPaletteColor('black-80'),\n\tdefault-prompt-text: oColorsGetPaletteColor('black-60'),\n\tdefault-border: oColorsGetPaletteColor('black-50'),\n\tdefault-background: oColorsGetPaletteColor('white'),\n\tdisabled-text: oColorsGetPaletteColor('black-60'),\n\tdisabled-base: oColorsGetPaletteColor('black-10'),\n\tcontrols-base: oColorsGetPaletteColor('teal'),\n\tcontrols-checked-base: oColorsGetPaletteColor('white'),\n\tcontrols-negative-checked-background: oColorsGetPaletteColor('teal-30'),\n\tinvalid-base: oColorsGetPaletteColor('crimson'),\n\ttoggle: oColorsGetPaletteColor('black'),\n\ttoggle-knob: oColorsMix('black', 'white', 10),\n\ttoggle-selected: oColorsGetPaletteColor('teal'),\n\ttoggle-knob-selected: oColorsGetPaletteColor('white'),\n\ttoggle-disabled: oColorsGetPaletteColor('black-20'),\n\ttoggle-knob-disabled: oColorsGetPaletteColor('black-40'),\n\ttoggle-inverse: oColorsGetPaletteColor('white'),\n\ttoggle-inverse-knob: oColorsGetPaletteColor('slate'),\n\ttoggle-inverse-selected: oColorsGetPaletteColor('teal-100'),\n\tvalid-base: oColorsMix('jade', 'black', 80)\n);\n\n@include oBrandDefine('o-forms', 'master', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'internal', (\n\t'variables': $_o-forms-shared-brand-config,\n\t'supports-variants': ()\n));\n\n@include oBrandDefine('o-forms', 'whitelabel', (\n\t'variables': map-merge($_o-forms-shared-brand-config, (\n\t\tcontrols-base: oColorsGetPaletteColor('black'),\n\t\tcontrols-negative-checked-background: oColorsGetPaletteColor('black'),\n\t\ttoggle-inverse-selected: oColorsGetPaletteColor('white'),\n\t\ttoggle-inverse-knob: oColorsGetPaletteColor('black'),\n\t)),\n\t'supports-variants': ()\n));\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_control-inputs.scss",
      "contents": "/// @access private\n/// @output Shared base styles for checkboxes, toggles, round- and box-style radio buttons.\n@mixin _oFormsControlsBase($disabled: null) {\n\tposition: absolute;\n\tpadding: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\n\t&:checked + .o-forms-input__label:after {\n\t\topacity: 1;\n\t}\n\n\t@if $disabled {\n\t\t&:disabled {\n\t\t\topacity: 0;\n\n\t\t\t+ .o-forms-input__label {\n\t\t\t\topacity: 0.4;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared pseudo element styles for checkboxes, toggle, round- and box-style radio buttons.\n@mixin _oFormsControlsPseudoElements {\n\tcontent: '';\n\tcursor: pointer;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: $_o-forms-spacing-six;\n\theight: $_o-forms-spacing-six;\n\tbox-sizing: border-box;\n}\n\n/// @access private\n/// @output Shared styles for box-style radio buttons and anchor controls\n@mixin _oFormsControlsBoxBase {\n\tdisplay: inline-block;\n\tcursor: pointer;\n\tfloat: left;\n\tmargin: 0;\n\tmin-height: $_o-forms-spacing-seven;\n\tmin-width: oTypographySpacingSize(15);\n}\n\n/// @access private\n/// @output Shared styles for box-style containers\n@mixin _oFormsControlsBoxContainer {\n\t@include oTypographySize($scale: -1, $line-height: unset);\n\t@include oTypographyBold('sans');\n\tbox-sizing: border-box;\n\tborder: $_o-forms-border;\n\tdisplay: inline-block;\n\tpadding: $_o-forms-spacing-half;\n\ttext-align: center;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_error-summary.scss",
      "contents": "/// @access private\n/// @output styles for error summary\n@mixin _oFormsErrorSummary() {  \n\t.o-forms__error-summary {\n\t\t@include oTypographySans($scale: 0);\n\t\tbackground-color: oColorsMix('crimson', $percentage: 10);\n\t\tmargin-bottom: $_o-forms-spacing-four;\n\t\tpadding: $_o-forms-spacing-three;\n\n\t\th4 {\n\t\t\t@include oTypographyBold('sans');\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tmargin: 0 0 $_o-forms-spacing-one;\n\t\t}\n\n\t\tul {\n\t\t\tlist-style-type: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\n\t\t\tspan {\n\t\t\t\t@include oTypographyBold('sans');\n\t\t\t}\n\t\t}\n\n\t\ta {\n\t\t\tcolor: oColorsMix('black', 'crimson', $percentage: 12.5);\n\t\t\tdisplay: inline-block;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-top: $_o-forms-spacing-one;\n\t\t\ttext-decoration: none;\n\t\t\tborder-bottom: 1px solid _oFormsGet('invalid-base');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_inline.scss",
      "contents": "/// @access private\n/// @output styles for inlining labels and inputs\n@mixin _oFormsInline() {\n\t/* inline field titles and inputs\n\t\t[title] [input]\n\t\tor\n\t\t[title] [input]\n\t\t\t\t\t\t[input]\n\t*/\n\t@include oGridRespondTo(S) {\n\t\t&.o-forms-field--inline {\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-between;\n\t\t\n\t\t\t.o-forms-title {\n\t\t\t\tflex: 0 1 50%;\n\t\t\t\tmargin-right: $_o-forms-spacing-three;\n\t\t\t\tbox-sizing: border-box;\n\n\t\t\t\t&.o-forms-title--shrink {\n\t\t\t\t\tflex-basis: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.o-forms-title--vertical-center {\n\t\t\t\t\talign-self: center;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t.o-forms-input {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tflex: 1 0 50%;\n\t\t\t\talign-items: flex-start;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* inline inputs\n\t\t\t[title] \n\t\t\t[input] [input]\n\t\t\tor (combined with field inline)\n\t\t\t[title] [input] [input]\n\t\t*/\n\t\t.o-forms-input.o-forms-input--inline {\n\t\t\tdisplay: flex;\n\t\t\tflex-flow: row wrap;\n\t\t\t\t\n\t\t\tlabel {\n\t\t\t\tmargin: 0 $_o-forms-spacing-four $_o-forms-spacing-three 0;\n\t\t\t\tmax-width: 75%;\n\t\t\t}\n\n\t\t\t&.o-forms-input--date label,\n\t\t\t&.o-forms-input--radio-box label {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_single-inputs.scss",
      "contents": "/// @access private\n/// @param {Boolean} $disabled Whether to output disabled state styling\n/// @output base styles for select, textarea and text input\n@mixin _oFormsInputBase($disabled) {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tbackground-color: _oFormsGet('default-background');\n\tborder: $_o-forms-border;\n\tbox-sizing: border-box;\n\tmin-height: $_o-forms-spacing-ten;\n\tpadding: $_o-forms-spacing-two;\n\twidth: 100%;\n\n\t@if $disabled {\n\t\t@include _oFormsInputDisabled();\n\t}\n}\n\n/// @access private\n/// @output Shared disabled state styles for inputs.\n@mixin _oFormsInputDisabled {\n\t&:disabled {\n\t\tcursor: default;\n\t\tcolor: _oFormsGet('disabled-text');\n\t\tbackground-color: _oFormsGet('disabled-base');\n\t\tborder-color: _oFormsGet('disabled-base');\n\t}\n}\n\n/// @access private\n/// @output Shared small styles for select and text input.\n@mixin _oFormsInputSmall($element) {\n\t&.o-forms-input--small {\n\t\t#{$element} {\n\t\t\t@include oTypographySize($scale: -1, $line-height: 1.65);\n\t\t\tmin-height: $_o-forms-spacing-seven;\n\t\t\tpadding: 0 $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n\n/// @access private\n/// @output Shared suffix styles for select and text input.\n@mixin _oFormsInputSuffix($element) {\n\t&.o-forms-input--suffix {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\n\t\t#{$element} {\n\t\t\tflex: 1;\n\t\t\tmargin-right: $_o-forms-spacing-two;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_validity.scss",
      "contents": "/// @access private\n/// @output styles for valid and invalid inputs\n@mixin _oFormsValidityStates() {\n\t.o-forms-input--valid {\n\t\t*:valid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('valid-base');\n\t\t\tborder-color: _oFormsGet('valid-base');\n\t\t}\n\t}\n\n\t*:invalid {\n\t\tbox-shadow: none;\n\t}\n\t\n\t.o-forms-input__error {\n\t\tdisplay: none;\n\t}\n\n\t.o-forms-input--invalid {\n\t\t*:invalid:not(:disabled) {\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tborder-color: _oFormsGet('invalid-base');\n\n\t\t\t+ .o-forms-input__label:before,\n\t\t\t+ .o-forms-input__label:after {\n\t\t\t\tborder-color: _oFormsGet('invalid-base');\n\t\t\t}\n\t\t}\n\n\t\t.o-forms-input__error {\n\t\t\t@include oTypographySize($scale: -1);\n\t\t\tcolor: _oFormsGet('invalid-base');\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tbottom: -$_o-forms-spacing-five;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/shared/_variables.scss",
      "contents": "$o-forms-is-silent: true !default;\n\n$_o-forms-border: 1px solid _oFormsGet('default-border');\n\n$_o-forms-spacing-half: oTypographySpacingSize(1) / 2; //2px\n$_o-forms-spacing-one: oTypographySpacingSize(1); // 4px\n$_o-forms-spacing-two: oTypographySpacingSize(2); // 8px\n$_o-forms-spacing-three: oTypographySpacingSize(3); // 12px\n$_o-forms-spacing-four: oTypographySpacingSize(4); // 16px\n$_o-forms-spacing-five: oTypographySpacingSize(5); // 20px\n$_o-forms-spacing-six: oTypographySpacingSize(6); // 24px && checkbox/radio widths\n$_o-forms-spacing-seven: oTypographySpacingSize(7); // 28px\n$_o-forms-spacing-eight: oTypographySpacingSize(8); // 32px\n$_o-forms-spacing-nine: oTypographySpacingSize(9); // 36px\n$_o-forms-spacing-ten: oTypographySpacingSize(10); // 40px\n\n$_o-forms-spacing-controls: $_o-forms-spacing-nine + $_o-forms-spacing-half;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/forms.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport formFixture from \"./helpers/fixtures\";\nimport Forms from \"../browser\";\ndescribe('Forms', () => {\n  let formEl;\n  let parentClass;\n  let requiredTextField;\n  let dateFields;\n  before(() => {\n    parentClass = (element, modifier) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${modifier}`);\n  });\n  context('on `submit`', () => {\n    let submit;\n    let summary;\n    let formSpy;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      formSpy = sinon.spy(formEl, 'addEventListener');\n      dateFields = formEl.elements['date'];\n      requiredTextField = formEl.elements['required'];\n      submit = formEl.elements[formEl.elements.length - 1];\n    });\n    afterEach(() => {\n      document.body.innerHTML = null;\n    });\n    it('`opts.useBrowserValidation = true` relays form validation to browser on all invalid form inputs', () => {\n      new Forms(formEl, {\n        useBrowserValidation: true\n      });\n      submit.click();\n      proclaim.isTrue(formSpy.withArgs('submit').notCalled);\n      proclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n      proclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n    });\n    it('`opts.useBrowserValidation = false` manually validates form inputs', () => {\n      new Forms(formEl);\n      submit.click();\n      proclaim.isTrue(formSpy.withArgs('submit').calledOnce);\n      proclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n      proclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n    });\n    context('`opts.errorSummary = true`', () => {\n      let listItems;\n      let textInput;\n      beforeEach(() => {\n        new Forms(formEl);\n      });\n      it('creates new summary when inputs are invalid', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        proclaim.isNotNull(summary);\n      });\n      it('the summary reflects the number of invalid inputs', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 4);\n      });\n      it('the summary gets updated on second submit if a form field has been amended', () => {\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 4);\n        textInput = formEl.elements['text'];\n        textInput.value = 'something';\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        listItems = summary.querySelectorAll('a');\n        proclaim.equal(listItems.length, 3);\n      });\n    });\n    context('`opts.errorSummary = false`', () => {\n      it('does not create a new summary when inputs are invalid ', () => {\n        new Forms(formEl, {\n          errorSummary: false\n        });\n        submit.click();\n        summary = formEl.querySelector('.o-forms__error-summary');\n        proclaim.isNull(summary);\n      });\n    });\n  });\n  context('.setState()', () => {\n    let form;\n    let name;\n    let radioInputs;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      name = 'radioBox';\n      radioInputs = formEl.elements[name];\n      form = new Forms(formEl);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`saving` to named input', () => {\n      form.setState('saving', name);\n      proclaim.isTrue(parentClass(radioInputs[0], 'saving'));\n    });\n    it('`saved` to named input', () => {\n      form.setState('saved', name);\n      proclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n      proclaim.isTrue(parentClass(radioInputs[0], 'saved'));\n    });\n    it('`none` to named input', () => {\n      form.setState('none', name);\n      proclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n      proclaim.isFalse(parentClass(radioInputs[0], 'saved'));\n    });\n  });\n  context('.destroy()', () => {\n    let form;\n    let formSpy;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      formEl = document.forms[0];\n      form = new Forms(formEl);\n    });\n    afterEach(() => {\n      document.body.innerHTML = null;\n    });\n    it('removes all references to Forms, Inputs and State', () => {\n      proclaim.isInstanceOf(form, Forms);\n      form.destroy();\n      proclaim.isNull(form.form);\n      proclaim.isNull(form.opts);\n      proclaim.isNull(form.formInputs);\n      proclaim.isNull(form.stateElements);\n    });\n    it('removes all event listeners', () => {\n      formSpy = sinon.spy(formEl, 'removeEventListener');\n      form.destroy();\n      proclaim.isTrue(formSpy.calledOnce);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/fixtures.js",
      "contents": "export default `\n<form action=\"\" data-o-component=\"o-forms\">\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t\t\t<input id=\"date1\" type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t\t\t<input id=\"date2\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t</span>\n\t</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"text\" type=\"text\" name=\"required\" value=\"\" required>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\">\n\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\" checked>\n\t\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</span>\n\t</div>\n\n\t<input class=\"o-buttons\" type=\"submit\">\n</form>\n`;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/input.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport formFixture from \"./helpers/fixtures\";\nimport Input from \"../dist/js/input\";\ndescribe('Input', () => {\n  let form;\n  let dispatch;\n  let parentClass;\n  beforeEach(() => {\n    dispatch = (event, element) => element.dispatchEvent(new Event(event));\n\n    parentClass = (element, validity) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${validity}`);\n  });\n  it('validation ignores an input that is not required or invalid', () => {\n    document.body.innerHTML = formFixture;\n    form = document.forms[0];\n    let optionalField = form.elements['optional'];\n    new Input(optionalField);\n    proclaim.isFalse(parentClass(optionalField, 'invalid'));\n    proclaim.isFalse(parentClass(optionalField, 'valid'));\n  });\n  context('validates required fields', () => {\n    let requiredField;\n    beforeEach(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      requiredField = form.elements['required'];\n      new Input(requiredField);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`blur` event sets the field to invalid if required input is left empty', () => {\n      dispatch('blur', requiredField);\n      proclaim.isTrue(parentClass(requiredField, 'invalid'));\n    });\n    it('`input` event updates validity when input is given (if previously invalid)', () => {\n      dispatch('blur', requiredField);\n      proclaim.isTrue(parentClass(requiredField, 'invalid'));\n      requiredField.value = \"some text\";\n      dispatch('input', requiredField);\n      proclaim.isFalse(parentClass(requiredField, 'invalid'));\n      proclaim.isTrue(parentClass(requiredField, 'valid'));\n    });\n  });\n  context('validates pattern-matching fields', () => {\n    let dateField;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      dateField = form.elements['date'][0];\n      new Input(dateField);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`blur` event sets the field to invalid if input does not match pattern', () => {\n      dateField.value = \"tenth\";\n      dispatch('blur', dateField);\n      proclaim.isTrue(parentClass(dateField, 'invalid'));\n    });\n    it('`input` event updates validity when format is corrected (if previously invalid)', () => {\n      dateField.value = 'tenth';\n      dispatch('blur', dateField);\n      proclaim.isTrue(parentClass(dateField, 'invalid'));\n      dateField.value = 10;\n      dispatch('input', dateField);\n      proclaim.isFalse(parentClass(dateField, 'invalid'));\n      proclaim.isTrue(parentClass(dateField, 'valid'));\n    });\n  });\n  context('.destroy()', () => {\n    let fieldSpy;\n    let input;\n    let requiredField;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      requiredField = form.elements['required'];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('removes all event listeners', () => {\n      input = new Input(requiredField);\n      fieldSpy = sinon.spy(requiredField, 'removeEventListener');\n      input.destroy();\n      proclaim.isTrue(fieldSpy.calledTwice);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/state.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport formFixture from \"./helpers/fixtures\";\nimport State from \"../dist/js/state\";\ndescribe('State', () => {\n  let form;\n  let state;\n  let nodeList;\n  context('new instance', () => {\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('initialises a state instance successfully', () => {\n      nodeList = form.elements['radioBox'];\n      state = new State(nodeList);\n      proclaim.isInstanceOf(state, State);\n    });\n    it('throws an error if input type is not `o-forms-input--radio-box`', () => {\n      let field = form.elements['optional'];\n      let message = 'State can only be applied to `radio` type inputs.';\n      proclaim.throws(() => new State(field), message);\n    });\n  });\n  context('.set()', () => {\n    let stateClass;\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      nodeList = form.elements['radioBox'];\n      state = new State(nodeList);\n\n      stateClass = state => nodeList[0].closest('.o-forms-input').classList.contains(`o-forms-input--${state}`);\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('`saving` state', () => {\n      state.set('saving');\n      proclaim.isTrue(stateClass('saving'));\n    });\n    it('`saved` state', () => {\n      state.set('saved');\n      proclaim.isFalse(stateClass('saving'));\n      proclaim.isTrue(stateClass('saved'));\n    });\n    it('`none` state', () => {\n      state.set('none');\n      proclaim.isFalse(stateClass('saving'));\n      proclaim.isFalse(stateClass('saved'));\n    });\n  });\n  context('opts', () => {\n    before(() => {\n      document.body.innerHTML = formFixture;\n      form = document.forms[0];\n      nodeList = form.elements['radioBox'];\n    });\n    after(() => {\n      document.body.innerHTML = null;\n    });\n    it('accepts an options object with iconOnly key', () => {\n      state = new State(nodeList, {\n        iconOnly: true\n      });\n      state.set('saving');\n      let icon = document.querySelector('.o-forms-input__state--icon-only');\n      proclaim.isNotNull(icon);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/forms.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport formFixture from './helpers/fixtures';\nimport Forms from './../main';\n\ndescribe('Forms', () => {\n\tlet formEl;\n\tlet parentClass;\n\tlet requiredTextField;\n\tlet dateFields;\n\n\tbefore(() => {\n\t\tparentClass = (element, modifier) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${modifier}`);\n\t});\n\n\tcontext('on `submit`', () => {\n\t\tlet submit;\n\t\tlet summary;\n\t\tlet formSpy;\n\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tformSpy = sinon.spy(formEl, 'addEventListener');\n\n\t\t\tdateFields = formEl.elements['date'];\n\t\t\trequiredTextField = formEl.elements['required'];\n\t\t\tsubmit = formEl.elements[formEl.elements.length - 1];\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`opts.useBrowserValidation = true` relays form validation to browser on all invalid form inputs', () => {\n\t\t\tnew Forms(formEl, { useBrowserValidation: true });\n\t\t\tsubmit.click();\n\n\t\t\tproclaim.isTrue(formSpy.withArgs('submit').notCalled);\n\t\t\tproclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n\t\t});\n\n\t\tit('`opts.useBrowserValidation = false` manually validates form inputs', () => {\n\t\t\tnew Forms(formEl);\n\t\t\tsubmit.click();\n\n\t\t\tproclaim.isTrue(formSpy.withArgs('submit').calledOnce);\n\t\t\tproclaim.isTrue(parentClass(dateFields[0], 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredTextField, 'invalid'));\n\t\t});\n\n\t\tcontext('`opts.errorSummary = true`', () => {\n\t\t\tlet listItems;\n\t\t\tlet textInput;\n\n\t\t\tbeforeEach(() => {\n\t\t\t\tnew Forms(formEl);\n\t\t\t});\n\n\t\t\tit('creates new summary when inputs are invalid', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tproclaim.isNotNull(summary);\n\t\t\t});\n\n\t\t\tit('the summary reflects the number of invalid inputs', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 4);\n\t\t\t});\n\n\t\t\tit('the summary gets updated on second submit if a form field has been amended', () => {\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 4);\n\n\t\t\t\ttextInput = formEl.elements['text'];\n\t\t\t\ttextInput.value = 'something';\n\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tlistItems = summary.querySelectorAll('a');\n\t\t\t\tproclaim.equal(listItems.length, 3);\n\t\t\t});\n\t\t});\n\n\t\tcontext('`opts.errorSummary = false`', () => {\n\t\t\tit('does not create a new summary when inputs are invalid ', () => {\n\t\t\t\tnew Forms(formEl, { errorSummary: false });\n\t\t\t\tsubmit.click();\n\t\t\t\tsummary = formEl.querySelector('.o-forms__error-summary');\n\t\t\t\tproclaim.isNull(summary);\n\t\t\t});\n\t\t});\n\t});\n\n\tcontext('.setState()', () => {\n\t\tlet form;\n\t\tlet name;\n\t\tlet radioInputs;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tname = 'radioBox';\n\t\t\tradioInputs = formEl.elements[name];\n\n\t\t\tform = new Forms(formEl);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`saving` to named input', () => {\n\t\t\tform.setState('saving', name);\n\t\t\tproclaim.isTrue(parentClass(radioInputs[0], 'saving'));\n\t\t});\n\n\t\tit('`saved` to named input', () => {\n\t\t\tform.setState('saved', name);\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n\t\t\tproclaim.isTrue(parentClass(radioInputs[0], 'saved'));\n\t\t});\n\n\t\tit('`none` to named input', () => {\n\t\t\tform.setState('none', name);\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saving'));\n\t\t\tproclaim.isFalse(parentClass(radioInputs[0], 'saved'));\n\t\t});\n\t});\n\n\tcontext('.destroy()', () => {\n\t\tlet form;\n\t\tlet formSpy;\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tformEl = document.forms[0];\n\t\t\tform = new Forms(formEl);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('removes all references to Forms, Inputs and State', () => {\n\t\t\tproclaim.isInstanceOf(form, Forms);\n\n\t\t\tform.destroy();\n\t\t\tproclaim.isNull(form.form);\n\t\t\tproclaim.isNull(form.opts);\n\t\t\tproclaim.isNull(form.formInputs);\n\t\t\tproclaim.isNull(form.stateElements);\n\t\t});\n\n\t\tit('removes all event listeners', () => {\n\t\t\tformSpy = sinon.spy(formEl, 'removeEventListener');\n\n\t\t\tform.destroy();\n\n\t\t\tproclaim.isTrue(formSpy.calledOnce);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/fixtures.js",
      "contents": "export default `\n<form action=\"\" data-o-component=\"o-forms\">\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Date input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--date\">\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">DD</span>\n\t\t\t\t<input id=\"date\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{2}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">MM</span>\n\t\t\t\t<input id=\"date1\" type=\"text\" name=\"date\" value=\"\" pattern=\"0?[1-9]|1[012]\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">YYYY</span>\n\t\t\t\t<input id=\"date2\" type=\"text\" name=\"date\" value=\"\" pattern=\"[0-9]{4}\" aria-label=\"\" required>\n\t\t\t</label>\n\t\t</span>\n\t</div>\n\n\t<label class=\"o-forms-field\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Required text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input id=\"text\" type=\"text\" name=\"required\" value=\"\" required>\n\t\t</span>\n\t</label>\n\n\t<label class=\"o-forms-field o-forms-field--optional\">\n\t\t<span class=\"o-forms-title\">\n\t\t\t<span class=\"o-forms-title__main\">Optional text input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--text\">\n\t\t\t<input type=\"text\" name=\"optional\" value=\"\">\n\t\t</span>\n\t</label>\n\n\t<div class=\"o-forms-field\" role=\"group\" aria-labelledby=\"date-group-title\">\n\t\t<span class=\"o-forms-title\" aria-hidden=\"true\">\n\t\t\t<span class=\"o-forms-title__main\" id=\"date-group-title\">Radio box input</span>\n\t\t</span>\n\n\t\t<span class=\"o-forms-input o-forms-input--radio-box\">\n\t\t\t<div class=\"o-forms-input--radio-box__container\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\">\n\t\t\t\t\t<span class=\"o-forms-input__label\" aria-hidden=\"true\">Yes</span>\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"radio\" name=\"radioBox\" checked>\n\t\t\t\t\t<span class=\"o-forms-input__label o-forms-input__label--negative\" aria-hidden=\"true\">No</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</span>\n\t</div>\n\n\t<input class=\"o-buttons\" type=\"submit\">\n</form>\n`;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/input.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport formFixture from './helpers/fixtures';\nimport Input from '../src/js/input';\n\ndescribe('Input', () => {\n\tlet form;\n\tlet dispatch;\n\tlet parentClass;\n\n\tbeforeEach(() => {\n\t\tdispatch = (event, element) => element.dispatchEvent(new Event(event));\n\t\tparentClass = (element, validity) => element.closest('.o-forms-input').classList.contains(`o-forms-input--${validity}`);\n\t});\n\n\tit('validation ignores an input that is not required or invalid', () => {\n\t\tdocument.body.innerHTML = formFixture;\n\t\tform = document.forms[0];\n\t\tlet optionalField = form.elements['optional'];\n\t\tnew Input(optionalField);\n\n\t\tproclaim.isFalse(parentClass(optionalField, 'invalid'));\n\t\tproclaim.isFalse(parentClass(optionalField, 'valid'));\n\t});\n\n\tcontext('validates required fields', () => {\n\t\tlet requiredField;\n\n\t\tbeforeEach(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\trequiredField = form.elements['required'];\n\t\t\tnew Input(requiredField);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`blur` event sets the field to invalid if required input is left empty', () => {\n\t\t\tdispatch('blur', requiredField);\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'invalid'));\n\t\t});\n\n\t\tit('`input` event updates validity when input is given (if previously invalid)', () => {\n\t\t\tdispatch('blur', requiredField);\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'invalid'));\n\n\t\t\trequiredField.value = \"some text\";\n\t\t\tdispatch('input', requiredField);\n\n\t\t\tproclaim.isFalse(parentClass(requiredField, 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(requiredField, 'valid'));\n\t\t});\n\t});\n\n\tcontext('validates pattern-matching fields', () => {\n\t\tlet dateField;\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tdateField = form.elements['date'][0];\n\t\t\tnew Input(dateField);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`blur` event sets the field to invalid if input does not match pattern', () => {\n\t\t\tdateField.value = \"tenth\";\n\t\t\tdispatch('blur', dateField);\n\n\t\t\tproclaim.isTrue(parentClass(dateField, 'invalid'));\n\t\t});\n\n\t\tit('`input` event updates validity when format is corrected (if previously invalid)', () => {\n\t\t\tdateField.value = 'tenth';\n\t\t\tdispatch('blur', dateField);\n\t\t\tproclaim.isTrue(parentClass(dateField, 'invalid'));\n\n\t\t\tdateField.value = 10;\n\t\t\tdispatch('input', dateField);\n\n\t\t\tproclaim.isFalse(parentClass(dateField, 'invalid'));\n\t\t\tproclaim.isTrue(parentClass(dateField, 'valid'));\n\t\t});\n\t});\n\n\tcontext('.destroy()', () => {\n\t\tlet fieldSpy;\n\t\tlet input;\n\t\tlet requiredField;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\trequiredField = form.elements['required'];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('removes all event listeners', () => {\n\t\t\tinput = new Input(requiredField);\n\t\t\tfieldSpy = sinon.spy(requiredField, 'removeEventListener');\n\t\t\tinput.destroy();\n\n\t\t\tproclaim.isTrue(fieldSpy.calledTwice);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/state.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\nimport formFixture from './helpers/fixtures';\nimport State from '../src/js/state';\n\ndescribe('State', () => {\n\tlet form;\n\tlet state;\n\tlet nodeList;\n\n\tcontext('new instance', () => {\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('initialises a state instance successfully', () => {\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t\tstate = new State(nodeList);\n\n\t\t\tproclaim.isInstanceOf(state, State);\n\t\t});\n\n\t\tit('throws an error if input type is not `o-forms-input--radio-box`', () => {\n\t\t\tlet field = form.elements['optional'];\n\n\t\t\tlet message = 'State can only be applied to `radio` type inputs.';\n\t\t\tproclaim.throws(() => new State(field), message);\n\t\t});\n\t});\n\n\tcontext('.set()', () => {\n\t\tlet stateClass;\n\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t\tstate = new State(nodeList);\n\t\t\tstateClass = (state) => nodeList[0].closest('.o-forms-input').classList.contains(`o-forms-input--${state}`);\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('`saving` state', () => {\n\t\t\tstate.set('saving');\n\t\t\tproclaim.isTrue(stateClass('saving'));\n\t\t});\n\n\t\tit('`saved` state', () => {\n\t\t\tstate.set('saved');\n\t\t\tproclaim.isFalse(stateClass('saving'));\n\t\t\tproclaim.isTrue(stateClass('saved'));\n\t\t});\n\n\t\tit('`none` state', () => {\n\t\t\tstate.set('none');\n\t\t\tproclaim.isFalse(stateClass('saving'));\n\t\t\tproclaim.isFalse(stateClass('saved'));\n\t\t});\n\t});\n\n\tcontext('opts', () => {\n\t\tbefore(() => {\n\t\t\tdocument.body.innerHTML = formFixture;\n\t\t\tform = document.forms[0];\n\t\t\tnodeList = form.elements['radioBox'];\n\t\t});\n\n\t\tafter(() => {\n\t\t\tdocument.body.innerHTML = null;\n\t\t});\n\n\t\tit('accepts an options object with iconOnly key', () => {\n\t\t\tstate = new State(nodeList, { iconOnly: true });\n\t\t\tstate.set('saving');\n\t\t\tlet icon = document.querySelector('.o-forms-input__state--icon-only');\n\t\t\tproclaim.isNotNull(icon);\n\t\t});\n\t});\n});\n"
    }
  ]
}

exports['occ o-table-7.0.0 o-table-7.0.0 without CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".gitignore\nbuild\ntest\nkarma.conf.js\npackage.json.idea/\n.jshintrc\n.sass-cache/\nbower_components/\nbuild/\ndemos/local/\nnode_modules/\n.editorconfig\n.DS_Store\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-table \nStyling for tables.\n\n- [Usage](#usage)\n\t- [Markup](#markup)\n\t- [Sass](#sass)\n\t- [JavaScript](#javascript)\n- [Troubleshooting](#troubleshooting)\n- [Migration guide](#migration-guide)\n- [Contact](#contact)\n- [Licence](#licence)\n\n## Usage\n\n### Markup\n\n#### Basic table\n\nAdd an `o-table` class to any table you wish to apply the styles to:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t...\n</table>\n```\n\nWhere table headings (`th`) are used as row headings, `scope=\"row\"` attributes must be set on the `th`:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th scope=\"row\" role=\"rowheader\">Item</th>\n\t\t\t<td>Holiday</td>\n\t\t\t<td>Lunch</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th scope=\"row\" role=\"rowheader\">Cost</th>\n\t\t\t<td>£123.45</td>\n\t\t\t<td>£7</td>\n\t\t</tr>\n\t</tbody>\n\t...\n</table>\n```\n\nThe table's `caption` element should include a header of the appropriate level and style for the table's context.\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<caption class=\"o-table__caption\">\n\t\t<h2>My Table Caption</h2>\n\t</caption>\n\t<thead>\n\t\t...\n\t</thead>\n\t<tbody>\n\t\t...\n\t</tbody>\n\t...\n</table>\n```\n\nThe table's footer `tfoot` element may use the helper class `o-table-footnote` to display sources, disclaimers, etc.\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=2 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n\t<thead>\n\t\t...\n\t</thead>\n\t<tbody>\n\t\t...\n\t</tbody>\n\t...\n</table>\n```\n\n#### Disable sort\n\nTable columns are sortable by default but may be disabled by adding `data-o-table-sortable=\"false\"` to the table.\n```html\n<table class=\"o-table\" data-o-component=\"o-table\" data-o-table-sortable=\"false\">\n</table>\n```\n\nOr to disable sort per table column, add `data-o-table-heading-disable-sort` to the column's `th` element.\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Heading One</th>\n\t\t\t<!-- do not show the actions column as sortable -->\n\t\t\t<th data-o-table-heading-disable-sort>Actions</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Item One</td>\n\t\t\t<td><a href=\"#edit\">edit</a></td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n#### Responsive options\n\nThere are three options for small viewports where the table does not fit.\n\n1. [overflow](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-overflow) - Scroll the whole table including headings horizontally. This option also supports an [expander](#expander).\n2. [scroll](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-scroll) - Flip the table so headings are in the first column and sticky, data is scrollable horizontally.\n3. [flat](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-flat) - Split each row into an individual item and repeat headings.\n\nTo enable these set `data-o-table-responsive` to the type of responsive table desired and add the classes for that type of table. Then wrap the table in `o-table-container`, `o-table-overlay-wrapper`, `o-table-scroll-wrapper`. E.g for an \"overflow\" table:\n\n```html\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow o-table--responsive-flat\" data-o-component=\"o-table\" data-o-table-responsive=\"overflow\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n```\n\nMore examples are available in [the registry](https://registry.origami.ft.com/components/o-table).\n\n#### Expander\n\nThe \"overflow\" style of responsive table ([see above](#responsive-options)) supports an expander to hide rows and offer a \"show more\" / \"show fewer\" button. To enable this feature set `data-o-table-expanded=\"false\"` to the table. The number of rows to show when the table is not expanded can be configured with `data-o-table-minimum-row-count=\"20\"` _(default: 20)_.\n\n```html\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll--wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow o-table--responsive-flat\"\n\t\t\tdata-o-component=\"o-table\"\n\t\t\tdata-o-table-responsive=\"overflow\"\n\t\t\tdata-o-table-expanded=\"false\"\n\t\t\tdata-o-table-minimum-row-count=\"10\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n```\n\nTo add a footnote to an expandable table, for example with disclaimers or sources, add the footnote within the container and link to the table with an id and the `aria-describedby` attribute. If not working on an expandable table, [use the `tfoot` element instead](#basic-table).\n```diff\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll--wrapper\">\n+\t\t\t<table aria-describedby=\"demo-footnote\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n+\t<div id=\"demo-footnode\" class=\"o-table-footnote\">\n+\t\tSource: The Origami team's love of fruit.\n+\t</div>\n</div>\n```\n\n#### Additional markup\n- `o-table--compact` - Apply to the table for smaller typography and padding.\n- `o-table--row-stripes` - Apply to the table for alternating stripes on the table rows.\n- `o-table-footnote` - Style a `tfoot` element subtily for sources, disclaimers, etc.\n- `o-table__cell--numeric` - Apply to numeric cells to align content to the right.\n- `o-table__cell--vertically-center` - Apply to cells which should center vertically.\n\nSee more in the registry: [o-table demos](https://registry.origami.ft.com/components/o-table).\n\n### Sass\n\n#### Silent mode\n\nIf using `o-table` in silent mode, `@include oTable()` includes styles for all features. Alternatively styles may be included granularly with an `$opts` map.\n\nInclude all table features:\n```scss\n@include oTable();\n```\n\nAlternatively include base styles with only selected optional features. E.g. to include only the \"overflow\" responsive table and styles for table lines:\n```scss\n@include oTable($opts: (\n\t'responsive-overflow',\n\t'lines'\n));\n```\n\n| Feature             | Description                                             | Brand support                |\n|---------------------|---------------------------------------------------------|------------------------------|\n| responsive-overflow | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| responsive-flat     | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| responsive-scroll   | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| lines               | Styles for horizontal and vertical lines, plus borders. | master, internal, whitelabel |\n| compact             | A table with smaller typography and padding.            | master, internal, whitelabel |\n| stripes             | Alternating row stripe styles.                          | master, internal             |\n| row-headings        | Row heading styles.                                     | internal                     |\n\n### JavaScript\n\nTo manually instantiate `o-table`:\n\n``` js\nconst OTable = require('o-table');\nOTable.init();\n```\nor\n``` js\nconst OTable = require('o-table');\noTable = new OTable(document.body);\n```\n\nThis will return an instance of `BasicTable` (default), `OverflowTable`, `FlatTable`, or `ScrollTable` depending on the value of `data-o-table-responsive`. All four table types extend `BaseTable`.\n\nInstantiation will add column sorting to all tables. It will also add scroll controls and, if configured, an [expander](#expander) to any `OverflowTable`. These can be configured with [data attributes](#disable-sort) or imperatively with an options object:\n\n``` js\nconst OTable = require('o-table');\nOTable.init(document.body, {\n\tsortable: true,\n\texpanded: true,\n\tminimumRowCount: 10,\n});\n```\n\n#### Sorting\n\nAll `o-table` instances support sorting. Sorting on non-string values such as numbers works if the column type has been declared. E.g. for a column of numbers add the following to `o-table`:\n`data-o-table-data-type=\"number\"`.\n\nOther data types for `data-o-table-data-type` include:\n\n| type     | description                                                                                   | examples                                   |\n|----------|-----------------------------------------------------------------------------------------------|--------------------------------------------|\n| text     | The default, content is sorted as a stirng.                                                   | \"Jane Doe\", \"John Smith\"                   |\n| date     | Supports the FT style of date and time, including abbreviation.                               | \"Aug 17\", \"1.30am\", \"April 20 2014 1.30pm\" |\n| number   | Any number which may include number formatting and abbreviation.                              | \"1,200\", \"100\", \"3.2\", \"1bn\", \"2tn\"        |\n| percent  | Any percentage with or without the symbol \"%\".                                                | \"3.3%\", \"200%\", \"50%\"                      |\n| currency | Any currency, which may include number formatting, number abbreviation, and currency symbols. | \"$84m\", \"£36bn\", \"HK$90bn\", \"Rp14.595\"     |\n| numeric  | A column which may be treated as numeric which does not fit a more specific type.             | \"101 dalmatians\"                           |\n\nIt is possible to add sort support for a custom data type. Alternatively, the behaviour of an existing type may be modified.\n\n##### Custom sort (declarative)\n\nIf you are wanting to sort by a custom pattern, you can apply the sorting values to each row as a data attribute:\n`data-o-table-sort-value=${sort-value}`. These values can be strings or integers.\n\nFor example to support a custom date format set `data-o-table-sort-value` to its UNIX Epoch.\n\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"date\">Custom Date Formats</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"1533081600\">Wednesday, 1 August 2018</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"1483228800\">Jan 2017</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"723168000\">1st December 1992</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\nOr to provide an arbitrary sort order:\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Things</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>snowman</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=3>42</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>pangea</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n##### Custom sort (imperative)\n\nRather than specify `data-o-table-sort-value` [declaratively](#custom-sort-declarative), a formatter function may be provided client-side to generate sort values for a given data type.\n\nFor example we could add support for a custom data type `emoji-time`.\n\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"emoji-time\">Emoji Time</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌤️️</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌤️️</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\nTo do that call `setSortFormatterForType` with the custom data type and a formatter function.\nThe formatter accepts the table cell (HTMLElement) and returns a sort value (Number or String) for that cell.\nIn this case we add support for our custom type `emoji-time` by assigning the emoji a numerical sort value. This will effect all tables instantiated by `OTable`.\n\n``` js\nconst OTable = require('o-table');\n// Set a filter for custom data type \"emoji-time\".\n// The return value may be a string or number.\nOTable.setSortFormatterForType('emoji-time', (cell) => {\n\tconst text = cell.textContent.trim();\n\tif (text === '🌑') {\n\t\treturn 1;\n\t}\n\tif (text === '🌤️️') {\n\t\treturn 2;\n\t}\n\treturn 0;\n});\nOTable.init();\n```\n\nWhich for an ascending sort, will result in:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"emoji-time\" aria-sort=\"ascending\">Emoji Time</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>🌤️️</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>🌤️️</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n#### Events\n\nThe following events are fired by `o-table`.\n\n- `oTable.ready`\n- `oTable.sorting`\n- `oTable.sorted`\n\n##### oTable.ready\n\n`oTable.ready` fires when the table has been initialised.\n\nThe event provides the following properties:\n- `detail.instance` - The initialised `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\n##### oTable.sorted\n\n`oTable.sorted` indicates a table has finished sorting. It includes details of the current sort status of the table.\n\nThe event provides the following properties:\n- `detail.sortOrder` - The sort order e.g. \"ascending\" _(String)_.\n- `detail.columnIndex` - The index of the sorted column heading _(Number)_.\n- `detail.instance` - The effected `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\n```js\ndocument.addEventListener('oTable.sorted', (event) => {\n\tconsole.log(`The target table was just sorted by column \"${event.detail.columnIndex}\" in an \"${event.detail.sortOrder}\" order.`);\n});\n```\n\n##### oTable.sorting\n\nThis event is fired just before a table sorts based on user interaction. It may be prevented to implement custom sort functionality. This may be useful to sort a paginated table server-side.\n\nThe event provides the following properties:\n- `detail.sortOrder` - The sort requested e.g. \"ascending\" _(String)_.\n- `detail.columnIndex` - The index of the column heading which will be sorted _(Number)_.\n- `detail.instance` - The effected `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\nWhen intercepting the default sort the `sorted` method must be called with relevant parameters when the custom sort is completed.\n\n```js\ndocument.addEventListener('oTable.sorting', (event) => {\n\t// Prevent default sorting.\n\tevent.preventDefault();\n\t// Update the table with a custom sort.\n\tconsole.log(`Update the table with sorted data here.`);\n\t// Fire the sorted event, passing along the column index and sort.\n\tevent.detail.instance.sorted(event.detail.columnIndex, event.detail.sort);\n});\n```\n\n##### Get The Sorted Column Heading From A Sort Event\n\n`o-table` sort events provide a `columnIndex`. This index maps to a column heading. To retrieve the column heading use `getTableHeader`.\n\n```js\ndocument.addEventListener('oTable.sorting', (event) => {\n\tconst table = event.detail.instance;\n\tconst columnIndex = event.detail.columnIndex;\n\t// Get the table header from the column index.\n\tconsole.log(table.getTableHeader(columnIndex));\n});\n```\n\n## Troubleshooting\n\nKnown issues:\n* IE11 and below need the [polyfill service](https://polyfill.io/)\n\n## Migration guide\n\n### How to upgrade from v5.x.x to v6.x.x?\n- To prevent errors in IE11, add support for `IntersectionObserverEntry` and `IntersectionObserver` with the [polyfill service](https://polyfill.io/).\n- Data attribute `data-o-table-order` has been removed. To specify a custom sort order on `td` cells use `data-o-table-sort-value` instead.\n- Markup updates:\n\t- Previous `o-table` demos omitted `thead` and `tbody` from `table`, including their child `tr` element. Ensure your table markup is correct and includes `thead` and `tbody`.\n\t- `o-table__caption--top` and `o-table__caption--bottom` have been removed. Remove these classes and add a heading within the caption (e.g. a `<h2>`) with appropriate styling.\n\t- `o-table-wrapper` is now `o-table-scroll-wrapper`\n\t- Responsive tables are now wrapped in a container div `o-table-container` and overlay div `o-table-overlay-wrapper`.\n\t- Responsive tables should now have their type specified via a data attribute e.g. `data-o-table-responsive=\"overflow\"`.\n```diff\n+<div class=\"o-table-container\">\n+    <div class=\"o-table-overlay-wrapper\">\n+     \t<div class=\"o-table-scroll-wrapper\">\n-    \t<div class=\"o-table-wrapper\">\n-        \t<table data-o-component=\"o-table\" class=\"o-table--responsive-overflow\">\n+        \t<table data-o-component=\"o-table\" class=\"o-table--responsive-overflow\" data-o-table-responsive=\"overflow\">\n-            \t<caption class=\"o-table__caption o-table__caption--bottom\">\n+            \t<caption class=\"o-table__caption\">\n-                \tMy Table Caption\n+                \t<h2>My Table Caption</h2>\n             \t</caption>\n             \t<!-- thead, tbody -->\n        \t</table>\n    \t</div>\n+   </div>\n+</div>\n```\n- Style updates:\n\t- The default bottom margin of `o-table` has been removed. Please apply the margin as needed, depending on the context of the table e.g. within typical body copy:\n\t```scss\n\t\t.o-table {\n\t\t\tmargin-bottom: oTypographySpacingSize($units: 4);\n\t\t}\n\t```\n- Mixin updates:\n\t- All `o-table` mixins have been made private except for a new mixin `@include oTable($opts)`. It accepts an feature list `$opts` to include `o-table` styles granularly. Replace previous mixins with one call to the [`oTable` mixin with an optional `$opts` flag](#silent-mode). Please [contact us](#contact) if this does not suit your product.\n\t- `oTableAll` has been replaced with `oTable`, which does not accept a class name `$classname`. Instead use the default `o-table` class name in your markup. As the mixin now output classes directly, they must not be wrapped in an `.o-table` class manually.\n```diff\n-.o-table {\n-    @include oTableBase;\n-    @include oTableResponsiveFlat;\n-}\n-.o-table-wrapper {\n-    @include oTableWrapper;\n-}\n-.o-table-container {\n-    @include oTableContainer;\n-}\n\n+ @include oTable($opts: ('responsive-flat'));\n```\n- JS updates:\n\t- `OTable` returns an instance of `BasicTable`, `FlatTable`, `ScrollTable`, `OverflowTable` on construction, according to the type of table. All extend from `BaseTable`.\n\t- Table properties removed or made private: `isResponsive`, `listeners`.\n\t- Table methods removed or made private:\n\t\t- `wrap`: for a responsive table manually wrap the table in a container and wrapper class.\n\t\t```html\n\t\t<div class=\"o-table-container\">\n\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t<!-- table -->\n\t\t\t</div>\n\t\t</div>\n\t\t```\n\t\t- `sortRowsByColumn`: arguments are simplified `sortRowsByColumn(columnIndex, sortOrder)` over `sortRowsByColumn(index, sortAscending, isNumericValue, type)`, where `columnIndex` replaces `index` and `sortOrder` is \"ascending\" or \"descending\".\n\t\t- `removeEventListeners`\n\t\t- `dispatch`\n- Events:\n\t- Event detail `detail.oTable` is now `detail.instance`.\n\t- Event detail `detail.sort` is now `detail.sortOrder`, the value is now \"ascending\" rather than \"ASC\", and \"descending\" rather than \"DES\".\n\t- The `oTable.sorting` event target is no longer the `th` of the column being sorted. To find the sorted column use [the event detail](#get-the-sorted-column-heading-from-a-sort-event) instead.\n- Colour:\n\t- All [deprecated colour usecases](https://github.com/Financial-Times/o-table/blob/533811d7f8673a7576a31608df8cd71777ff39d5/src/scss/_deprecated.scss) have been removed, ensure `o-table` colours are not used in your project.\n\n\n### How to upgrade from v4.x.x to v5.x.x?\n\nThis major takes the new o-colors and o-typography. Some of the colors and typography have changed slightly from v4 to v5. The font size and line heights of the table data has increased to sit in line with the new typography scale. Some of the colors have changed as there isn't an exact mapping from one color to the other in o-colors.\n\nThe `oTableCellContentPrimary` mixin (deprecated in v5) has been removed.\nThe concrete classes `.primary-data` and `.secondary-data` (deprecated in v5) have been removed.\n\n### How to upgrade from v3.x.x to v4.x.x?\n\n#### Important Changes\n\n- In order to have sorting work correctly, tables need `thead` and `tbody` elements\n- The Javascript module now returns an o-table constructor\n\n#### Markup changes\n\n- Wrap the headings in `thead`\n- Add `data-o-component=\"o-table\"` to the `table` element of any o-table components which require JS.\n\n---\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-table/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n----\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "app.json",
      "contents": "{\n  \"name\": \"o-table\",\n  \"scripts\": {},\n  \"env\": {},\n  \"formation\": {},\n  \"addons\": [],\n  \"buildpacks\": [{\n      \"url\": \"heroku/nodejs\"\n    }]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n  \"name\": \"o-table\",\n  \"dependencies\": {\n    \"o-colors\": \"^4.0.0\",\n    \"o-grid\": \"^4.0.6\",\n    \"o-icons\": \">=4.0.0 <6\",\n    \"o-typography\": \"^5.0.0\",\n    \"o-brand\": \"^3.1.1\",\n    \"o-visual-effects\": \"^2.0.3\",\n    \"o-buttons\": \"^5.14.0\",\n    \"dom-delegate\": \"ftdomdelegate#^2.2.0\"\n  },\n  \"main\": [\n    \"main.scss\",\n    \"main.js\"\n  ],\n  \"ignore\": [\n    \".gitignore\",\n    \"build\",\n    \"test\",\n    \"karma.conf.js\",\n    \"package.json\"\n  ]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "browser.js",
      "contents": "/*global require, module*/\nimport oTable from \"./dist/js/oTable\";\n\nvar constructAll = function constructAll() {\n  oTable.init();\n  document.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\nexport default oTable;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/base.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table aria-describedby=\"demo-footnote\" class=\"o-table o-table--horizontal-lines {{modifierClass}} {{#tableType}}o-table--responsive-{{tableType}}{{/tableType}}\" data-o-component=\"o-table\" {{#tableType}}data-o-table-responsive=\"{{tableType}}\"{{/tableType}}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div id=\"demo-footnote\" class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/basic.mustache",
      "contents": "<table class=\"o-table {{^isStriped}}o-table--horizontal-lines{{/isStriped}} {{modifierClass}}\" data-o-component=\"o-table\">\n    {{#showCaption}}\n        <caption class=\"o-table__caption\">\n            <h2 class=\"o-typography-heading-level-2\">Table Caption</h2>\n        </caption>\n    {{/showCaption}}\n    {{#showFooter}}\n        <tfoot>\n            <tr>\n                <td colspan=5 class=\"o-table-footnote\">\n                    Source: The Origami team's love of fruit.\n                </td>\n            </tr>\n        </tfoot>\n    {{/showFooter}}\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/cell-styles.mustache",
      "contents": "<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Report date</th>\n\t\t\t<th data-o-table-heading-disable-sort>Action</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">Vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">Another vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">A third vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "/*global require*/\n\n(function() {\n\trequire('./../../main');\n}());\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-table-is-silent: false;\n@import \"./../../main\";\n\n// Default font and styles\nhtml {\n\tfont-family: BentonSans, sans-serif;\n\tbackground: oColorsGetColorFor('page', 'background');\n}\n\n.o-table-demo-constrain {\n\tmax-width: 600px;\n}\n\n.o-table-demo-pad {\n\tpadding-bottom: 1000px;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/expanding.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow\"  data-o-component=\"o-table\" data-o-table-responsive=\"overflow\" data-o-table-minimum-row-count=\"10\" data-o-table-expanded=\"{{expanded}}\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table aria-describedby=\"demo-footnote\" class=\"o-table o-table--horizontal-lines o-table--responsive-overflow\" data-o-component=\"o-table\" data-o-table-responsive=\"overflow\" data-o-table-minimum-row-count=\"2\" data-o-table-expanded=\"false\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div id=\"demo-footnote\" class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n\n\n<table class=\"o-table o-table--compact o-table--row-stripes\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n\n<table class=\"o-table o-table--row-stripes\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n\n<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/row-headings.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-scroll-wrapper\">\n\t\t<table class=\"o-table o-table--row-headings o-table--vertical-lines\" data-o-component=\"o-table\">\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" role=\"rowheader\">Item</th>\n\t\t\t\t<td>Holiday</td>\n\t\t\t\t<td>Lunch</td>\n\t\t\t\t<td>Coffee</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" role=\"rowheader\">Cost</th>\n\t\t\t\t<td>£123.45</td>\n\t\t\t\t<td>£7</td>\n\t\t\t\t<td>£2.34</td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/sorting.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-scroll-wrapper\">\n\t\t<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Links</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Date</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Abbreviated&nbsp;Date</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Date&nbsp;&amp;&nbsp;Time</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Time</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Formatted&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Abbreviated&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Ranged&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"currency\">Ranged&nbsp;currency</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"currency\">Abbreviated&nbsp;currency</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"percent\">Percentage</th>\n\t\t\t\t\t<!-- do not show the actions column as sortable -->\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-heading-disable-sort>Actions</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Pitaya\">Dragonfruit <i class=\"list-view__icon o-icons-icon o-icons-icon--tick\"></i></a></td>\n\t\t\t\t\t<td>August 17 2018</td>\n\t\t\t\t\t<td>Aug 17</td>\n\t\t\t\t\t<td>Aug 17 9pm</td>\n\t\t\t\t\t<td>1.30am</td>\n\t\t\t\t\t<td>138,000</td>\n\t\t\t\t\t<td>84m</td>\n\t\t\t\t\t<td>5m&ndash;10m</td>\n\t\t\t\t\t<td>$84m&ndash;$86m</td>\n\t\t\t\t\t<td>$84m</td>\n\t\t\t\t\t<td>30%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Durian\">Durian*</a></td>\n\t\t\t\t\t<td>August 02 2012</td>\n\t\t\t\t\t<td>Aug 7</td>\n\t\t\t\t\t<td>Aug 17 10am</td>\n\t\t\t\t\t<td>1.30pm</td>\n\t\t\t\t\t<td>1,439,165.43**</td>\n\t\t\t\t\t<td>36bn</td>\n\t\t\t\t\t<td>5bn&ndash;8bn</td>\n\t\t\t\t\t<td>£36bn&ndash;£40bn</td>\n\t\t\t\t\t<td>£36bn</td>\n\t\t\t\t\t<td>50%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Manilkara_zapota\">Naseberry</a></td>\n\t\t\t\t\t<td>August 10 2012</td>\n\t\t\t\t\t<td>Dec 21</td>\n\t\t\t\t\t<td>February 12 4.05pm</td>\n\t\t\t\t\t<td>2.45pm</td>\n\t\t\t\t\t<td>1.28</td>\n\t\t\t\t\t<td>1.5bn</td>\n\t\t\t\t\t<td>8.6tn&ndash;12tn</td>\n\t\t\t\t\t<td>HK$74.9bn&ndash;HK$90bn</td>\n\t\t\t\t\t<td>HK$74.9bn</td>\n\t\t\t\t\t<td>15%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Gruy%C3%A8re_cheese\">Gruyère</a></td>\n\t\t\t\t\t<td>February 03 2018</td>\n\t\t\t\t\t<td>Feb 16</td>\n\t\t\t\t\t<td>February 12 4.20pm</td>\n\t\t\t\t\t<td>5.00am</td>\n\t\t\t\t\t<td>138,000.45</td>\n\t\t\t\t\t<td>8.27tn</td>\n\t\t\t\t\t<td>1.3&ndash;5</td>\n\t\t\t\t\t<td>Rp14.595&ndash;Rp20</td>\n\t\t\t\t\t<td>Rp14.595</td>\n\t\t\t\t\t<td>60%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Pitaya\">Dragonfruit <i class=\"list-view__icon o-icons-icon o-icons-icon--tick\"></i></a></td>\n\t\t\t\t\t<td>August 17 2018</td>\n\t\t\t\t\t<td>Aug 17</td>\n\t\t\t\t\t<td>Aug 17 9pm</td>\n\t\t\t\t\t<td>1.30am</td>\n\t\t\t\t\t<td>138,000</td>\n\t\t\t\t\t<td>84m</td>\n\t\t\t\t\t<td>5m&ndash;10m</td>\n\t\t\t\t\t<td>$84m&ndash;$86m</td>\n\t\t\t\t\t<td>$84m</td>\n\t\t\t\t\t<td>30%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Durian\">Durian*</a></td>\n\t\t\t\t\t<td>August 02 2012</td>\n\t\t\t\t\t<td>Aug 7</td>\n\t\t\t\t\t<td>Aug 17 10am</td>\n\t\t\t\t\t<td>1.30pm</td>\n\t\t\t\t\t<td>1,439,165.43**</td>\n\t\t\t\t\t<td>36bn</td>\n\t\t\t\t\t<td>5bn&ndash;8bn</td>\n\t\t\t\t\t<td>£36bn&ndash;£40bn</td>\n\t\t\t\t\t<td>£36bn</td>\n\t\t\t\t\t<td>50%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Manilkara_zapota\">Naseberry</a></td>\n\t\t\t\t\t<td>August 10 2012</td>\n\t\t\t\t\t<td>Dec 21</td>\n\t\t\t\t\t<td>February 12 4.05pm</td>\n\t\t\t\t\t<td>2.45pm</td>\n\t\t\t\t\t<td>1.28</td>\n\t\t\t\t\t<td>1.5bn</td>\n\t\t\t\t\t<td>8.6tn&ndash;12tn</td>\n\t\t\t\t\t<td>HK$74.9bn&ndash;HK$90bn</td>\n\t\t\t\t\t<td>HK$74.9bn</td>\n\t\t\t\t\t<td>15%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Gruy%C3%A8re_cheese\">Gruyère</a></td>\n\t\t\t\t\t<td>February 03 2018</td>\n\t\t\t\t\t<td>Feb 16</td>\n\t\t\t\t\t<td>February 12 4.20pm</td>\n\t\t\t\t\t<td>5.00am</td>\n\t\t\t\t\t<td>138,000.45</td>\n\t\t\t\t\t<td>8.27tn</td>\n\t\t\t\t\t<td>1.3&ndash;5</td>\n\t\t\t\t\t<td>Rp14.595&ndash;Rp20</td>\n\t\t\t\t\t<td>Rp14.595</td>\n\t\t\t\t\t<td>60%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t</table>\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort/CellFormatter.js",
      "contents": "/**\n * Extracts the contents of img alt text.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractAltFromImages('<img alt=\"text\">'); // text\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} the parameter\n */\nfunction extractAltFromImages(cell) {\n  var images = Array.from(cell.getElementsByTagName('img'));\n  images.forEach(image => {\n    var contents = image.getAttribute('alt');\n    image.insertAdjacentHTML('beforebegin', contents);\n    image.remove();\n  });\n  return cell;\n}\n/**\n * Returns the text represantation of an HTML node.\n * If a node contains no content `aria-label` or `title` attributes of <a>, <span>, or <i> child nodes are used.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractText('<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"mailto:example@ft.com\" title=\"Email Example at example@ft.com\"></a>'); //Email Example at example@ft.com\n * \textractText('<span class=\"o-icons-icon o-icons-icon--tick\">Correct</span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" title=\"Correct\"></span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"Correct\"></span>); //Correct\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} text representation of the HTML node\n */\n\n\nfunction extractText(cell) {\n  var text = cell.textContent.trim(); // No text found, check aria labels and titles.\n  // Useful for icon-only cells.\n\n  if (text === '') {\n    var nodes = cell.querySelectorAll('a, span, i');\n    text = Array.from(nodes).reduce((accumulator, node) => {\n      var nodeText = node.getAttribute('aria-label') || node.getAttribute('title');\n      return nodeText ? \"\".concat(accumulator, \" \").concat(nodeText) : accumulator;\n    }, '');\n  }\n\n  return text.trim();\n}\n/**\n * Returns the text with abbreviations expanded.\n * Supports million 'm', billion 'bn' (1,000 million), and trillion 'tn' (1,000 billion).\n * @example\n *  expandAbbreviations('1m') //1000000\n *  expandAbbreviations('1.2bn') //2200000000\n *  expandAbbreviations('1tn') //1000000000000\n *  expandAbbreviations('5m-10m') //5000000-10000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with any supported abbreviations expanded\n */\n\n\nfunction expandAbbreviations(text) {\n  text = text.replace(/([\\d,.]+)([a-zA-Z]+)/g, (match, digit, abbreviation) => {\n    var zeros = {\n      'm': 6,\n      'bn': 9,\n      'tn': 12\n    };\n    return \"\".concat(digit * Math.pow(10, zeros[abbreviation] || 0));\n  });\n  return text;\n}\n/**\n * Returns the text with digit group separators removed.\n * @example\n *  removeDigitGroupSeparator('1,000') //1000\n *  removeDigitGroupSeparator('40') //40\n *  removeDigitGroupSeparator('4,000,000') //4000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digit group separators (commas) removed.\n */\n\n\nfunction removeDigitGroupSeparators(text) {\n  return text.replace(/,/g, '');\n}\n/**\n * Returns the text with non-number characters removed (e.g. currency symbols).\n * Does not effect range characters e.g. \"–\" will be maintained.\n * If no digits were found to remove, returns the text unchanged.\n * @example\n *  extractDigitsIfFound('Rmb100') //100\n *  extractDigitsIfFound('CFA Fr830') //830\n *  extractDigitsIfFound('HK$12') //12\n *  extractDigitsIfFound('HK$12-HK$20') //12–20\n *  extractDigitsIfFound('1534956593-1534956620') //1534956593–1534956620\n *  extractDigitsIfFound('Some text') //Some text\n *  extractDigitsIfFound('Some text 123') //123\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digits characters only.\n */\n\n\nfunction extractDigitsIfFound(text) {\n  var digitsAndRange = text.replace(/([^\\d.,\\-\\–]+)/g, '');\n\n  if (digitsAndRange === '') {\n    return text;\n  }\n\n  return digitsAndRange;\n}\n/**\n * Returns a number from a range\n * @example\n *  removeRange('1534956593–1534956620') //1534956593\n *  removeRange('123–345') //123\n *  removeRange('123') //123\n *  removeRange('No numbers') //No numbers\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number}\n */\n\n\nfunction extractNumberFromRange(text) {\n  var number = parseFloat(text);\n  return isNaN(number) ? text : number;\n}\n/**\n * Parses FT style date and time and formats as a number for sorting.\n * FT date or date and time returns a UNIX epoch (UTC).\n * FT time returns a positive float for pm, negative for am.\n * @example\n *  ftDateTimeToNumber('August 17') //UNIX epoch, assumes current year\n *  ftDateTimeToNumber('September 12 2012') //UNIX epoch\n *  ftDateTimeToNumber('January 2012') //UNIX epoch, first of month\n *  ftDateTimeToNumber('March 12 2015 1am') //UNIX epoch including time\n *  ftDateTimeToNumber('April 20 2014 1.30pm') //UNIX epoch including time\n *  ftDateTimeToNumber('1am') //1\n *  ftDateTimeToNumber('1.30am') //1.3\n *  ftDateTimeToNumber('1.40pm') //13.4\n *  ftDateTimeToNumber('3pm') //15\n *  ftDateTimeToNumber('Not a known date') //Note a known date\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number} Number representation of date and/or time for sorting.\n */\n\n\nfunction ftDateTimeToNumber(text) {\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // FT style for writing dates: is June 23 2016 (no commas, month date year)\n\n  var date = text.match(/^([A-Za-z]{3,})(?:[\\s])(?=[\\d])((?:\\d{1,2})?(?![\\d]))?(?:\\s)?(\\d{4})?/); // FT style for writing time:\n  // The 12 hour clock should be used: 1am, 9.30pm\n\n  var time = text.match(/(?:\\s|^)(\\d{1,2}(?:[.](\\d{2}))?)(pm|am)$/); // Get date.\n\n  var month = date && date[1] ? date[1] : null; // Get full month name from a given month e.g. 'January' for 'Jan'.\n\n  var matchingMonthNames = monthNames.filter(name => name.indexOf(month) !== -1); // Get the index of the matching month name.\n\n  var monthIndex = matchingMonthNames && matchingMonthNames[0] ? monthNames.indexOf(matchingMonthNames[0]) : null;\n  var day = date && date[2] ? parseInt(date[2], 10) : null;\n  var year = date && date[3] ? parseInt(date[3], 10) : null;\n\n  if (month && !year) {\n    // For sorting purposes, assume a month is for this year if not otherwise specified.\n    year = new Date().getFullYear();\n  } // Get time.\n\n\n  var hour = time && time[1] ? parseInt(time[1], 10) : null;\n  var minute = time && time[2] ? parseInt(time[2], 10) : 0;\n  var period = time ? time[3] : null;\n  var twentyFourHour = hour && period === 'pm' ? hour + 12 : hour; // Sort number for FT formated time.\n\n  if (hour && !(year && monthIndex)) {\n    return parseFloat(\"\".concat(twentyFourHour, \".\").concat(minute));\n  } // Unix epoch to sort FT formated date.\n\n\n  var dateObj = new Date(Date.UTC(year, monthIndex, day, twentyFourHour, minute));\n  return isNaN(dateObj.getTime()) ? text : dateObj.getTime();\n}\n/**\n * Removes and number of asterisk's which are at the end of the line.\n * @example\n *  removeRefereneAsterisk('Durian*') //Durian\n *  removeRefereneAsterisk('1,439,165.43**') //1,439,165.43\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text without source/reference asterisk.\n */\n\n\nfunction removeRefereneAsterisk(text) {\n  return text.replace(/\\*+$/, '');\n}\n/**\n * Removes indicators of an empty cell.\n * @example\n *  removeEmptyCellIndicators('n/a'); //\n *  removeEmptyCellIndicators('-'); //\n *  removeEmptyCellIndicators('Cell-content'); //Cell-content\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} An empty string or the original text.\n */\n\n\nfunction removeEmptyCellIndicators(text) {\n  // Remove n/a\n  text = text.replace(/^n[./]a[.]?$/i, ''); // Remove -\n\n  return text === '-' ? '' : text;\n}\n/**\n * Group of filters to extract text from a cell.\n * @param {HTMLElement} cell The node to extract sortable text from.\n * @access private\n * @returns {String} The node content to sort on.\n */\n\n\nfunction extractNodeContent(cell) {\n  var steps = [extractAltFromImages, extractText, removeRefereneAsterisk, removeEmptyCellIndicators];\n  var text = cell;\n  steps.forEach(step => {\n    text = step(text);\n  });\n  return typeof text === 'string' ? text : '';\n}\n/**\n * Group of filters to extract a number for sorting.\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number|String} A number if one could a extracted, string otherwise.\n */\n\n\nfunction extractNumber(text) {\n  var steps = [removeDigitGroupSeparators, expandAbbreviations, extractDigitsIfFound, extractNumberFromRange];\n  steps.forEach(step => {\n    text = step(text);\n  });\n  return text;\n}\n/**\n * Methods to format table cells for sorting.\n * @access public\n */\n\n\nclass CellFormatter {\n  constructor() {\n    // This object is used to keep the running order of filter methods\n    this.filters = {\n      text: [extractNodeContent],\n      number: [extractNodeContent, extractNumber],\n      percent: [extractNodeContent, extractNumber],\n      currency: [extractNodeContent, extractNumber],\n      numeric: [extractNodeContent, extractNumber],\n      date: [extractNodeContent, ftDateTimeToNumber]\n    };\n  }\n  /**\n   * The `formatFunction` take the table cell HTMLElement,\n   * and converts it to a String or Number of sorting.\n   *\n   * @callback formatFunction\n   * @param {HTMLElement} cell\n   * @return {String|Object}\n   */\n\n  /**\n   * @param {String} type The data type of the cell to apply the filter function to.\n   * @param {formatFunction} formatFunction The function to take the cell and return a sortable value (string/number).\n   * @example\n   *  mySortFormatter.setFormatter('emoji-time', (cell) => {\n   *  \tconst text = cell.textContent.trim();\n   *  \tif (text === '🌑') {\n   *  \t\treturn 1;\n   *  \t}\n   *  \tif (text === '🌤️️') {\n   *  \t\treturn 2;\n   *  \t}\n   *  \treturn 0;\n   *  });\n   * @access public\n   */\n\n\n  setFormatter(type, formatFunction) {\n    this.filters[type] = [formatFunction];\n  }\n  /**\n   * @param {HTMLElement} cell\n   * @param {String} type The data type of the cell, e.g. date, number, currency. Custom types are supported.\n   * @see {@link setFormatter} to support add support for a custom type.\n   * @access public\n   * @return {String|Number} A representation of cell which can be used for sorting.\n   */\n\n\n  formatCell(_ref) {\n    var {\n      cell,\n      type = 'text'\n    } = _ref;\n    type = type || 'text';\n    var cellClone = cell.cloneNode({\n      deep: true\n    });\n    var sortValue = cell.getAttribute('data-o-table-sort-value');\n\n    if (sortValue === null) {\n      if (this.filters[type]) {\n        sortValue = cellClone;\n        this.filters[type].forEach(fn => {\n          sortValue = fn(sortValue);\n        });\n      }\n\n      cell.setAttribute('data-o-table-sort-value', sortValue);\n    }\n\n    var sortValueIsNumber = sortValue !== '' && !isNaN(sortValue);\n    return sortValueIsNumber ? parseFloat(sortValue) : sortValue;\n  }\n\n}\n\nexport default CellFormatter;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort/TableSorter.js",
      "contents": "import CellFormatter from \"./CellFormatter\";\n/**\n * Construct Intl.Collator if supported.\n *\n * @access private\n * @returns {Intl.Collator | Undefined}\n */\n\nfunction getIntlCollator() {\n  if (typeof Intl !== 'undefined' && {}.hasOwnProperty.call(Intl, 'Collator')) {\n    return new Intl.Collator();\n  }\n}\n/**\n * An ascending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\n\n\nfunction ascendingSort(a, b, intlCollator) {\n  if ((typeof a === 'string' || a instanceof String) && (typeof b === 'string' || b instanceof String)) {\n    return intlCollator ? intlCollator.compare(a, b) : a.localeCompare(b);\n  } else if (!isNaN(b) && isNaN(a) || a < b) {\n    return -1;\n  } else if (!isNaN(a) && isNaN(b) || b < a) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n/**\n * A descending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\n\n\nfunction descendingSort() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return 0 - ascendingSort.apply(this, args);\n}\n/**\n * Provides methods to sort table instances.\n */\n\n\nclass TableSorter {\n  constructor() {\n    this._cellFormatter = new CellFormatter();\n  }\n  /**\n   * Sort the given table.\n   *\n   * @access public\n   * @param {BaseTable} table - The table instance to sort.\n   * @param {Number} columnIndex - The index of the table column to sort.\n   * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n   * @returns {undefined}\n   */\n\n\n  sortRowsByColumn(table, columnIndex, sortOrder) {\n    var tableHeaderElement = table.getTableHeader(columnIndex);\n\n    if (['ascending', 'descending'].indexOf(sortOrder) === -1) {\n      throw new Error(\"Sort order \\\"\".concat(sortOrder, \"\\\" is not supported. Must be \\\"ascending\\\" or \\\"descending\\\".\"));\n    } // Add class for immediate visual feedback (only update aria when table has sorted successfully).\n\n\n    window.requestAnimationFrame(() => {\n      tableHeaderElement.classList.add(\"o-table-sorting-\".concat(sortOrder));\n    });\n    var intlCollator = getIntlCollator();\n    var cellFormatter = this._cellFormatter;\n    var type = tableHeaderElement.getAttribute('data-o-table-data-type') || undefined;\n    table.tableRows.sort((a, b) => {\n      var aCol = a.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n      var bCol = b.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n      aCol = cellFormatter.formatCell({\n        cell: aCol,\n        type\n      });\n      bCol = cellFormatter.formatCell({\n        cell: bCol,\n        type\n      });\n\n      if (sortOrder === 'ascending') {\n        return ascendingSort(aCol, bCol, intlCollator);\n      } else {\n        return descendingSort(aCol, bCol, intlCollator);\n      }\n    });\n    window.requestAnimationFrame(() => {\n      table.tableRows.forEach(row => {\n        table.tbody.appendChild(row);\n      });\n      table.tableHeaders.forEach(header => {\n        var headerSort = header === tableHeaderElement ? sortOrder : 'none';\n        header.setAttribute('aria-sort', headerSort);\n        header.classList.remove(\"o-table-sorting-ascending\");\n        header.classList.remove(\"o-table-sorting-descending\");\n      });\n      table.sorted({\n        columnIndex,\n        sortOrder\n      });\n    });\n  }\n  /**\n   * Set a custom cell formatter for a given data type.\n   *\n   * @param {String} type - The data type to apply the filter function to.\n   * @param {formatFunction} formatFunction - Callback to format a table cell to a sort value.\n   * @see {@link CellFormatter~setFormatter} for `formatFunction` details.\n   * @access public\n   */\n\n\n  setCellFormatterForType(type, formatFunction) {\n    this._cellFormatter.setFormatter(type, formatFunction);\n  }\n\n}\n\nexport default TableSorter;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/BaseTable.js",
      "contents": "import Delegate from \"dom-delegate\";\n\nclass BaseTable {\n  /**\n   * The shared functionality of all `o-table` variants.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {BaseTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this._listeners = [];\n    this._sorter = sorter;\n    this.rootEl = rootEl;\n    this._opts = Object.assign({\n      sortable: this.rootEl.getAttribute('data-o-table-sortable') !== 'false'\n    }, opts);\n    this.thead = this.rootEl.querySelector('thead');\n    this.tbody = this.rootEl.querySelector('tbody');\n    this.tableHeaders = this.thead ? Array.from(this.thead.querySelectorAll('th')) : [];\n    this.tableRows = this.tbody ? Array.from(this.tbody.getElementsByTagName('tr')) : [];\n    this.wrapper = this.rootEl.closest('.o-table-scroll-wrapper');\n    this.container = this.rootEl.closest('.o-table-container');\n    this.overlayWrapper = this.rootEl.closest('.o-table-overlay-wrapper');\n    this._rootElDomDelegate = new Delegate(this.rootEl);\n  }\n  /**\n   * Gets a table header for a given column index.\n   *\n   * @access public\n   * @param {Number} columnIndex - The index of the table column to get the header for.\n   * @throws When no header is not found.\n   * @returns {HTMLElement}\n   */\n\n\n  getTableHeader(columnIndex) {\n    var th = this.tableHeaders[columnIndex];\n\n    if (!th) {\n      throw new Error(\"Could not find header for column index \\\"\".concat(columnIndex, \"\\\".\"));\n    }\n\n    return th;\n  }\n  /**\n   * Sort the table.\n   *\n   * @access public\n   * @param {Number} columnIndex - The index of the table column to sort.\n   * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n   * @returns {undefined}\n   */\n\n\n  sortRowsByColumn(columnIndex, sortOrder) {\n    /**\n     * Fires an \"oTable.sorting\" event. The sorting event can be cancelled to\n     * provide a totally custom method of sorting the table.\n     * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     */\n    var defaultSort = this._dispatchEvent('sorting', {\n      sort: sortOrder,\n      columnIndex\n    }, {\n      cancelable: true\n    });\n\n    if (defaultSort) {\n      this._sorter.sortRowsByColumn(this, columnIndex, sortOrder);\n    }\n  }\n  /**\n   * Add sort buttons to the DOM within the table header.\n   * @returns {undefined}\n   */\n\n\n  addSortButtons() {\n    if (!this._opts.sortable) {\n      return;\n    }\n\n    this.rootEl.classList.add('o-table--sortable');\n    this.tableHeaders.forEach(function (th) {\n      // Don't add sort buttons to unsortable columns.\n      if (th.hasAttribute('data-o-table-heading-disable-sort')) {\n        return;\n      } // Move heading text into button.\n\n\n      var sortButton = document.createElement('button');\n      var heading = th.textContent;\n      sortButton.textContent = heading; // In VoiceOver, button `aria-label` is repeated when moving from one column of tds to the next.\n      // Using `title` avoids this, but risks not being announced by other screen readers.\n\n      sortButton.classList.add('o-table__sort');\n      sortButton.setAttribute('title', \"sort table by \".concat(heading));\n      th.innerHTML = '';\n      th.appendChild(sortButton); // Add click event to buttons.\n\n      var listener = this._sortButtonHandler.bind(this);\n\n      this._rootElDomDelegate.on('click', '.o-table__sort', listener);\n    }.bind(this));\n  }\n  /**\n   * Indicate that the table has been sorted after intercepting the sorting event.\n   *\n   * @access public\n   * @param {Object} sortDetails - Details of the current sort state.\n   * @param {Number|Null} sortDetails.columnIndex - The index of the currently sorted column.\n   * @param {String|Null} sortDetails.sortOrder - The type of sort, \"ascending\" or \"descending\"\n   */\n\n\n  sorted(_ref) {\n    var {\n      columnIndex,\n      sortOrder\n    } = _ref;\n\n    if (isNaN(columnIndex)) {\n      throw new Error(\"Expected a numerical column index but received \\\"\".concat(columnIndex, \"\\\".\"));\n    }\n\n    if (!sortOrder) {\n      throw new Error(\"Expected a sort order e.g. \\\"ascending\\\" or \\\"descending\\\".\");\n    }\n\n    this._dispatchEvent('sorted', {\n      sortOrder,\n      columnIndex\n    });\n  }\n  /**\n   * Gets the instance ready for deletion.\n   * Removes event listeners that were added during instatiation of the component.\n   * @access public\n   * @returns {undefined}\n   */\n\n\n  destroy() {\n    this._rootElDomDelegate.destroy();\n\n    this._listeners.forEach((_ref2) => {\n      var {\n        type,\n        listener,\n        element\n      } = _ref2;\n      element.removeEventListener(type, listener);\n    });\n  }\n  /**\n   * Indicate that the table has been constructed successfully.\n   * @returns {undefined}\n   */\n\n\n  _ready() {\n    this._dispatchEvent('ready');\n  }\n  /**\n   * Handles a sort button click event. Toggles column sort.\n   * @param {MouseEvent} event - The click event.\n   * @returns {undefined}\n   */\n\n\n  _sortButtonHandler(event) {\n    var sortButton = event.target;\n    var th = sortButton.closest('th');\n    var columnIndex = this.tableHeaders.indexOf(th);\n\n    if (th && !isNaN(columnIndex)) {\n      var currentSort = th.getAttribute('aria-sort');\n      var sortOrder = [null, 'none', 'descending'].indexOf(currentSort) !== -1 ? 'ascending' : 'descending';\n      this.sortRowsByColumn(columnIndex, sortOrder);\n    }\n  }\n  /**\n   * Helper function to dispatch namespaced events.\n   *\n   * @param {String} event - The event name within `oTable` e.g. \"sorted\".\n   * @param {Object} data={} - Event data. `insatnce` is added automatically.\n   * @param {Object} opts={} - [Event options]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event/Event#Values} (o-table events bubble by default).\n   */\n\n\n  _dispatchEvent(event) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    Object.assign(data, {\n      instance: this\n    });\n    return this.rootEl.dispatchEvent(new CustomEvent(\"oTable.\".concat(event), Object.assign({\n      detail: data,\n      bubbles: true\n    }, opts)));\n  }\n\n}\n\nexport default BaseTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/BasicTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass BasicTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component without responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {BasicTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n\n}\n\nexport default BasicTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/FlatTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass FlatTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"flat\" responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {FlatTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts); // Flat table can only work given headers.\n\n    if (this.tableHeaders.length > 0) {\n      this._duplicateHeaders(rootEl);\n    } else {\n      console.warn('Could not create a \"flat\" table as no headers were found. Ensure table headers are placed within \"<thead>\". Removing class \"o-table--responsive-flat\".', rootEl);\n      rootEl.classList.remove('o-table--responsive-flat');\n    }\n\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Duplicate table headers for each tabel row.\n   */\n\n\n  _duplicateHeaders() {\n    this.tableRows.forEach(row => {\n      var data = Array.from(row.getElementsByTagName('td'));\n      data.forEach((td, dataIndex) => {\n        var clonedHeader = this.tableHeaders[dataIndex].cloneNode(true);\n        clonedHeader.setAttribute('scope', 'row');\n        clonedHeader.setAttribute('role', 'rowheader');\n        clonedHeader.classList.add('o-table__duplicate-heading');\n        td.parentNode.insertBefore(clonedHeader, td);\n      });\n    });\n  }\n\n}\n\nexport default FlatTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/OverflowTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass OverflowTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"overflow\" responsive behaviour.\n   *\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @param {Undefined | Bool} opts.expanded\n   * @param {Number} opts.minimumRowCount [20]\n   * @access public\n   * @returns {OverflowTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n    this._opts = Object.assign({\n      expanded: this.rootEl.hasAttribute('data-o-table-expanded') ? this.rootEl.getAttribute('data-o-table-expanded') !== 'false' : null,\n      minimumRowCount: this.rootEl.getAttribute('data-o-table-minimum-row-count')\n    }, this._opts);\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n    window.requestAnimationFrame(this._setupScroll.bind(this));\n    window.requestAnimationFrame(this._setupExpander.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Check if the table is expanded (true) or collapsed (false).\n   * @access public\n   * @returns {Bool}\n   */\n\n\n  isExpanded() {\n    var value = this.rootEl.getAttribute('data-o-table-expanded');\n    return Boolean(value !== 'false');\n  }\n  /**\n   * Check if the table supports the expand/contract feature.\n   * @access public\n   * @returns {Bool}\n   */\n\n\n  canExpand() {\n    return typeof this._opts.expanded === 'boolean' && this._minimumRowCount < this.tableRows.length;\n  }\n  /**\n   * Hides table rows if the table can be expanded.\n   * @access public\n   * @returns undefined\n   */\n\n\n  contractTable() {\n    if (!this.canExpand()) {\n      return;\n    } // Expander not setup until next frame. Update options.\n\n\n    if (!this.controls) {\n      this._opts.expanded = false;\n      return;\n    }\n\n    var expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n    var rowsToHide = this._rowsToHide;\n    var originalButtonTopOffset = this.controls.expanderButton.getBoundingClientRect().top; // Calculate contracted table height.\n    // Extra height to tease half of the first hidden row.\n\n    var tableHeight = this.rootEl.getBoundingClientRect().height;\n    var rowsToHideHeight = rowsToHide.reduce((accumulatedHeight, row) => {\n      return accumulatedHeight + row.getBoundingClientRect().height;\n    }, 0);\n    var extraHeight = rowsToHide[0] ? rowsToHide[0].getBoundingClientRect().height / 2 : 0;\n    var contractedHeight = tableHeight + extraHeight - rowsToHideHeight; // Contract table.\n\n    window.requestAnimationFrame(() => {\n      this._updateRowVisibility(false);\n\n      this.rootEl.setAttribute('aria-expanded', false);\n      this.rootEl.setAttribute('data-o-table-expanded', false);\n      this.wrapper.style.height = \"\".concat(contractedHeight, \"px\");\n      this.container.classList.remove('o-table-container--expanded');\n      this.container.classList.add('o-table-container--contracted');\n\n      if (expanderButton) {\n        expanderButton.textContent = 'Show more'; // Keep more/fewer button in viewport when contracting table.\n        // Using `window.scroll(x-coord, y-coord)` as IE11 did not scroll\n        // correctly with `window.scroll(options)`.\n\n        var top = window.pageYOffset + this.controls.expanderButton.getBoundingClientRect().top - originalButtonTopOffset;\n        window.scroll(null, top);\n      }\n\n      this._updateControls();\n    });\n  }\n  /**\n   * Expands the table, revealing hidden table rows, if it can be expanded and has been contracted.\n   * @access public\n   * @returns undefined\n   */\n\n\n  expandTable() {\n    if (!this.canExpand()) {\n      return;\n    } // Expander not setup until next frame. Update options.\n\n\n    if (!this.controls) {\n      this._opts.expanded = true;\n      return;\n    }\n\n    var expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n    window.requestAnimationFrame(() => {\n      this.container.classList.remove('o-table-container--contracted');\n      this.container.classList.add('o-table-container--expanded');\n\n      if (expanderButton) {\n        expanderButton.textContent = 'Show fewer';\n      }\n\n      this.wrapper.style.height = '';\n\n      this._updateRowVisibility(true);\n\n      this.rootEl.setAttribute('aria-expanded', true);\n      this.rootEl.setAttribute('data-o-table-expanded', true);\n\n      this._updateControls();\n    });\n  }\n  /**\n   * Performs post-sort actions such as updating row visibility and firing a `oTable.sorted` event.\n   * Required as the sort event can be intercepted for a custom implementation.\n   *\n   * @access public\n   * @param {Object} sortDetail An object containing information about the sort.\n   * @param {Number} sortDetail.columnIndex The index of the column which has been sorted.\n   * @param {String} sortDetail.sortAscending The order of the sort i.e. ascending or descending.\n   * @returns undefined\n   */\n\n\n  sorted(_ref) {\n    var {\n      columnIndex,\n      sortOrder\n    } = _ref;\n    window.requestAnimationFrame(() => {\n      this._updateRowVisibility(this.isExpanded());\n\n      super.sorted({\n        columnIndex,\n        sortOrder\n      });\n    });\n  }\n  /**\n   * Update row aria attributes to show/hide them.\n   * E.g. After performing a sort, rows which where hidden in the colapsed table may have become visible.\n   * @param {boolean} expanded - Update row visibility for an expanded or contracted table.\n   * @returns {undefined}\n   */\n\n\n  _updateRowVisibility(expanded) {\n    var visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n    var hiddenRows = expanded ? [] : this.tableRows.slice(visibleRowCount, this.tableRows.length);\n    this.tableRows.forEach(row => {\n      row.setAttribute('aria-hidden', hiddenRows && hiddenRows.indexOf(row) !== -1 ? 'true' : 'false');\n    });\n  }\n  /**\n   * Add controls such as the back, forward, \"show more\" buttons to DOM,\n   * plus wrappers needed for them to function.\n   * @returns {undefined}\n   */\n\n\n  _addControlsToDom() {\n    if (this.overlayWrapper && !this.controls) {\n      var supportsArrows = OverflowTable._supportsArrows();\n\n      this.overlayWrapper.insertAdjacentHTML('beforeend', \"\\n\\t\\t\\t\\t\".concat(this.wrapper ? \"\\n\\t\\t\\t\\t\\t<div class=\\\"o-table-overflow-fade-overlay\\\" style=\\\"display: none;\\\"></div>\\n\\t\\t\\t\\t\" : '', \"\\n\\t\\t\\t\\t<div class=\\\"o-table-overflow-control-overlay\\\" style=\\\"display: none;\\\">\\n\\t\\t\\t\\t\\t\").concat(this.wrapper && supportsArrows ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--back o-table-control--hide\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button aria-label=\\\"visually scroll table back\\\" disabled=\\\"true\\\" class=\\\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-left\\\"></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\n\\t\\t\\t\\t\\t\").concat(this.wrapper && supportsArrows ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--forward o-table-control--hide\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button aria-label=\\\"visually scroll table forward\\\" disabled=\\\"true\\\" class=\\\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-right\\\"></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\n\\t\\t\\t\\t\\t\").concat(this.canExpand() ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--expander\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"o-buttons o-buttons--primary o-buttons--big\\\">Show fewer</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\"));\n      this.controls = {\n        controlsOverlay: this.overlayWrapper.querySelector('.o-table-overflow-control-overlay'),\n        fadeOverlay: this.overlayWrapper.querySelector('.o-table-overflow-fade-overlay'),\n        expanderButton: this.overlayWrapper.querySelector('.o-table-control--expander'),\n        forwardButton: this.overlayWrapper.querySelector('.o-table-control--forward'),\n        backButton: this.overlayWrapper.querySelector('.o-table-control--back')\n      };\n    }\n  }\n  /**\n   * Add functionality to improve the experience when scrolling a table,\n   * such as showing forward/back buttons to indicate that scroll is possible.\n   * @returns {undefined}\n   */\n\n\n  _setupScroll() {\n    // Does not warn of a missing wrapper: assumes no overflow is desired.\n    if (this.container && this.overlayWrapper && !this.wrapper) {\n      console.warn('Controls to scroll table left/right could not be added to \"o-table\" as it is missing markup. ' + 'Please add the container and wrapper elements according to the documentation https://registry.origami.ft.com/components/o-table.', {\n        table: this.rootEl\n      });\n    } // Can not add controls without a container or wrapper.\n\n\n    if (!this.container || !this.overlayWrapper || !this.wrapper) {\n      return;\n    } // Add table controls (e.g. left/right button).\n\n\n    if (!this.controls) {\n      this._addControlsToDom();\n    } // Add forward button behaviour.\n\n\n    if (this.controls.forwardButton) {\n      var scrollForward = function () {\n        this.wrapper.scrollBy({\n          left: document.body.clientWidth / 2,\n          behavior: 'smooth'\n        });\n      }.bind(this);\n\n      this.controls.forwardButton.addEventListener('click', scrollForward);\n\n      this._listeners.push({\n        element: this.controls.forwardButton,\n        scrollForward,\n        type: 'click'\n      });\n    } // Add back button behaviour.\n\n\n    if (this.controls.backButton) {\n      var scrollBackward = function () {\n        this.wrapper.scrollBy({\n          left: -(document.body.clientWidth / 2),\n          behavior: 'smooth'\n        });\n      }.bind(this);\n\n      this.controls.backButton.addEventListener('click', scrollBackward);\n\n      this._listeners.push({\n        element: this.controls.backButton,\n        scrollBackward,\n        type: 'click'\n      });\n    } // Set scroll position and update controls.\n\n\n    var updateScroll = function () {\n      this._setScrollPosition();\n\n      this._updateControls();\n    }.bind(this);\n\n    updateScroll(); // Observe controls scrolling beyond table and update.\n\n    if (this.controls.controlsOverlay && window.IntersectionObserver) {\n      // Fade forward/back buttons at start and end of table.\n      var arrowFadeObserverConfig = {\n        root: this.controls.controlsOverlay,\n        threshold: 1.0,\n        rootMargin: \"-50px 0px \".concat(this.controls.expanderButton ? '0px' : '-10px', \" 0px\")\n      };\n      var arrowFadeObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          entry.target.setAttribute('data-o-table-intersection', entry.intersectionRatio !== 1);\n          updateScroll();\n        });\n      }, arrowFadeObserverConfig);\n\n      if (this.controls.backButton) {\n        arrowFadeObserver.observe(this.controls.backButton);\n      }\n\n      if (this.controls.forwardButton) {\n        arrowFadeObserver.observe(this.controls.forwardButton);\n      }\n    } // Add other event listeners to update controls.\n\n\n    this.wrapper.addEventListener('scroll', updateScroll);\n    window.addEventListener('resize', updateScroll);\n    window.addEventListener('load', updateScroll);\n\n    this._listeners.push({\n      element: this.wrapper,\n      updateScroll,\n      type: 'scroll'\n    });\n\n    this._listeners.push({\n      element: window,\n      updateScroll,\n      type: 'resize'\n    });\n\n    this._listeners.push({\n      element: window,\n      updateScroll,\n      type: 'load'\n    });\n  }\n  /**\n   * Add hide/show functionality for long tables.\n   * @returns {undefined}\n   */\n\n\n  _setupExpander() {\n    if (!this.canExpand()) {\n      return;\n    }\n\n    if (!this.container || !this.overlayWrapper || !this.wrapper) {\n      throw new Error('Controls to expand/contract the table could not be added to \"o-table\" as it is missing markup.' + 'Please add the container and wrapper element according to the documentation https://registry.origami.ft.com/components/o-table.');\n    } // Add table controls (e.g. \"more\" button).\n\n\n    if (!this.controls) {\n      this._addControlsToDom();\n    }\n\n    if (this.controls.expanderButton) {\n      var toggleExpanded = function () {\n        if (this.isExpanded()) {\n          this.contractTable();\n        } else {\n          this.expandTable();\n        }\n      }.bind(this);\n\n      this.controls.expanderButton.addEventListener('click', toggleExpanded);\n\n      this._listeners.push({\n        element: this.controls.expanderButton,\n        toggleExpanded,\n        type: 'click'\n      });\n    }\n\n    if (this._opts.expanded) {\n      this.expandTable();\n    } else {\n      this.contractTable();\n    }\n  }\n  /**\n   * Set table scroll position in wrapper.\n   * @returns {undefined}\n   */\n\n\n  _setScrollPosition() {\n    this._fromEnd = this.wrapper.scrollWidth - this.wrapper.clientWidth - this.wrapper.scrollLeft;\n    this._fromStart = this.wrapper.scrollLeft;\n  }\n  /**\n   * Update all controls and their overlays,\n   * e.g. forward/back arrow visibility, visibility of arrow dock, overlay fade.\n   * @returns {undefined}\n   */\n\n\n  _updateControls() {\n    if (!this._controlUpdateScheduled) {\n      this._controlUpdateScheduled = true;\n      setTimeout(function () {\n        // Toggle fade.\n        this.controls.fadeOverlay.classList.toggle('o-table-overflow-fade-overlay--scroll', this._canScrollTable);\n        this.controls.fadeOverlay.style.setProperty('--o-table-fade-from-end', \"\".concat(Math.min(this._fromEnd, 10), \"px\"));\n        this.controls.fadeOverlay.style.setProperty('--o-table-fade-from-start', \"\".concat(Math.min(this._fromStart, 10), \"px\")); // Toggle arrow dock.\n\n        this.controls.controlsOverlay.classList.toggle('o-table-overflow-control-overlay--arrow-dock', this._showArrowDock); // Update forward/back scroll controls.\n\n        if (OverflowTable._supportsArrows()) {\n          this._updateScrollControl(this.controls.forwardButton);\n\n          this._updateScrollControl(this.controls.backButton);\n        } // Make controls visible.\n\n\n        this.controls.controlsOverlay.style.display = '';\n        this.controls.fadeOverlay.style.display = '';\n        this._controlUpdateScheduled = false;\n      }.bind(this), 33);\n    }\n  }\n  /**\n   * Update the visibility of a scroll forward/back button.\n   * @param {HTMLElement} element - The button wrapper.\n   * @returns {undefined}\n   */\n\n\n  _updateScrollControl(element) {\n    // Make arrows sticky if table is tall and can be scrolled past.\n    element.classList.toggle('o-table-control--sticky', this._stickyArrows); // Place the arrows in the doc if they are not sticky.\n\n    var arrowsDocked = this._showArrowDock && !this._stickyArrows;\n    element.classList.toggle('o-table-control--dock', arrowsDocked); // Hide scroll buttons if the table fits within the viewport.\n\n    if (this._canScrollTable) {\n      element.style.display = '';\n    } else {\n      element.style.display = 'none';\n    } // Disable forward button if the table is scrolled to the end.\n\n\n    var scrolledToBoundary = this._fromEnd <= 0 && element === this.controls.forwardButton || this._fromStart <= 0 && element === this.controls.backButton;\n    var outsideTable = element.getAttribute('data-o-table-intersection') === 'true';\n\n    if (outsideTable) {\n      element.querySelector('button').setAttribute('disabled', true);\n      element.classList.add('o-table-control--hide');\n    }\n\n    if (!scrolledToBoundary && !outsideTable) {\n      element.querySelector('button').removeAttribute('disabled');\n      element.classList.remove('o-table-control--hide');\n    }\n\n    if (scrolledToBoundary && !outsideTable) {\n      element.querySelector('button').setAttribute('disabled', true);\n      var hideControl = !arrowsDocked && (!this._stickyArrows || this._stickyArrows && !this._canScrollPastTable);\n      element.classList.toggle('o-table-control--hide', hideControl);\n    }\n  }\n  /**\n   * The number of rows to display if the table is collapsed.\n   * @returns {Number}\n   */\n\n\n  get _minimumRowCount() {\n    var minimumRowCount = this._opts.minimumRowCount;\n    return isNaN(parseInt(minimumRowCount, 10)) ? 20 : parseInt(minimumRowCount, 10);\n  }\n  /**\n   * The number rows which will be hidden if the table is collapsed.\n   * @returns {Number}\n   */\n\n\n  get _rowsToHide() {\n    var visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n    return this.tableRows.slice(visibleRowCount, this.tableRows.length);\n  }\n  /**\n   * Check if the table can be scrolled.\n   * @returns {Boolean}\n   */\n\n\n  get _canScrollTable() {\n    return this._fromEnd > 0 || this._fromStart > 0;\n  }\n  /**\n   * Check if the table can fit within the viewport vertically.\n   * @returns {Boolean}\n   */\n\n\n  get _tableTallerThanViewport() {\n    return this.container.getBoundingClientRect().height > document.documentElement.clientHeight;\n  }\n  /**\n   * Check if the document is long enough to scroll beyond the table enough for sticky arrows to dock at the bottom.\n   * I.e. Scroll past the table by at least 50% of the viewport.\n   * @returns {Boolean}\n   */\n\n\n  get _canScrollPastTable() {\n    return this.container.getBoundingClientRect().bottom + document.documentElement.clientHeight / 2 < document.documentElement.getBoundingClientRect().bottom;\n  }\n  /**\n   * Check if the \"dock\" at the bottom of the table should be shown.\n   * After scrolling past the table, sticky arrows sit within the dock at the bottom of the table.\n   * @returns {Boolean}\n   */\n\n\n  get _showArrowDock() {\n    return OverflowTable._supportsArrows() && this._canScrollTable && this._canScrollPastTable && this.canExpand() && this._rowsToHide.length !== 0;\n  }\n  /**\n   * Check if left/right controls should be sticky.\n   * @returns {Boolean}\n   */\n\n\n  get _stickyArrows() {\n    return OverflowTable._supportsArrows() && this._tableTallerThanViewport;\n  }\n  /**\n   * Check if sticky buttons are supported.\n   * @returns {Boolean}\n   */\n\n\n  static _supportsArrows() {\n    return typeof CSS !== 'undefined' && (CSS.supports(\"position\", \"sticky\") || CSS.supports('position', '-webkit-sticky'));\n  }\n\n}\n\nexport default OverflowTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/ScrollTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass ScrollTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"scroll\" responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {ScrollTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n\n    this._duplicateRowsWithAddedHeader();\n\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Duplicate the table headers into a one tbody row.\n   * @returns {undefined}\n   */\n\n\n  _duplicateRowsWithAddedHeader() {\n    this.tableHeaders.forEach((header, index) => {\n      var headerRow = document.createElement('tr');\n      headerRow.classList.add('o-table__duplicate-row'); // Clone column heading and turn into a row heading.\n\n      var clonedHeader = header.cloneNode(true);\n      clonedHeader.setAttribute('scope', 'row');\n      clonedHeader.setAttribute('role', 'rowheader');\n      headerRow.appendChild(clonedHeader); // Clone data for the column into the new row.\n\n      this.tableRows.forEach(row => {\n        var data = row.querySelectorAll('td')[index];\n        headerRow.appendChild(data.cloneNode(true));\n      });\n      this.tbody.appendChild(headerRow);\n    });\n  }\n\n}\n\nexport default ScrollTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/oTable.js",
      "contents": "import FlatTable from \"./Tables/FlatTable\";\nimport ScrollTable from \"./Tables/ScrollTable\";\nimport OverflowTable from \"./Tables/OverflowTable\";\nimport BasicTable from \"./Tables/BasicTable\";\nimport TableSorter from \"./Sort/TableSorter\";\nvar sorter = new TableSorter();\n\nclass OTable {\n  /**\n   * Table options.\n   * @typedef {Object} OTable~opts - Table options.\n   * @property {Bool} sortable [true] - Disable the table's sort feature.\n   * @property {Undefined | Bool} expanded [Undefined] - Allow the \"OverflowTable\" to hide results behind a \"show more\" button. The table is expanded by default when \"true\", contracted when \"false\", or not expandable if not set.\n   * @property {Number} minimumRowCount [20] - When the `expanded` option is set, the number of rows to show when the table is not expanded.\n   */\n\n  /**\n   * Constructs an o-table component.\n   *\n   * @param {HTMLElement} - An o-table element.\n   * @param {...OTable~opts} opts - A table options object.\n   * @returns {FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance.\n   */\n  constructor(rootEl) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var tableType = rootEl.getAttribute('data-o-table-responsive');\n    var Table;\n\n    switch (tableType) {\n      case 'flat':\n        Table = FlatTable;\n        break;\n\n      case 'scroll':\n        Table = ScrollTable;\n        break;\n\n      case 'overflow':\n        Table = OverflowTable;\n        break;\n\n      default:\n        Table = BasicTable;\n        break;\n    }\n\n    return new Table(rootEl, sorter, opts);\n  }\n  /**\n   * Constructs all o-table components inside the element passed as the first parameter.\n   *\n   * @access public\n   * @param {(HTMLElement|string)} [el=document.body] - Element where to search for o-table components. You can pass an HTMLElement or a selector string.\n   * @param {...OTable~opts} opts - A table options object.\n   * @returns {Array<FlatTable | ScrollTable | OverflowTable | BasicTable> | FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance or array of table instances.\n   */\n\n\n  static init() {\n    var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!(el instanceof HTMLElement)) {\n      el = document.querySelector(el);\n    }\n\n    if (/\\bo-table\\b/.test(el.getAttribute('data-o-component'))) {\n      return new OTable(el, opts);\n    }\n\n    var tableEls = Array.from(el.querySelectorAll('[data-o-component~=\"o-table\"]'));\n    return tableEls.map(el => {\n      return new OTable(el, opts);\n    });\n  }\n  /**\n   * The custom formatter accepts a table cell and returns a sort value for that cell.\n   * This could be used to define a custom sort order for an unsupported format, such as emoji's, or a new date format.\n   *\n   * @callback formatFunction\n   * @param {HTMLElement} cell\n   */\n\n  /**\n   * Set a custom sort formatter for a given data type.\n   *\n   * @example <caption>Mapping table cells which contain emojis to a numerical sort value.</caption>\n   *\tconst OTable = require('o-table');\n   *\t// Set a filter for custom data type \"emoji-time\".\n   *\t// The return value may be a string or number.\n   *\tOTable.setSortFormatterForType('emoji-time', (cell) => {\n   *\t\tconst text = cell.textContent.trim();\n   *\t\tif (text === '🌑') {\n   *\t\t\treturn 1;\n   *\t\t}\n   *\t\tif (text === '🌤️️') {\n   *\t\t\treturn 2;\n   *\t\t}\n   *\t\treturn 0;\n   *\t});\n   *\tOTable.init();\n   *\n   * @param {String} type - The data type to apply the filter function to.\n   * @param {formatFunction} formatFunction\n   * @access public\n   */\n\n\n  static setSortFormatterForType(type, formatFunction) {\n    sorter.setCellFormatterForType(type, formatFunction);\n  }\n\n}\n\nmodule.exports = OTable;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_base.scss",
      "contents": "/// Base tables styles and simple utility classes.\n/// @access private\n@mixin _oTableBase() {\n\t.o-table {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\n\t\tthead {\n\t\t\tborder-bottom: 2px solid _oTableGet('table-data-color');\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 10px;\n\t\t\ttext-align: left;\n\t\t\tvertical-align: top;\n\t\t\tcolor: _oTableGet('table-data-color');\n\t\t}\n\n\t\tth {\n\t\t\t@include oTypographySansBold(1);\n\t\t\tbackground-color: _oTableGet('header-background');\n\t\t\t&:not([scope=row]) {\n\t\t\t\tvertical-align: bottom;\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(1);\n\t\t\tscroll-snap-align: none center;\n\t\t\t&:empty:before {\n\t\t\t\t@include oIconsGetIcon('minus', $container-width: 15,  $container-height: 15, $iconset-version: 1);\n\t\t\t\tcontent: '';\n\t\t\t\tvertical-align: middle;\n\t\t\t}\n\t\t}\n\n\t\t.o-table__caption {\n\t\t\ttext-align: left;\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0 10px;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.o-table__cell--numeric {\n\t\t\ttext-align: right;\n\t\t\tfont-feature-settings: \"tnum\" 1;\n\t\t}\n\n\t\t.o-table__cell--content-secondary {\n\t\t\t@include oTypographySize(0);\n\t\t\tfont-weight: normal;\n\t\t}\n\n\t\t.o-table__cell--vertically-center {\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-table .o-table-footnote,\n\t.o-table-footnote {\n\t\t@include oTypographyCaption();\n\t}\n\n\t.o-table-container > .o-table-footnote {\n\t\tmargin-left: 10px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_borders.scss",
      "contents": "/// Horizontal borders\n/// @access private\n@mixin _oTableHorizontalBorders {\n\t.o-table--horizontal-borders {\n\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\n\t\tth:not([scope=row]) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n/// Vertical borders\n/// @access private\n@mixin _oTableVerticalBorders {\n\t.o-table--vertical-borders {\n\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\n\t\t// sass-lint:disable no-qualifying-elements\n\t\tth[scope=row] {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t\t// sass-lint:enable no-qualifying-elements\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oTableGet($variables, $from: null) {\n    @return oBrandGet($component: 'o-table', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oTableSupports($variant) {\n    @return oBrandSupportsVariant($component: 'o-table', $variant: $variant);\n}\n\n@if oBrandGetCurrentBrand() == 'master' {\n\t@include oBrandDefine('o-table', 'master', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('paper'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('wheat'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsMix('wheat', 'paper', 40)\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'internal' {\n\t@include oBrandDefine('o-table', 'internal', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('white'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('slate-white-5'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsGetPaletteColor('slate-white-5')\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact',\n\t\t\t'row-headings'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'whitelabel' {\n\t@include oBrandDefine('o-table', 'whitelabel', (\n\t\t'variables': (),\n\t\t'supports-variants': (\n\t\t\t'compact'\n\t\t)\n\t));\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_compact.scss",
      "contents": "/// Make a table 'compact'\n/// @access private\n@mixin _oTableCompact {\n\t.o-table--compact {\n\t\tth {\n\t\t\t@include oTypographySansBold(0);\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(0);\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 4px 10px;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_container.scss",
      "contents": "/// Styles for a table container, the parent of all other table elements.\n/// Enables child overlays such as to indicate the ability to scroll a table.\n/// Includes standard table margin.\n/// @access private\n@mixin _oTableContainer {\n\t.o-table-container {\n\t\tposition: relative;\n\t}\n\t// Leave space for controls such as \"show more\" when expanded/contracted.\n\t.o-table-container--expanded,\n\t.o-table-container--contracted {\n\t\tpadding-bottom: 40px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_lines.scss",
      "contents": "/// Add horizontal lines to a table\n/// @access private\n@mixin _oTableHorizontalLines {\n\t.o-table--horizontal-lines {\n\t\ttr:not(:first-child) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n\n/// Add verticle lines to a table\n/// @access private\n@mixin _oTableVerticalLines {\n\t.o-table--vertical-lines {\n\t\tth:not(:last-child):not(:first-child),\n\t\ttd:not(:last-child):not(:first-child) {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_mixins.scss",
      "contents": "/// Outputs all features and styles available.\n/// @param $opts {list} [('responsive-overflow', 'responsive-flat', 'responsive-scroll', 'lines', 'compact', 'stripes', 'row-headings')] - Table features to output. Defaults to all table features.\n/// @access public\n@mixin oTable($opts: (\n\t'responsive-overflow',\n\t'responsive-flat',\n\t'responsive-scroll',\n\t'lines',\n\t'compact',\n\t'stripes',\n\t'row-headings',\n)) {\n\t$overflow-enabled: index($opts, 'responsive-overflow');\n\t$flat-enabled: index($opts, 'responsive-flat');\n\t$scroll-enabled: index($opts, 'responsive-scroll');\n\t$lines-enabled: index($opts, 'lines');\n\t$compact-enabled: index($opts, 'compact');\n\t$stripes-enabled: index($opts, 'stripes');\n\t$row-headings-enabled: index($opts, 'row-headings');\n\n\t// Basic styles and simple utilities.\n\t@include _oTableBase;\n\n\t// Sortable columns.\n\t@include _oTableSort;\n\n\t// Respnsive solutions.\n\t@if $flat-enabled or $scroll-enabled or $overflow-enabled {\n\t\t@include _oTableWrapper;\n\t\t@include _oTableContainer;\n\t}\n\t@if $overflow-enabled {\n\t\t@include _oTableResponsiveOverflow;\n\t}\n\t@if $flat-enabled {\n\t\t@include _oTableResponsiveFlat;\n\t}\n\t@if $scroll-enabled {\n\t\t@include _oTableResponsiveScroll;\n\t}\n\n\t// Lines.\n\t@if $lines-enabled {\n\t\t@include _oTableHorizontalLines;\n\t\t@include _oTableVerticalLines;\n\t\t@include _oTableHorizontalBorders;\n\t\t@include _oTableVerticalBorders;\n\t}\n\n\t// Compact.\n\t@if $compact-enabled and _oTableSupports('compact') {\n\t\t@include _oTableCompact;\n\t}\n\n\t// Stripes.\n\t@if $stripes-enabled and _oTableSupports('stripes') {\n\t\t@include _oTableRowStripes;\n\t}\n\n\t// Row headings.\n\t@if $row-headings-enabled and _oTableSupports('row-headings') {\n\t\t@include _oTableRowHeadings;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-flat.scss",
      "contents": "/// Styles for a 'FlatTable'\n/// @access private\n@mixin _oTableResponsiveFlat {\n\t.o-table.o-table--responsive-flat {\n\t\twidth: 100%;\n\n\t\t.o-table__duplicate-heading {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\tdisplay: block;\n\n\t\t\ttd,\n\t\t\tth,\n\t\t\ttr {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\ttr {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-flow: row wrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\ttd {\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\tthead th {\n\t\t\t\tdisplay: none;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\tthead tr {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\ttbody tr:not(:first-child) {\n\t\t\t\tborder-top: 1px solid _oTableGet('table-data-color');\n\t\t\t}\n\n\t\t\t&.o-table--row-stripes tbody tr:nth-child(even) th, // Remove stripes when flat.\n\t\t\ttbody tr:nth-child(even) {\n\t\t\t\tbackground-color: _oTableGet('table-item-alternate-background', 'flat');\n\t\t\t}\n\n\t\t\t&.o-table--horizontal-lines th:not(:last-of-type),\n\t\t\t&.o-table--horizontal-lines td:not(:last-of-type), {\n\t\t\t\t// When flat, only show row border if a colour is defined.\n\t\t\t\t// Else the browser will use a black border.\n\t\t\t\t@if _oTableGet('table-border-color') {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__duplicate-heading {\n\t\t\t\tdisplay: block;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-overflow.scss",
      "contents": "/// Styles for an 'OverflowTable'\n/// @require _oTableContainer\n/// @require _oTableWrapper\n/// @access private\n@mixin _oTableResponsiveOverflow {\n\t@include _oTableOverflowControlsOverlay;\n\t@include _oTableOverflowFadeOverlay;\n}\n\n/// Styles for controls which overlay the table. Such as scroll forward/back buttons,\n/// and a \"show more\" button to expand/contract a table with many items.\n@mixin _oTableOverflowControlsOverlay {\n\t.o-table-overflow-control-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\n\n\t\t.o-table-control {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: _oTableGet('table-background');\n\t\t\tpointer-events: all;\n\t\t\ttransition: 1s opacity ease-in-out;\n\t\t\tbutton {\n\t\t\t\t@include oButtons($size: 'big', $theme: 'primary');\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--expander {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\ttext-align: center;\n\t\t\tbutton {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward,\n\t\t.o-table-control--back {\n\t\t\t@supports (pointer-events: none)  {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: calc(50% - 20px);\n\t\t\t\ttransition: opacity 0.3s $o-visual-effects-transition-fade;\n\t\t\t}\n\t\t\tz-index: 1;\n\t\t}\n\n\t\t.o-table-control--back {\n\t\t\tleft: 0; //absolute\n\t\t\tfloat: left; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-left',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward {\n\t\t\tright: 0; //absolute\n\t\t\tfloat: right; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-right',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--hide {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.o-table-control--sticky {\n\t\t\tposition: sticky;\n\t\t}\n\t}\n\n\t.o-table-overflow-control-overlay--arrow-dock {\n\t\t// Create area left/right for arrows to scroll into (\"dock\").\n\t\t&:after,\n\t\t&:before {\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\tbottom: 0;\n\t\t\theight: 40px;\n\t\t\tpointer-events: none;\n\t\t\tborder-color: oButtonsGetColor('default', 'background', $theme: 'primary');\n\t\t\tborder-style: solid;\n\t\t\twidth: 1px;\n\t\t}\n\n\t\t&:before {\n\t\t\tleft: 0;\n\t\t\tborder-width: 0 40px 0 9px;\n\t\t}\n\n\t\t&:after {\n\t\t\tright: 0;\n\t\t\tborder-width: 0 9px 0 40px;\n\t\t}\n\n\t\t// Make more control leave space for arrows to dock left/right.\n\t\t.o-table-control--expander {\n\t\t\tleft: 51px;\n\t\t\tright: 51px;\n\t\t}\n\n\t\t// A modifier class which forces arrows to \"dock\" at the bottom of the overlay.\n\t\t.o-table-control--dock {\n\t\t\ttop: auto;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n}\n\n/// Styles to show scroll and expander fade out.\n@mixin _oTableOverflowFadeOverlay {\n\t.o-table-overflow-fade-overlay {\n\t\t@supports (pointer-events: none) {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n\n\t// Show horizontal fade when the table is scrolled.\n\t.o-table-overflow-fade-overlay--scroll {\n\t\t@if _oTableGet('table-background') {\n\t\t\tbackground: linear-gradient(to right, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-start)),\n\t\t\tlinear-gradient(to left, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-end));\n\t\t}\n\t}\n\n\t// Show vertical fade when the table is contracted.\n\t.o-table-container--contracted .o-table-overflow-fade-overlay:after {\n\t\t@if _oTableGet('table-background') {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 80px;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbackground: linear-gradient(to top, _oTableGet('table-background') 30px, rgba(_oTableGet('table-background'), 0) 80px);\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-scroll.scss",
      "contents": "/// Styles for a 'ScrollTable'\n/// @access private\n@mixin _oTableResponsiveScroll {\n\t.o-table--responsive-scroll {\n\n\t\t.o-table__duplicate-row {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\t// Remove standard border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:first-child) {\n\t\t\t\tborder: 0;\n\t\t\t}\n\n\t\t\t// Add responsive border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:last-child) {\n\t\t\t\ttd {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttr:not(.o-table__duplicate-row) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.o-table__duplicate-row {\n\t\t\t\tdisplay: table-row;\n\t\t\t}\n\n\t\t\tth {\n\t\t\t\tposition: sticky;\n\t\t\t\tleft: 0;\n\t\t\t\tbackground-color: _oTableGet('table-background');\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_row-headings.scss",
      "contents": "/// @brand internal\n/// @outputs Highlights table headings.\n/// @access private\n@mixin _oTableRowHeadings() {\n\t.o-table--row-headings > tbody th {\n\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_row-stripes.scss",
      "contents": "/// Add this to the table element to get row stripes\n/// @access private\n@mixin _oTableRowStripes() {\n\t.o-table--row-stripes {\n\t\tbackground-color: _oTableGet('table-background');\n\n\t\tcaption {\n\t\t\tbackground-color: _oTableGet('table-background');\n\t\t}\n\n\t\ttbody tr:nth-child(even) {\n\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\tth {\n\t\t\t\t// For sticky \"responsive-scroll\" headers.\n\t\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_sort.scss",
      "contents": "/// Tables styles to support sort buttons.\n/// @access private\n@mixin _oTableSort {\n\n\t.o-table--sortable thead th:not([data-o-table-heading-disable-sort]) {\n\t\tpadding-right: 0; // No header padding with a child sort icon.\n\t}\n\n\t// Sort button.\n\t.o-table__sort {\n\t\t// sass-lint:disable no-vendor-prefixes\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-moz-appearance: none;\n\t\t-webkit-appearance: none;\n\t\t// sass-lint:enable no-vendor-prefixes\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tpadding-right: 20px;\n\t\tmin-width: 60px;\n\t\ttext-align: left;\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrows-up-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tcontent: '';\n\t\t\tmargin-right: -20px;\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show descending icon in sort button with DSC sort applied.\n\t[aria-sort].o-table-sorting-descending .o-table__sort,\n\t[aria-sort='descending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show ascending icon in sort button with ascending sort applied or on hover with no sort.\n\t[aria-sort].o-table-sorting-ascending .o-table__sort,\n\tth[aria-sort='none']:hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\tth:not([aria-sort]):hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\t[aria-sort='ascending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-up', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_wrapper.scss",
      "contents": "/// Styles for a table wrapper to allow table to overflow.\n/// The wrapped table becomes scrollable on small viewports.\n/// @access private\n@mixin _oTableWrapper {\n\t.o-table-scroll-wrapper {\n\t\toverflow-y: hidden;\n\t\toverflow-x: auto;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\t-webkit-overflow-scrolling: touch; //sass-lint:disable-line no-vendor-prefixes\n\t}\n\n\t.o-table-overlay-wrapper {\n\t\tposition: relative;\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.js",
      "contents": "/*global require, module*/\nimport oTable from './src/js/oTable';\n\nconst constructAll = function() {\n\toTable.init();\n\tdocument.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\n\nexport default oTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "$o-table-is-silent: true !default;\n\n// Dependancies\n@import \"o-brand/main\";\n@import \"o-buttons/main\";\n@import \"o-colors/main\";\n@import \"o-grid/main\";\n@import \"o-icons/main\";\n@import \"o-typography/main\";\n@import \"o-visual-effects/main\";\n// Branding\n@import \"src/scss/brand\";\n// Main\n@import \"src/scss/base\";\n@import \"src/scss/borders\";\n@import \"src/scss/compact\";\n@import \"src/scss/container\";\n@import \"src/scss/lines\";\n@import \"src/scss/mixins\";\n@import \"src/scss/responsive-overflow\";\n@import \"src/scss/responsive-flat\";\n@import \"src/scss/responsive-scroll\";\n@import \"src/scss/row-headings\";\n@import \"src/scss/row-stripes\";\n@import \"src/scss/sort\";\n@import \"src/scss/wrapper\";\n\n@if ($o-table-is-silent == false) {\n\t@include oTable();\n\n\t// Set table to silent again to avoid being output twice\n\t$o-table-is-silent: true !global;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"FT-branded tables\",\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"components\",\n\t\"origamiVersion\": 1,\n\t\"brands\" : [\n\t\t\"master\",\n\t\t\"internal\",\n\t\t\"whitelabel\"\n\t],\n\t\"support\": \"https://github.com/Financial-Times/o-table/issues\",\n\t\"supportContact\": {\n\t\t\"email\": \"origami.support@ft.com\",\n\t\t\"slack\": \"financialtimes/ft-origami\"\n\t},\n\t\"supportStatus\": \"active\",\n\t\"browserFeatures\": {\n\t\t\"required\": [\n\t\t\t\"IntersectionObserver\",\n\t\t\t\"IntersectionObserverEntry\"\n\t\t]\n\t},\n\t\"demosDefaults\": {\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"dependencies\": [\n\t\t\t\"o-fonts@^3.0.0\",\n\t\t\t\"o-normalise@^1.0.0\",\n\t\t\t\"o-typography@v5.7.5\"\n\t\t]\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"title\": \"Basic\",\n\t\t\t\"name\": \"basic\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Compact\",\n\t\t\t\"name\": \"compact\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"modifierClass\": \"o-table--compact\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Caption and footnote\",\n\t\t\t\"name\": \"captions\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"showCaption\": true,\n\t\t\t\t\"showFooter\": true\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Caption elements may include flow content such as a heading, this demo uses o-typography to add a h2. The footer may also include any flow content, but in this case uses the footnote class to style a source.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Row headings\",\n\t\t\t\"name\": \"row-headings\",\n\t\t\t\"brands\": [\"internal\"],\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"template\": \"demos/src/row-headings.mustache\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Overflow\",\n\t\t\t\"name\": \"responsive-overflow\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"overflow\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. On small viewports this table overflows and may be scrolled left/right. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Scroll\",\n\t\t\t\"name\": \"responsive-scroll\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"scroll\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. This table moves headers into the first column on small viewports. The headers stick to the left edge as the table data is scrolled. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Flat\",\n\t\t\t\"name\": \"responsive-flat\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"flat\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. Each entry in the flat table is shown individually with headers on small viewports. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Expanding Table\",\n\t\t\t\"name\": \"expanding\",\n\t\t\t\"template\": \"demos/src/expanding.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"expanded\": \"false\"\n\t\t\t},\n\t\t\t\"description\": \"Open demo and shrink browser to preview. Responsive Overflow tables may be configured to expand/contract.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Expanding Table With Arrow Dock\",\n\t\t\t\"name\": \"expanding-dock\",\n\t\t\t\"template\": \"demos/src/expanding.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"expanded\": \"true\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-pad\",\n\t\t\t\"hidden\": true,\n\t\t\t\"description\": \"Open demo and shrink browser to preview. When expanding Responsive Overflow tables are tall and can be scrolled past, the left/right arrows \\\"dock\\\" next to the \\\"show more\\\" expand button.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Sorting\",\n\t\t\t\"name\": \"sorting\",\n\t\t\t\"template\": \"demos/src/sorting.mustache\",\n\t\t\t\"description\": \"This demo shows sorting columns of various data types, including FT style dates, times, and abbreviated numbers. The demo also shows a column with sort disabled.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Row Stripes\",\n\t\t\t\"name\": \"row-stripes\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"modifierClass\": \"o-table--row-stripes\",\n\t\t\t\t\"isStriped\": true\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Adds a modifier class to make alternate table rows striped. An alternative to lined tables.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Vertically centre\",\n\t\t\t\"name\": \"cell-styles\",\n\t\t\t\"template\": \"demos/src/cell-styles.mustache\",\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Pa11y\",\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"template\": \"demos/src/pa11y.mustache\",\n\t\t\t\"hidden\": true\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-table\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {\n\t\t\"@financial-times/o-colors\": \"^4.0.0\",\n\t\t\"@financial-times/o-grid\": \"^4.0.6\",\n\t\t\"@financial-times/o-icons\": \">=4.0.0 <6\",\n\t\t\"@financial-times/o-typography\": \"^5.0.0\",\n\t\t\"@financial-times/o-brand\": \"^3.1.1\",\n\t\t\"@financial-times/o-visual-effects\": \"^2.0.3\",\n\t\t\"@financial-times/o-buttons\": \"^5.14.0\",\n\t\t\"dom-delegate\": \"^2.2.0\"\n\t},\n\t\"component\": \"o-table\",\n\t\"scripts\": {\n\t\t\"heroku-postbuild\": \"npx origami-build-tools install && npm i serve && npx origami-build-tools demo\",\n\t\t\"start\": \"serve -l $PORT\"\n\t},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort/CellFormatter.js",
      "contents": "/**\n * Extracts the contents of img alt text.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractAltFromImages('<img alt=\"text\">'); // text\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} the parameter\n */\nfunction extractAltFromImages(cell){\n\tconst images = Array.from(cell.getElementsByTagName('img'));\n\timages.forEach(image => {\n\t\tconst contents = image.getAttribute('alt');\n\t\timage.insertAdjacentHTML('beforebegin', contents);\n\t\timage.remove();\n\t});\n\n\treturn cell;\n}\n\n/**\n * Returns the text represantation of an HTML node.\n * If a node contains no content `aria-label` or `title` attributes of <a>, <span>, or <i> child nodes are used.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractText('<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"mailto:example@ft.com\" title=\"Email Example at example@ft.com\"></a>'); //Email Example at example@ft.com\n * \textractText('<span class=\"o-icons-icon o-icons-icon--tick\">Correct</span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" title=\"Correct\"></span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"Correct\"></span>); //Correct\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} text representation of the HTML node\n */\nfunction extractText(cell){\n\tlet text = cell.textContent.trim();\n\t// No text found, check aria labels and titles.\n\t// Useful for icon-only cells.\n\tif (text === '') {\n\t\tconst nodes = cell.querySelectorAll('a, span, i');\n\t\ttext = Array.from(nodes).reduce((accumulator, node) => {\n\t\t\tconst nodeText = node.getAttribute('aria-label') || node.getAttribute('title');\n\t\t\treturn nodeText ? `${accumulator} ${nodeText}` : accumulator;\n\t\t}, '');\n\t}\n\treturn text.trim();\n}\n\n/**\n * Returns the text with abbreviations expanded.\n * Supports million 'm', billion 'bn' (1,000 million), and trillion 'tn' (1,000 billion).\n * @example\n *  expandAbbreviations('1m') //1000000\n *  expandAbbreviations('1.2bn') //2200000000\n *  expandAbbreviations('1tn') //1000000000000\n *  expandAbbreviations('5m-10m') //5000000-10000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with any supported abbreviations expanded\n */\nfunction expandAbbreviations(text) {\n\ttext = text.replace(/([\\d,.]+)([a-zA-Z]+)/g, (match, digit, abbreviation) => {\n\t\tconst zeros = {\n\t\t\t'm': 6,\n\t\t\t'bn': 9,\n\t\t\t'tn': 12\n\t\t};\n\t\treturn `${digit * Math.pow(10, zeros[abbreviation] || 0)}`;\n\t});\n\treturn text;\n}\n\n/**\n * Returns the text with digit group separators removed.\n * @example\n *  removeDigitGroupSeparator('1,000') //1000\n *  removeDigitGroupSeparator('40') //40\n *  removeDigitGroupSeparator('4,000,000') //4000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digit group separators (commas) removed.\n */\nfunction removeDigitGroupSeparators(text) {\n\treturn text.replace(/,/g, '');\n}\n\n/**\n * Returns the text with non-number characters removed (e.g. currency symbols).\n * Does not effect range characters e.g. \"–\" will be maintained.\n * If no digits were found to remove, returns the text unchanged.\n * @example\n *  extractDigitsIfFound('Rmb100') //100\n *  extractDigitsIfFound('CFA Fr830') //830\n *  extractDigitsIfFound('HK$12') //12\n *  extractDigitsIfFound('HK$12-HK$20') //12–20\n *  extractDigitsIfFound('1534956593-1534956620') //1534956593–1534956620\n *  extractDigitsIfFound('Some text') //Some text\n *  extractDigitsIfFound('Some text 123') //123\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digits characters only.\n */\nfunction extractDigitsIfFound(text) {\n\tconst digitsAndRange = text.replace(/([^\\d.,\\-\\–]+)/g, '');\n\tif (digitsAndRange === '') {\n\t\treturn text;\n\t}\n\treturn digitsAndRange;\n}\n\n/**\n * Returns a number from a range\n * @example\n *  removeRange('1534956593–1534956620') //1534956593\n *  removeRange('123–345') //123\n *  removeRange('123') //123\n *  removeRange('No numbers') //No numbers\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number}\n */\nfunction extractNumberFromRange(text) {\n\tconst number = parseFloat(text);\n\treturn isNaN(number) ? text : number;\n}\n\n/**\n * Parses FT style date and time and formats as a number for sorting.\n * FT date or date and time returns a UNIX epoch (UTC).\n * FT time returns a positive float for pm, negative for am.\n * @example\n *  ftDateTimeToNumber('August 17') //UNIX epoch, assumes current year\n *  ftDateTimeToNumber('September 12 2012') //UNIX epoch\n *  ftDateTimeToNumber('January 2012') //UNIX epoch, first of month\n *  ftDateTimeToNumber('March 12 2015 1am') //UNIX epoch including time\n *  ftDateTimeToNumber('April 20 2014 1.30pm') //UNIX epoch including time\n *  ftDateTimeToNumber('1am') //1\n *  ftDateTimeToNumber('1.30am') //1.3\n *  ftDateTimeToNumber('1.40pm') //13.4\n *  ftDateTimeToNumber('3pm') //15\n *  ftDateTimeToNumber('Not a known date') //Note a known date\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number} Number representation of date and/or time for sorting.\n */\nfunction ftDateTimeToNumber(text) {\n\tconst monthNames = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\t// FT style for writing dates: is June 23 2016 (no commas, month date year)\n\tconst date = text.match(/^([A-Za-z]{3,})(?:[\\s])(?=[\\d])((?:\\d{1,2})?(?![\\d]))?(?:\\s)?(\\d{4})?/);\n\t// FT style for writing time:\n\t// The 12 hour clock should be used: 1am, 9.30pm\n\tconst time = text.match(/(?:\\s|^)(\\d{1,2}(?:[.](\\d{2}))?)(pm|am)$/);\n\t// Get date.\n\tconst month = date && date[1] ? date[1] : null;\n\t// Get full month name from a given month e.g. 'January' for 'Jan'.\n\tconst matchingMonthNames = monthNames.filter((name) => name.indexOf(month) !== -1);\n\t// Get the index of the matching month name.\n\tconst monthIndex = matchingMonthNames && matchingMonthNames[0] ? monthNames.indexOf(matchingMonthNames[0]) : null;\n\tconst day = date && date[2] ? parseInt(date[2], 10) : null;\n\tlet year = date && date[3] ? parseInt(date[3], 10) : null;\n\tif (month && !year) {\n\t\t// For sorting purposes, assume a month is for this year if not otherwise specified.\n\t\tyear = (new Date()).getFullYear();\n\t}\n\t// Get time.\n\tconst hour = time && time[1] ? parseInt(time[1], 10) : null;\n\tconst minute = time && time[2] ? parseInt(time[2], 10) : 0;\n\tconst period = time ? time[3] : null;\n\tconst twentyFourHour = hour && period === 'pm' ? hour + 12 : hour;\n\t// Sort number for FT formated time.\n\tif (hour && !(year && monthIndex)) {\n\t\treturn parseFloat(`${twentyFourHour}.${minute}`);\n\t}\n\t// Unix epoch to sort FT formated date.\n\tconst dateObj = new Date(Date.UTC(year, monthIndex, day, twentyFourHour, minute));\n\treturn isNaN(dateObj.getTime()) ? text : dateObj.getTime();\n}\n\n/**\n * Removes and number of asterisk's which are at the end of the line.\n * @example\n *  removeRefereneAsterisk('Durian*') //Durian\n *  removeRefereneAsterisk('1,439,165.43**') //1,439,165.43\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text without source/reference asterisk.\n */\nfunction removeRefereneAsterisk(text) {\n\treturn text.replace(/\\*+$/, '');\n}\n\n/**\n * Removes indicators of an empty cell.\n * @example\n *  removeEmptyCellIndicators('n/a'); //\n *  removeEmptyCellIndicators('-'); //\n *  removeEmptyCellIndicators('Cell-content'); //Cell-content\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} An empty string or the original text.\n */\nfunction removeEmptyCellIndicators(text) {\n\t// Remove n/a\n\ttext = text.replace(/^n[./]a[.]?$/i, '');\n\t// Remove -\n\treturn text === '-' ? '' : text;\n}\n\n/**\n * Group of filters to extract text from a cell.\n * @param {HTMLElement} cell The node to extract sortable text from.\n * @access private\n * @returns {String} The node content to sort on.\n */\nfunction extractNodeContent(cell) {\n\tconst steps = [extractAltFromImages, extractText, removeRefereneAsterisk, removeEmptyCellIndicators];\n\tlet text = cell;\n\tsteps.forEach(step => { text = step(text); });\n\treturn typeof text === 'string' ? text : '';\n}\n\n/**\n * Group of filters to extract a number for sorting.\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number|String} A number if one could a extracted, string otherwise.\n */\nfunction extractNumber(text) {\n\tconst steps = [removeDigitGroupSeparators, expandAbbreviations, extractDigitsIfFound, extractNumberFromRange];\n\tsteps.forEach(step => { text = step(text); });\n\treturn text;\n}\n\n/**\n * Methods to format table cells for sorting.\n * @access public\n */\nclass CellFormatter {\n\n\tconstructor () {\n\t\t// This object is used to keep the running order of filter methods\n\t\tthis.filters = {\n\t\t\ttext: [extractNodeContent],\n\t\t\tnumber: [extractNodeContent, extractNumber],\n\t\t\tpercent: [extractNodeContent, extractNumber],\n\t\t\tcurrency: [extractNodeContent, extractNumber],\n\t\t\tnumeric: [extractNodeContent, extractNumber],\n\t\t\tdate: [extractNodeContent, ftDateTimeToNumber]\n\t\t};\n\t}\n\n\t/**\n\t * The `formatFunction` take the table cell HTMLElement,\n\t * and converts it to a String or Number of sorting.\n\t *\n\t * @callback formatFunction\n\t * @param {HTMLElement} cell\n\t * @return {String|Object}\n\t */\n\n\t/**\n\t * @param {String} type The data type of the cell to apply the filter function to.\n\t * @param {formatFunction} formatFunction The function to take the cell and return a sortable value (string/number).\n\t * @example\n\t *  mySortFormatter.setFormatter('emoji-time', (cell) => {\n\t *  \tconst text = cell.textContent.trim();\n\t *  \tif (text === '🌑') {\n\t *  \t\treturn 1;\n\t *  \t}\n\t *  \tif (text === '🌤️️') {\n\t *  \t\treturn 2;\n\t *  \t}\n\t *  \treturn 0;\n\t *  });\n\t * @access public\n\t */\n\tsetFormatter(type, formatFunction) {\n\t\tthis.filters[type] = [formatFunction];\n\t}\n\n\t/**\n\t * @param {HTMLElement} cell\n\t * @param {String} type The data type of the cell, e.g. date, number, currency. Custom types are supported.\n\t * @see {@link setFormatter} to support add support for a custom type.\n\t * @access public\n\t * @return {String|Number} A representation of cell which can be used for sorting.\n\t */\n\tformatCell({ cell, type = 'text' }) {\n\t\ttype = type || 'text';\n\t\tlet cellClone = cell.cloneNode({ deep: true });\n\t\tlet sortValue = cell.getAttribute('data-o-table-sort-value');\n\t\tif (sortValue === null) {\n\t\t\tif (this.filters[type]) {\n\t\t\t\tsortValue = cellClone;\n\t\t\t\tthis.filters[type].forEach(fn => { sortValue = fn(sortValue); });\n\t\t\t}\n\t\t\tcell.setAttribute('data-o-table-sort-value', sortValue);\n\t\t}\n\t\tconst sortValueIsNumber = sortValue !== '' && !isNaN(sortValue);\n\t\treturn sortValueIsNumber ? parseFloat(sortValue) : sortValue;\n\t}\n}\n\nexport default CellFormatter;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort/TableSorter.js",
      "contents": "import CellFormatter from \"./CellFormatter\";\n\n/**\n * Construct Intl.Collator if supported.\n *\n * @access private\n * @returns {Intl.Collator | Undefined}\n */\nfunction getIntlCollator() {\n\tif (typeof Intl !== 'undefined' && {}.hasOwnProperty.call(Intl, 'Collator')) {\n\t\treturn new Intl.Collator();\n\t}\n}\n\n/**\n * An ascending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\nfunction ascendingSort(a, b, intlCollator) {\n\tif ((typeof a === 'string' || a instanceof String) && (typeof b === 'string' || b instanceof String)) {\n\t\treturn intlCollator ? intlCollator.compare(a, b) : a.localeCompare(b);\n\t} else if ((!isNaN(b) && isNaN(a)) || a < b) {\n\t\treturn -1;\n\t} else if ((!isNaN(a) && isNaN(b)) || b < a) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * A descending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\nfunction descendingSort(...args) {\n\treturn 0 - ascendingSort.apply(this, args);\n}\n\n/**\n * Provides methods to sort table instances.\n */\nclass TableSorter {\n\n\tconstructor() {\n\t\tthis._cellFormatter = new CellFormatter();\n\t}\n\n\t/**\n\t * Sort the given table.\n\t *\n\t * @access public\n\t * @param {BaseTable} table - The table instance to sort.\n\t * @param {Number} columnIndex - The index of the table column to sort.\n\t * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n\t * @returns {undefined}\n\t */\n\tsortRowsByColumn(table, columnIndex, sortOrder) {\n\t\tconst tableHeaderElement = table.getTableHeader(columnIndex);\n\n\t\tif (['ascending', 'descending'].indexOf(sortOrder) === -1) {\n\t\t\tthrow new Error(`Sort order \"${sortOrder}\" is not supported. Must be \"ascending\" or \"descending\".`);\n\t\t}\n\n\t\t// Add class for immediate visual feedback (only update aria when table has sorted successfully).\n\t\twindow.requestAnimationFrame(() => {\n\t\t\ttableHeaderElement.classList.add(`o-table-sorting-${sortOrder}`);\n\t\t});\n\n\t\tconst intlCollator = getIntlCollator();\n\t\tconst cellFormatter = this._cellFormatter;\n\t\tconst type = tableHeaderElement.getAttribute('data-o-table-data-type') || undefined;\n\t\ttable.tableRows.sort((a, b) => {\n\t\t\tlet aCol = a.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n\t\t\tlet bCol = b.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n\t\t\taCol = cellFormatter.formatCell({ cell: aCol, type });\n\t\t\tbCol = cellFormatter.formatCell({ cell: bCol, type });\n\t\t\tif (sortOrder === 'ascending') {\n\t\t\t\treturn ascendingSort(aCol, bCol, intlCollator);\n\t\t\t} else {\n\t\t\t\treturn descendingSort(aCol, bCol, intlCollator);\n\t\t\t}\n\t\t});\n\n\t\twindow.requestAnimationFrame(() => {\n\t\t\ttable.tableRows.forEach((row) => {\n\t\t\t\ttable.tbody.appendChild(row);\n\t\t\t});\n\t\t\ttable.tableHeaders.forEach((header) => {\n\t\t\t\tconst headerSort = (header === tableHeaderElement ? sortOrder : 'none');\n\t\t\t\theader.setAttribute('aria-sort', headerSort);\n\t\t\t\theader.classList.remove(`o-table-sorting-ascending`);\n\t\t\t\theader.classList.remove(`o-table-sorting-descending`);\n\t\t\t});\n\t\t\ttable.sorted({\n\t\t\t\tcolumnIndex,\n\t\t\t\tsortOrder\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Set a custom cell formatter for a given data type.\n\t *\n\t * @param {String} type - The data type to apply the filter function to.\n\t * @param {formatFunction} formatFunction - Callback to format a table cell to a sort value.\n\t * @see {@link CellFormatter~setFormatter} for `formatFunction` details.\n\t * @access public\n\t */\n\tsetCellFormatterForType(type, formatFunction) {\n\t\tthis._cellFormatter.setFormatter(type, formatFunction);\n\t}\n}\n\nexport default TableSorter;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/BaseTable.js",
      "contents": "import Delegate from 'dom-delegate';\n\nclass BaseTable {\n\n\t/**\n\t * The shared functionality of all `o-table` variants.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {BaseTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tthis._listeners = [];\n\t\tthis._sorter = sorter;\n\t\tthis.rootEl = rootEl;\n\t\tthis._opts = Object.assign({\n\t\t\tsortable: this.rootEl.getAttribute('data-o-table-sortable') !== 'false'\n\t\t}, opts);\n\t\tthis.thead = this.rootEl.querySelector('thead');\n\t\tthis.tbody = this.rootEl.querySelector('tbody');\n\t\tthis.tableHeaders = this.thead ? Array.from(this.thead.querySelectorAll('th')) : [];\n\t\tthis.tableRows = this.tbody ? Array.from(this.tbody.getElementsByTagName('tr')) : [];\n\t\tthis.wrapper = this.rootEl.closest('.o-table-scroll-wrapper');\n\t\tthis.container = this.rootEl.closest('.o-table-container');\n\t\tthis.overlayWrapper = this.rootEl.closest('.o-table-overlay-wrapper');\n\t\tthis._rootElDomDelegate = new Delegate(this.rootEl);\n\t}\n\n\t/**\n\t * Gets a table header for a given column index.\n\t *\n\t * @access public\n\t * @param {Number} columnIndex - The index of the table column to get the header for.\n\t * @throws When no header is not found.\n\t * @returns {HTMLElement}\n\t */\n\tgetTableHeader(columnIndex) {\n\t\tconst th = this.tableHeaders[columnIndex];\n\t\tif (!th) {\n\t\t\tthrow new Error(`Could not find header for column index \"${columnIndex}\".`);\n\t\t}\n\t\treturn th;\n\t}\n\n\t/**\n\t * Sort the table.\n\t *\n\t * @access public\n\t * @param {Number} columnIndex - The index of the table column to sort.\n\t * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n\t * @returns {undefined}\n\t */\n\tsortRowsByColumn(columnIndex, sortOrder) {\n\t\t/**\n\t\t * Fires an \"oTable.sorting\" event. The sorting event can be cancelled to\n\t\t * provide a totally custom method of sorting the table.\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n\t\t */\n\t\tconst defaultSort = this._dispatchEvent('sorting', {\n\t\t\tsort: sortOrder,\n\t\t\tcolumnIndex\n\t\t}, { cancelable: true });\n\n\t\tif (defaultSort) {\n\t\t\tthis._sorter.sortRowsByColumn(this, columnIndex, sortOrder);\n\t\t}\n\t}\n\n\t/**\n\t * Add sort buttons to the DOM within the table header.\n\t * @returns {undefined}\n\t */\n\taddSortButtons() {\n\t\tif (!this._opts.sortable) {\n\t\t\treturn;\n\t\t}\n\t\tthis.rootEl.classList.add('o-table--sortable');\n\t\tthis.tableHeaders.forEach(function (th) {\n\t\t\t// Don't add sort buttons to unsortable columns.\n\t\t\tif (th.hasAttribute('data-o-table-heading-disable-sort')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Move heading text into button.\n\t\t\tconst sortButton = document.createElement('button');\n\t\t\tconst heading = th.textContent;\n\t\t\tsortButton.textContent = heading;\n\t\t\t// In VoiceOver, button `aria-label` is repeated when moving from one column of tds to the next.\n\t\t\t// Using `title` avoids this, but risks not being announced by other screen readers.\n\t\t\tsortButton.classList.add('o-table__sort');\n\t\t\tsortButton.setAttribute('title', `sort table by ${heading}`);\n\t\t\tth.innerHTML = '';\n\t\t\tth.appendChild(sortButton);\n\t\t\t// Add click event to buttons.\n\t\t\tconst listener = this._sortButtonHandler.bind(this);\n\t\t\tthis._rootElDomDelegate.on('click', '.o-table__sort', listener);\n\t\t}.bind(this));\n\t}\n\n\t/**\n\t * Indicate that the table has been sorted after intercepting the sorting event.\n\t *\n\t * @access public\n\t * @param {Object} sortDetails - Details of the current sort state.\n\t * @param {Number|Null} sortDetails.columnIndex - The index of the currently sorted column.\n\t * @param {String|Null} sortDetails.sortOrder - The type of sort, \"ascending\" or \"descending\"\n\t */\n\tsorted({ columnIndex, sortOrder }) {\n\t\tif (isNaN(columnIndex)) {\n\t\t\tthrow new Error(`Expected a numerical column index but received \"${columnIndex}\".`);\n\t\t}\n\t\tif (!sortOrder) {\n\t\t\tthrow new Error(`Expected a sort order e.g. \"ascending\" or \"descending\".`);\n\t\t}\n\t\tthis._dispatchEvent('sorted', {\n\t\t\tsortOrder,\n\t\t\tcolumnIndex\n\t\t});\n\t}\n\n\t/**\n\t * Gets the instance ready for deletion.\n\t * Removes event listeners that were added during instatiation of the component.\n\t * @access public\n\t * @returns {undefined}\n\t */\n\tdestroy() {\n\t\tthis._rootElDomDelegate.destroy();\n\t\tthis._listeners.forEach(({ type, listener, element }) => {\n\t\t\telement.removeEventListener(type, listener);\n\t\t});\n\t}\n\n\t/**\n\t * Indicate that the table has been constructed successfully.\n\t * @returns {undefined}\n\t */\n\t_ready() {\n\t\tthis._dispatchEvent('ready');\n\t}\n\n\t/**\n\t * Handles a sort button click event. Toggles column sort.\n\t * @param {MouseEvent} event - The click event.\n\t * @returns {undefined}\n\t */\n\t_sortButtonHandler(event) {\n\t\tconst sortButton = event.target;\n\t\tconst th = sortButton.closest('th');\n\t\tconst columnIndex = this.tableHeaders.indexOf(th);\n\t\tif (th && !isNaN(columnIndex)) {\n\t\t\tconst currentSort = th.getAttribute('aria-sort');\n\t\t\tconst sortOrder = [null, 'none', 'descending'].indexOf(currentSort) !== -1 ? 'ascending' : 'descending';\n\t\t\tthis.sortRowsByColumn(columnIndex, sortOrder);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to dispatch namespaced events.\n\t *\n\t * @param {String} event - The event name within `oTable` e.g. \"sorted\".\n\t * @param {Object} data={} - Event data. `insatnce` is added automatically.\n\t * @param {Object} opts={} - [Event options]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event/Event#Values} (o-table events bubble by default).\n\t */\n\t_dispatchEvent(event, data = {}, opts = {}) {\n\t\tObject.assign(data , {\n\t\t\tinstance: this\n\t\t});\n\t\treturn this.rootEl.dispatchEvent(new CustomEvent(`oTable.${event}`, Object.assign({\n\t\t\tdetail: data,\n\t\t\tbubbles: true\n\t\t}, opts)));\n\t}\n}\n\nexport default BaseTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/BasicTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass BasicTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component without responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {BasicTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n}\n\nexport default BasicTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/FlatTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass FlatTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component with \"flat\" responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {FlatTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\t// Flat table can only work given headers.\n\t\tif (this.tableHeaders.length > 0) {\n\t\t\tthis._duplicateHeaders(rootEl);\n\t\t} else {\n\t\t\tconsole.warn('Could not create a \"flat\" table as no headers were found. Ensure table headers are placed within \"<thead>\". Removing class \"o-table--responsive-flat\".', rootEl);\n\t\t\trootEl.classList.remove('o-table--responsive-flat');\n\t\t}\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Duplicate table headers for each tabel row.\n\t */\n\t_duplicateHeaders() {\n\t\tthis.tableRows.forEach((row) => {\n\t\t\tconst data = Array.from(row.getElementsByTagName('td'));\n\t\t\tdata.forEach((td, dataIndex) => {\n\t\t\t\tconst clonedHeader = this.tableHeaders[dataIndex].cloneNode(true);\n\t\t\t\tclonedHeader.setAttribute('scope', 'row');\n\t\t\t\tclonedHeader.setAttribute('role', 'rowheader');\n\t\t\t\tclonedHeader.classList.add('o-table__duplicate-heading');\n\t\t\t\ttd.parentNode.insertBefore(clonedHeader, td);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default FlatTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/OverflowTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass OverflowTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component with \"overflow\" responsive behaviour.\n\t *\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @param {Undefined | Bool} opts.expanded\n\t * @param {Number} opts.minimumRowCount [20]\n\t * @access public\n\t * @returns {OverflowTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\tthis._opts = Object.assign({\n\t\t\texpanded: this.rootEl.hasAttribute('data-o-table-expanded') ? this.rootEl.getAttribute('data-o-table-expanded') !== 'false' : null,\n\t\t\tminimumRowCount: this.rootEl.getAttribute('data-o-table-minimum-row-count')\n\t\t}, this._opts);\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\twindow.requestAnimationFrame(this._setupScroll.bind(this));\n\t\twindow.requestAnimationFrame(this._setupExpander.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check if the table is expanded (true) or collapsed (false).\n\t * @access public\n\t * @returns {Bool}\n\t */\n\tisExpanded() {\n\t\tconst value = this.rootEl.getAttribute('data-o-table-expanded');\n\t\treturn Boolean(value !== 'false');\n\t}\n\n\t/**\n\t * Check if the table supports the expand/contract feature.\n\t * @access public\n\t * @returns {Bool}\n\t */\n\tcanExpand() {\n\t\treturn typeof this._opts.expanded === 'boolean' && (this._minimumRowCount < this.tableRows.length);\n\t}\n\n\t/**\n\t * Hides table rows if the table can be expanded.\n\t * @access public\n\t * @returns undefined\n\t */\n\tcontractTable() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\t\t// Expander not setup until next frame. Update options.\n\t\tif (!this.controls) {\n\t\t\tthis._opts.expanded = false;\n\t\t\treturn;\n\t\t}\n\t\tconst expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n\t\tconst rowsToHide = this._rowsToHide;\n\t\tconst originalButtonTopOffset = this.controls.expanderButton.getBoundingClientRect().top;\n\t\t// Calculate contracted table height.\n\t\t// Extra height to tease half of the first hidden row.\n\t\tconst tableHeight = this.rootEl.getBoundingClientRect().height;\n\t\tconst rowsToHideHeight = rowsToHide.reduce((accumulatedHeight, row) => {\n\t\t\treturn accumulatedHeight + row.getBoundingClientRect().height;\n\t\t}, 0);\n\t\tconst extraHeight = (rowsToHide[0] ? rowsToHide[0].getBoundingClientRect().height / 2 : 0);\n\t\tconst contractedHeight = tableHeight + extraHeight - rowsToHideHeight;\n\t\t// Contract table.\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis._updateRowVisibility(false);\n\t\t\tthis.rootEl.setAttribute('aria-expanded', false);\n\t\t\tthis.rootEl.setAttribute('data-o-table-expanded', false);\n\t\t\tthis.wrapper.style.height = `${contractedHeight}px`;\n\t\t\tthis.container.classList.remove('o-table-container--expanded');\n\t\t\tthis.container.classList.add('o-table-container--contracted');\n\t\t\tif (expanderButton) {\n\t\t\t\texpanderButton.textContent = 'Show more';\n\t\t\t\t// Keep more/fewer button in viewport when contracting table.\n\t\t\t\t// Using `window.scroll(x-coord, y-coord)` as IE11 did not scroll\n\t\t\t\t// correctly with `window.scroll(options)`.\n\t\t\t\tconst top = window.pageYOffset + this.controls.expanderButton.getBoundingClientRect().top - originalButtonTopOffset;\n\t\t\t\twindow.scroll(null, top);\n\t\t\t}\n\t\t\tthis._updateControls();\n\t\t});\n\t}\n\n\t/**\n\t * Expands the table, revealing hidden table rows, if it can be expanded and has been contracted.\n\t * @access public\n\t * @returns undefined\n\t */\n\texpandTable() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\t\t// Expander not setup until next frame. Update options.\n\t\tif (!this.controls) {\n\t\t\tthis._opts.expanded = true;\n\t\t\treturn;\n\t\t}\n\t\tconst expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis.container.classList.remove('o-table-container--contracted');\n\t\t\tthis.container.classList.add('o-table-container--expanded');\n\t\t\tif (expanderButton) {\n\t\t\t\texpanderButton.textContent = 'Show fewer';\n\t\t\t}\n\t\t\tthis.wrapper.style.height = '';\n\t\t\tthis._updateRowVisibility(true);\n\t\t\tthis.rootEl.setAttribute('aria-expanded', true);\n\t\t\tthis.rootEl.setAttribute('data-o-table-expanded', true);\n\t\t\tthis._updateControls();\n\t\t});\n\t}\n\n\t/**\n\t * Performs post-sort actions such as updating row visibility and firing a `oTable.sorted` event.\n\t * Required as the sort event can be intercepted for a custom implementation.\n\t *\n\t * @access public\n\t * @param {Object} sortDetail An object containing information about the sort.\n\t * @param {Number} sortDetail.columnIndex The index of the column which has been sorted.\n\t * @param {String} sortDetail.sortAscending The order of the sort i.e. ascending or descending.\n\t * @returns undefined\n\t */\n\tsorted({columnIndex, sortOrder}) {\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis._updateRowVisibility(this.isExpanded());\n\t\t\tsuper.sorted({ columnIndex, sortOrder });\n\t\t});\n\t}\n\n\t/**\n\t * Update row aria attributes to show/hide them.\n\t * E.g. After performing a sort, rows which where hidden in the colapsed table may have become visible.\n\t * @param {boolean} expanded - Update row visibility for an expanded or contracted table.\n\t * @returns {undefined}\n\t */\n\t_updateRowVisibility(expanded) {\n\t\tconst visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n\t\tconst hiddenRows = expanded ? [] : this.tableRows.slice(visibleRowCount, this.tableRows.length);\n\t\tthis.tableRows.forEach((row) => {\n\t\t\trow.setAttribute('aria-hidden', hiddenRows && hiddenRows.indexOf(row) !== -1 ? 'true' : 'false');\n\t\t});\n\t}\n\n\t/**\n\t * Add controls such as the back, forward, \"show more\" buttons to DOM,\n\t * plus wrappers needed for them to function.\n\t * @returns {undefined}\n\t */\n\t_addControlsToDom() {\n\t\tif (this.overlayWrapper && !this.controls) {\n\t\t\tconst supportsArrows = OverflowTable._supportsArrows();\n\t\t\tthis.overlayWrapper.insertAdjacentHTML('beforeend', `\n\t\t\t\t${this.wrapper ? `\n\t\t\t\t\t<div class=\"o-table-overflow-fade-overlay\" style=\"display: none;\"></div>\n\t\t\t\t` : ''}\n\t\t\t\t<div class=\"o-table-overflow-control-overlay\" style=\"display: none;\">\n\t\t\t\t\t${this.wrapper && supportsArrows ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--back o-table-control--hide\">\n\t\t\t\t\t\t\t<button aria-label=\"visually scroll table back\" disabled=\"true\" class=\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-left\"></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\n\t\t\t\t\t${this.wrapper && supportsArrows ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--forward o-table-control--hide\">\n\t\t\t\t\t\t\t<button aria-label=\"visually scroll table forward\" disabled=\"true\" class=\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-right\"></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\n\t\t\t\t\t${this.canExpand() ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--expander\">\n\t\t\t\t\t\t\t<button class=\"o-buttons o-buttons--primary o-buttons--big\">Show fewer</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\t\t\t\t</div>\n\t\t\t`);\n\n\t\t\tthis.controls = {\n\t\t\t\tcontrolsOverlay: this.overlayWrapper.querySelector('.o-table-overflow-control-overlay'),\n\t\t\t\tfadeOverlay: this.overlayWrapper.querySelector('.o-table-overflow-fade-overlay'),\n\t\t\t\texpanderButton: this.overlayWrapper.querySelector('.o-table-control--expander'),\n\t\t\t\tforwardButton: this.overlayWrapper.querySelector('.o-table-control--forward'),\n\t\t\t\tbackButton: this.overlayWrapper.querySelector('.o-table-control--back')\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Add functionality to improve the experience when scrolling a table,\n\t * such as showing forward/back buttons to indicate that scroll is possible.\n\t * @returns {undefined}\n\t */\n\t_setupScroll() {\n\t\t// Does not warn of a missing wrapper: assumes no overflow is desired.\n\t\tif (this.container && this.overlayWrapper && !this.wrapper) {\n\t\t\tconsole.warn(\n\t\t\t\t'Controls to scroll table left/right could not be added to \"o-table\" as it is missing markup. ' +\n\t\t\t\t'Please add the container and wrapper elements according to the documentation https://registry.origami.ft.com/components/o-table.',\n\t\t\t\t{ table: this.rootEl }\n\t\t\t);\n\t\t}\n\n\t\t// Can not add controls without a container or wrapper.\n\t\tif (!this.container || !this.overlayWrapper || !this.wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add table controls (e.g. left/right button).\n\t\tif (!this.controls) {\n\t\t\tthis._addControlsToDom();\n\t\t}\n\n\t\t// Add forward button behaviour.\n\t\tif (this.controls.forwardButton) {\n\t\t\tconst scrollForward = function () {\n\t\t\t\tthis.wrapper.scrollBy({\n\t\t\t\t\tleft: (document.body.clientWidth / 2),\n\t\t\t\t\tbehavior: 'smooth'\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t\tthis.controls.forwardButton.addEventListener('click', scrollForward);\n\t\t\tthis._listeners.push({\n\t\t\t\telement: this.controls.forwardButton,\n\t\t\t\tscrollForward,\n\t\t\t\ttype: 'click'\n\t\t\t});\n\t\t}\n\n\t\t// Add back button behaviour.\n\t\tif (this.controls.backButton) {\n\t\t\tconst scrollBackward = function () {\n\t\t\t\tthis.wrapper.scrollBy({\n\t\t\t\t\tleft: -(document.body.clientWidth / 2),\n\t\t\t\t\tbehavior: 'smooth'\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t\tthis.controls.backButton.addEventListener('click', scrollBackward);\n\t\t\tthis._listeners.push({\n\t\t\t\telement: this.controls.backButton,\n\t\t\t\tscrollBackward,\n\t\t\t\ttype: 'click'\n\t\t\t});\n\t\t}\n\n\t\t// Set scroll position and update controls.\n\t\tconst updateScroll = function () {\n\t\t\tthis._setScrollPosition();\n\t\t\tthis._updateControls();\n\t\t}.bind(this);\n\t\tupdateScroll();\n\n\t\t// Observe controls scrolling beyond table and update.\n\t\tif (this.controls.controlsOverlay && window.IntersectionObserver) {\n\t\t\t// Fade forward/back buttons at start and end of table.\n\t\t\tconst arrowFadeObserverConfig = {\n\t\t\t\troot: this.controls.controlsOverlay,\n\t\t\t\tthreshold: 1.0,\n\t\t\t\trootMargin: `-50px 0px ${this.controls.expanderButton ? '0px' : '-10px'} 0px`\n\t\t\t};\n\t\t\tconst arrowFadeObserver = new IntersectionObserver(function(entries) {\n\t\t\t\tentries.forEach(function(entry) {\n\t\t\t\t\tentry.target.setAttribute('data-o-table-intersection', entry.intersectionRatio !== 1);\n\t\t\t\t\tupdateScroll();\n\t\t\t\t});\n\t\t\t}, arrowFadeObserverConfig);\n\t\t\tif (this.controls.backButton) {\n\t\t\t\tarrowFadeObserver.observe(this.controls.backButton);\n\t\t\t}\n\t\t\tif (this.controls.forwardButton) {\n\t\t\t\tarrowFadeObserver.observe(this.controls.forwardButton);\n\t\t\t}\n\t\t}\n\n\t\t// Add other event listeners to update controls.\n\t\tthis.wrapper.addEventListener('scroll', updateScroll);\n\t\twindow.addEventListener('resize', updateScroll);\n\t\twindow.addEventListener('load', updateScroll);\n\t\tthis._listeners.push({ element: this.wrapper, updateScroll, type: 'scroll' });\n\t\tthis._listeners.push({element: window, updateScroll, type: 'resize'});\n\t\tthis._listeners.push({element: window, updateScroll, type: 'load'});\n\t}\n\n\t/**\n\t * Add hide/show functionality for long tables.\n\t * @returns {undefined}\n\t */\n\t_setupExpander() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.container || !this.overlayWrapper || !this.wrapper) {\n\t\t\tthrow new Error(\n\t\t\t\t'Controls to expand/contract the table could not be added to \"o-table\" as it is missing markup.' +\n\t\t\t\t'Please add the container and wrapper element according to the documentation https://registry.origami.ft.com/components/o-table.'\n\t\t\t);\n\t\t}\n\n\t\t// Add table controls (e.g. \"more\" button).\n\t\tif (!this.controls) {\n\t\t\tthis._addControlsToDom();\n\t\t}\n\n\t\tif (this.controls.expanderButton) {\n\t\t\tconst toggleExpanded = function () {\n\t\t\t\tif (this.isExpanded()) {\n\t\t\t\t\tthis.contractTable();\n\t\t\t\t} else {\n\t\t\t\t\tthis.expandTable();\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\tthis.controls.expanderButton.addEventListener('click', toggleExpanded);\n\t\t\tthis._listeners.push({element: this.controls.expanderButton, toggleExpanded, type: 'click'});\n\t\t}\n\n\t\tif (this._opts.expanded){\n\t\t\tthis.expandTable();\n\t\t} else {\n\t\t\tthis.contractTable();\n\t\t}\n\t}\n\n\t/**\n\t * Set table scroll position in wrapper.\n\t * @returns {undefined}\n\t */\n\t_setScrollPosition() {\n\t\tthis._fromEnd = this.wrapper.scrollWidth - this.wrapper.clientWidth - this.wrapper.scrollLeft;\n\t\tthis._fromStart = this.wrapper.scrollLeft;\n\t}\n\n\t/**\n\t * Update all controls and their overlays,\n\t * e.g. forward/back arrow visibility, visibility of arrow dock, overlay fade.\n\t * @returns {undefined}\n\t */\n\t_updateControls() {\n\t\tif (!this._controlUpdateScheduled) {\n\t\t\tthis._controlUpdateScheduled = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\t// Toggle fade.\n\t\t\t\tthis.controls.fadeOverlay.classList.toggle('o-table-overflow-fade-overlay--scroll', this._canScrollTable);\n\t\t\t\tthis.controls.fadeOverlay.style.setProperty('--o-table-fade-from-end', `${Math.min(this._fromEnd, 10)}px`);\n\t\t\t\tthis.controls.fadeOverlay.style.setProperty('--o-table-fade-from-start', `${Math.min(this._fromStart, 10)}px`);\n\n\t\t\t\t// Toggle arrow dock.\n\t\t\t\tthis.controls.controlsOverlay.classList.toggle('o-table-overflow-control-overlay--arrow-dock', this._showArrowDock);\n\n\t\t\t\t// Update forward/back scroll controls.\n\t\t\t\tif (OverflowTable._supportsArrows()) {\n\t\t\t\t\tthis._updateScrollControl(this.controls.forwardButton);\n\t\t\t\t\tthis._updateScrollControl(this.controls.backButton);\n\t\t\t\t}\n\n\t\t\t\t// Make controls visible.\n\t\t\t\tthis.controls.controlsOverlay.style.display = '';\n\t\t\t\tthis.controls.fadeOverlay.style.display = '';\n\t\t\t\tthis._controlUpdateScheduled = false;\n\t\t\t}.bind(this), 33);\n\t\t}\n\t}\n\n\t/**\n\t * Update the visibility of a scroll forward/back button.\n\t * @param {HTMLElement} element - The button wrapper.\n\t * @returns {undefined}\n\t */\n\t_updateScrollControl(element) {\n\t\t// Make arrows sticky if table is tall and can be scrolled past.\n\t\telement.classList.toggle('o-table-control--sticky', this._stickyArrows);\n\t\t// Place the arrows in the doc if they are not sticky.\n\t\tconst arrowsDocked = this._showArrowDock && !this._stickyArrows;\n\t\telement.classList.toggle('o-table-control--dock', arrowsDocked);\n\t\t// Hide scroll buttons if the table fits within the viewport.\n\t\tif (this._canScrollTable) {\n\t\t\telement.style.display = '';\n\t\t} else {\n\t\t\telement.style.display = 'none';\n\t\t}\n\t\t// Disable forward button if the table is scrolled to the end.\n\t\tconst scrolledToBoundary = (this._fromEnd <= 0 && element === this.controls.forwardButton) || (this._fromStart <= 0 && element === this.controls.backButton);\n\t\tconst outsideTable = element.getAttribute('data-o-table-intersection') === 'true';\n\t\tif (outsideTable) {\n\t\t\telement.querySelector('button').setAttribute('disabled', true);\n\t\t\telement.classList.add('o-table-control--hide');\n\t\t}\n\n\t\tif (!scrolledToBoundary && !outsideTable) {\n\t\t\telement.querySelector('button').removeAttribute('disabled');\n\t\t\telement.classList.remove('o-table-control--hide');\n\t\t}\n\n\t\tif (scrolledToBoundary && !outsideTable) {\n\t\t\telement.querySelector('button').setAttribute('disabled', true);\n\t\t\tconst hideControl = !arrowsDocked && (!this._stickyArrows || this._stickyArrows && !this._canScrollPastTable);\n\t\t\telement.classList.toggle('o-table-control--hide', hideControl);\n\t\t}\n\t}\n\n\t/**\n\t * The number of rows to display if the table is collapsed.\n\t * @returns {Number}\n\t */\n\tget _minimumRowCount() {\n\t\tconst minimumRowCount = this._opts.minimumRowCount;\n\t\treturn isNaN(parseInt(minimumRowCount, 10)) ? 20 : parseInt(minimumRowCount, 10);\n\t}\n\n\t/**\n\t * The number rows which will be hidden if the table is collapsed.\n\t * @returns {Number}\n\t */\n\tget _rowsToHide() {\n\t\tconst visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n\t\treturn this.tableRows.slice(visibleRowCount, this.tableRows.length);\n\t}\n\n\t/**\n\t * Check if the table can be scrolled.\n\t * @returns {Boolean}\n\t */\n\tget _canScrollTable() {\n\t\treturn this._fromEnd > 0 || this._fromStart > 0;\n\t}\n\n\t/**\n\t * Check if the table can fit within the viewport vertically.\n\t * @returns {Boolean}\n\t */\n\tget _tableTallerThanViewport() {\n\t\treturn this.container.getBoundingClientRect().height > document.documentElement.clientHeight;\n\t}\n\n\t/**\n\t * Check if the document is long enough to scroll beyond the table enough for sticky arrows to dock at the bottom.\n\t * I.e. Scroll past the table by at least 50% of the viewport.\n\t * @returns {Boolean}\n\t */\n\tget _canScrollPastTable() {\n\t\treturn this.container.getBoundingClientRect().bottom + (document.documentElement.clientHeight / 2) < document.documentElement.getBoundingClientRect().bottom;\n\t}\n\n\t/**\n\t * Check if the \"dock\" at the bottom of the table should be shown.\n\t * After scrolling past the table, sticky arrows sit within the dock at the bottom of the table.\n\t * @returns {Boolean}\n\t */\n\tget _showArrowDock() {\n\t\treturn OverflowTable._supportsArrows() && this._canScrollTable && this._canScrollPastTable && this.canExpand() && this._rowsToHide.length !== 0;\n\t}\n\n\t/**\n\t * Check if left/right controls should be sticky.\n\t * @returns {Boolean}\n\t */\n\tget _stickyArrows() {\n\t\treturn OverflowTable._supportsArrows() && this._tableTallerThanViewport;\n\t}\n\n\t/**\n\t * Check if sticky buttons are supported.\n\t * @returns {Boolean}\n\t */\n\tstatic _supportsArrows() {\n\t\treturn typeof CSS !== 'undefined' && (CSS.supports(\"position\", \"sticky\") || CSS.supports('position', '-webkit-sticky'));\n\t}\n}\n\nexport default OverflowTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/ScrollTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass ScrollTable extends BaseTable {\n\t/**\n\t * Initialises an `o-table` component with \"scroll\" responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {ScrollTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\tthis._duplicateRowsWithAddedHeader();\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Duplicate the table headers into a one tbody row.\n\t * @returns {undefined}\n\t */\n\t_duplicateRowsWithAddedHeader() {\n\t\tthis.tableHeaders.forEach((header, index) => {\n\t\t\tconst headerRow = document.createElement('tr');\n\t\t\theaderRow.classList.add('o-table__duplicate-row');\n\t\t\t// Clone column heading and turn into a row heading.\n\t\t\tconst clonedHeader = header.cloneNode(true);\n\t\t\tclonedHeader.setAttribute('scope', 'row');\n\t\t\tclonedHeader.setAttribute('role', 'rowheader');\n\t\t\theaderRow.appendChild(clonedHeader);\n\t\t\t// Clone data for the column into the new row.\n\t\t\tthis.tableRows.forEach(row => {\n\t\t\t\tconst data = row.querySelectorAll('td')[index];\n\t\t\t\theaderRow.appendChild(data.cloneNode(true));\n\t\t\t});\n\t\t\tthis.tbody.appendChild(headerRow);\n\t\t});\n\t}\n}\n\nexport default ScrollTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/oTable.js",
      "contents": "import FlatTable from './Tables/FlatTable';\nimport ScrollTable from './Tables/ScrollTable';\nimport OverflowTable from './Tables/OverflowTable';\nimport BasicTable from './Tables/BasicTable';\n\nimport TableSorter from './Sort/TableSorter';\nconst sorter = new TableSorter();\n\n\nclass OTable {\n\n\t/**\n\t * Table options.\n\t * @typedef {Object} OTable~opts - Table options.\n\t * @property {Bool} sortable [true] - Disable the table's sort feature.\n\t * @property {Undefined | Bool} expanded [Undefined] - Allow the \"OverflowTable\" to hide results behind a \"show more\" button. The table is expanded by default when \"true\", contracted when \"false\", or not expandable if not set.\n\t * @property {Number} minimumRowCount [20] - When the `expanded` option is set, the number of rows to show when the table is not expanded.\n\t */\n\n\t/**\n\t * Constructs an o-table component.\n\t *\n\t * @param {HTMLElement} - An o-table element.\n\t * @param {...OTable~opts} opts - A table options object.\n\t * @returns {FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance.\n\t */\n\tconstructor(rootEl, opts = {}) {\n\t\tconst tableType = rootEl.getAttribute('data-o-table-responsive');\n\t\tlet Table;\n\t\tswitch (tableType) {\n\t\t\tcase 'flat':\n\t\t\t\tTable = FlatTable;\n\t\t\t\tbreak;\n\t\t\tcase 'scroll':\n\t\t\t\tTable = ScrollTable;\n\t\t\t\tbreak;\n\t\t\tcase 'overflow':\n\t\t\t\tTable = OverflowTable;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tTable = BasicTable;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn new Table(rootEl, sorter, opts);\n\t}\n\n\t/**\n\t * Constructs all o-table components inside the element passed as the first parameter.\n\t *\n\t * @access public\n\t * @param {(HTMLElement|string)} [el=document.body] - Element where to search for o-table components. You can pass an HTMLElement or a selector string.\n\t * @param {...OTable~opts} opts - A table options object.\n\t * @returns {Array<FlatTable | ScrollTable | OverflowTable | BasicTable> | FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance or array of table instances.\n\t */\n\tstatic init(el = document.body, opts = {}) {\n\t\tif (!(el instanceof HTMLElement)) {\n\t\t\tel = document.querySelector(el);\n\t\t}\n\t\tif (/\\bo-table\\b/.test(el.getAttribute('data-o-component'))) {\n\t\t\treturn new OTable(el, opts);\n\t\t}\n\t\tconst tableEls = Array.from(el.querySelectorAll('[data-o-component~=\"o-table\"]'));\n\t\treturn tableEls.map(el => {\n\t\t\treturn new OTable(el, opts);\n\t\t});\n\t}\n\n\n\t/**\n\t * The custom formatter accepts a table cell and returns a sort value for that cell.\n\t * This could be used to define a custom sort order for an unsupported format, such as emoji's, or a new date format.\n\t *\n\t * @callback formatFunction\n\t * @param {HTMLElement} cell\n\t */\n\n\t/**\n\t * Set a custom sort formatter for a given data type.\n\t *\n\t * @example <caption>Mapping table cells which contain emojis to a numerical sort value.</caption>\n\t *\tconst OTable = require('o-table');\n\t *\t// Set a filter for custom data type \"emoji-time\".\n\t *\t// The return value may be a string or number.\n\t *\tOTable.setSortFormatterForType('emoji-time', (cell) => {\n\t *\t\tconst text = cell.textContent.trim();\n\t *\t\tif (text === '🌑') {\n\t *\t\t\treturn 1;\n\t *\t\t}\n\t *\t\tif (text === '🌤️️') {\n\t *\t\t\treturn 2;\n\t *\t\t}\n\t *\t\treturn 0;\n\t *\t});\n\t *\tOTable.init();\n\t *\n\t * @param {String} type - The data type to apply the filter function to.\n\t * @param {formatFunction} formatFunction\n\t * @access public\n\t */\n\tstatic setSortFormatterForType(type, formatFunction) {\n\t\tsorter.setCellFormatterForType(type, formatFunction);\n\t}\n}\n\nmodule.exports = OTable;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_base.scss",
      "contents": "/// Base tables styles and simple utility classes.\n/// @access private\n@mixin _oTableBase() {\n\t.o-table {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\n\t\tthead {\n\t\t\tborder-bottom: 2px solid _oTableGet('table-data-color');\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 10px;\n\t\t\ttext-align: left;\n\t\t\tvertical-align: top;\n\t\t\tcolor: _oTableGet('table-data-color');\n\t\t}\n\n\t\tth {\n\t\t\t@include oTypographySansBold(1);\n\t\t\tbackground-color: _oTableGet('header-background');\n\t\t\t&:not([scope=row]) {\n\t\t\t\tvertical-align: bottom;\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(1);\n\t\t\tscroll-snap-align: none center;\n\t\t\t&:empty:before {\n\t\t\t\t@include oIconsGetIcon('minus', $container-width: 15,  $container-height: 15, $iconset-version: 1);\n\t\t\t\tcontent: '';\n\t\t\t\tvertical-align: middle;\n\t\t\t}\n\t\t}\n\n\t\t.o-table__caption {\n\t\t\ttext-align: left;\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0 10px;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.o-table__cell--numeric {\n\t\t\ttext-align: right;\n\t\t\tfont-feature-settings: \"tnum\" 1;\n\t\t}\n\n\t\t.o-table__cell--content-secondary {\n\t\t\t@include oTypographySize(0);\n\t\t\tfont-weight: normal;\n\t\t}\n\n\t\t.o-table__cell--vertically-center {\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-table .o-table-footnote,\n\t.o-table-footnote {\n\t\t@include oTypographyCaption();\n\t}\n\n\t.o-table-container > .o-table-footnote {\n\t\tmargin-left: 10px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_borders.scss",
      "contents": "/// Horizontal borders\n/// @access private\n@mixin _oTableHorizontalBorders {\n\t.o-table--horizontal-borders {\n\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\n\t\tth:not([scope=row]) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n/// Vertical borders\n/// @access private\n@mixin _oTableVerticalBorders {\n\t.o-table--vertical-borders {\n\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\n\t\t// sass-lint:disable no-qualifying-elements\n\t\tth[scope=row] {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t\t// sass-lint:enable no-qualifying-elements\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oTableGet($variables, $from: null) {\n    @return oBrandGet($component: 'o-table', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oTableSupports($variant) {\n    @return oBrandSupportsVariant($component: 'o-table', $variant: $variant);\n}\n\n@if oBrandGetCurrentBrand() == 'master' {\n\t@include oBrandDefine('o-table', 'master', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('paper'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('wheat'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsMix('wheat', 'paper', 40)\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'internal' {\n\t@include oBrandDefine('o-table', 'internal', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('white'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('slate-white-5'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsGetPaletteColor('slate-white-5')\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact',\n\t\t\t'row-headings'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'whitelabel' {\n\t@include oBrandDefine('o-table', 'whitelabel', (\n\t\t'variables': (),\n\t\t'supports-variants': (\n\t\t\t'compact'\n\t\t)\n\t));\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_compact.scss",
      "contents": "/// Make a table 'compact'\n/// @access private\n@mixin _oTableCompact {\n\t.o-table--compact {\n\t\tth {\n\t\t\t@include oTypographySansBold(0);\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(0);\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 4px 10px;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_container.scss",
      "contents": "/// Styles for a table container, the parent of all other table elements.\n/// Enables child overlays such as to indicate the ability to scroll a table.\n/// Includes standard table margin.\n/// @access private\n@mixin _oTableContainer {\n\t.o-table-container {\n\t\tposition: relative;\n\t}\n\t// Leave space for controls such as \"show more\" when expanded/contracted.\n\t.o-table-container--expanded,\n\t.o-table-container--contracted {\n\t\tpadding-bottom: 40px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_lines.scss",
      "contents": "/// Add horizontal lines to a table\n/// @access private\n@mixin _oTableHorizontalLines {\n\t.o-table--horizontal-lines {\n\t\ttr:not(:first-child) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n\n/// Add verticle lines to a table\n/// @access private\n@mixin _oTableVerticalLines {\n\t.o-table--vertical-lines {\n\t\tth:not(:last-child):not(:first-child),\n\t\ttd:not(:last-child):not(:first-child) {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_mixins.scss",
      "contents": "/// Outputs all features and styles available.\n/// @param $opts {list} [('responsive-overflow', 'responsive-flat', 'responsive-scroll', 'lines', 'compact', 'stripes', 'row-headings')] - Table features to output. Defaults to all table features.\n/// @access public\n@mixin oTable($opts: (\n\t'responsive-overflow',\n\t'responsive-flat',\n\t'responsive-scroll',\n\t'lines',\n\t'compact',\n\t'stripes',\n\t'row-headings',\n)) {\n\t$overflow-enabled: index($opts, 'responsive-overflow');\n\t$flat-enabled: index($opts, 'responsive-flat');\n\t$scroll-enabled: index($opts, 'responsive-scroll');\n\t$lines-enabled: index($opts, 'lines');\n\t$compact-enabled: index($opts, 'compact');\n\t$stripes-enabled: index($opts, 'stripes');\n\t$row-headings-enabled: index($opts, 'row-headings');\n\n\t// Basic styles and simple utilities.\n\t@include _oTableBase;\n\n\t// Sortable columns.\n\t@include _oTableSort;\n\n\t// Respnsive solutions.\n\t@if $flat-enabled or $scroll-enabled or $overflow-enabled {\n\t\t@include _oTableWrapper;\n\t\t@include _oTableContainer;\n\t}\n\t@if $overflow-enabled {\n\t\t@include _oTableResponsiveOverflow;\n\t}\n\t@if $flat-enabled {\n\t\t@include _oTableResponsiveFlat;\n\t}\n\t@if $scroll-enabled {\n\t\t@include _oTableResponsiveScroll;\n\t}\n\n\t// Lines.\n\t@if $lines-enabled {\n\t\t@include _oTableHorizontalLines;\n\t\t@include _oTableVerticalLines;\n\t\t@include _oTableHorizontalBorders;\n\t\t@include _oTableVerticalBorders;\n\t}\n\n\t// Compact.\n\t@if $compact-enabled and _oTableSupports('compact') {\n\t\t@include _oTableCompact;\n\t}\n\n\t// Stripes.\n\t@if $stripes-enabled and _oTableSupports('stripes') {\n\t\t@include _oTableRowStripes;\n\t}\n\n\t// Row headings.\n\t@if $row-headings-enabled and _oTableSupports('row-headings') {\n\t\t@include _oTableRowHeadings;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-flat.scss",
      "contents": "/// Styles for a 'FlatTable'\n/// @access private\n@mixin _oTableResponsiveFlat {\n\t.o-table.o-table--responsive-flat {\n\t\twidth: 100%;\n\n\t\t.o-table__duplicate-heading {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\tdisplay: block;\n\n\t\t\ttd,\n\t\t\tth,\n\t\t\ttr {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\ttr {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-flow: row wrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\ttd {\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\tthead th {\n\t\t\t\tdisplay: none;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\tthead tr {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\ttbody tr:not(:first-child) {\n\t\t\t\tborder-top: 1px solid _oTableGet('table-data-color');\n\t\t\t}\n\n\t\t\t&.o-table--row-stripes tbody tr:nth-child(even) th, // Remove stripes when flat.\n\t\t\ttbody tr:nth-child(even) {\n\t\t\t\tbackground-color: _oTableGet('table-item-alternate-background', 'flat');\n\t\t\t}\n\n\t\t\t&.o-table--horizontal-lines th:not(:last-of-type),\n\t\t\t&.o-table--horizontal-lines td:not(:last-of-type), {\n\t\t\t\t// When flat, only show row border if a colour is defined.\n\t\t\t\t// Else the browser will use a black border.\n\t\t\t\t@if _oTableGet('table-border-color') {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__duplicate-heading {\n\t\t\t\tdisplay: block;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-overflow.scss",
      "contents": "/// Styles for an 'OverflowTable'\n/// @require _oTableContainer\n/// @require _oTableWrapper\n/// @access private\n@mixin _oTableResponsiveOverflow {\n\t@include _oTableOverflowControlsOverlay;\n\t@include _oTableOverflowFadeOverlay;\n}\n\n/// Styles for controls which overlay the table. Such as scroll forward/back buttons,\n/// and a \"show more\" button to expand/contract a table with many items.\n@mixin _oTableOverflowControlsOverlay {\n\t.o-table-overflow-control-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\n\n\t\t.o-table-control {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: _oTableGet('table-background');\n\t\t\tpointer-events: all;\n\t\t\ttransition: 1s opacity ease-in-out;\n\t\t\tbutton {\n\t\t\t\t@include oButtons($size: 'big', $theme: 'primary');\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--expander {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\ttext-align: center;\n\t\t\tbutton {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward,\n\t\t.o-table-control--back {\n\t\t\t@supports (pointer-events: none)  {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: calc(50% - 20px);\n\t\t\t\ttransition: opacity 0.3s $o-visual-effects-transition-fade;\n\t\t\t}\n\t\t\tz-index: 1;\n\t\t}\n\n\t\t.o-table-control--back {\n\t\t\tleft: 0; //absolute\n\t\t\tfloat: left; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-left',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward {\n\t\t\tright: 0; //absolute\n\t\t\tfloat: right; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-right',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--hide {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.o-table-control--sticky {\n\t\t\tposition: sticky;\n\t\t}\n\t}\n\n\t.o-table-overflow-control-overlay--arrow-dock {\n\t\t// Create area left/right for arrows to scroll into (\"dock\").\n\t\t&:after,\n\t\t&:before {\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\tbottom: 0;\n\t\t\theight: 40px;\n\t\t\tpointer-events: none;\n\t\t\tborder-color: oButtonsGetColor('default', 'background', $theme: 'primary');\n\t\t\tborder-style: solid;\n\t\t\twidth: 1px;\n\t\t}\n\n\t\t&:before {\n\t\t\tleft: 0;\n\t\t\tborder-width: 0 40px 0 9px;\n\t\t}\n\n\t\t&:after {\n\t\t\tright: 0;\n\t\t\tborder-width: 0 9px 0 40px;\n\t\t}\n\n\t\t// Make more control leave space for arrows to dock left/right.\n\t\t.o-table-control--expander {\n\t\t\tleft: 51px;\n\t\t\tright: 51px;\n\t\t}\n\n\t\t// A modifier class which forces arrows to \"dock\" at the bottom of the overlay.\n\t\t.o-table-control--dock {\n\t\t\ttop: auto;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n}\n\n/// Styles to show scroll and expander fade out.\n@mixin _oTableOverflowFadeOverlay {\n\t.o-table-overflow-fade-overlay {\n\t\t@supports (pointer-events: none) {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n\n\t// Show horizontal fade when the table is scrolled.\n\t.o-table-overflow-fade-overlay--scroll {\n\t\t@if _oTableGet('table-background') {\n\t\t\tbackground: linear-gradient(to right, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-start)),\n\t\t\tlinear-gradient(to left, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-end));\n\t\t}\n\t}\n\n\t// Show vertical fade when the table is contracted.\n\t.o-table-container--contracted .o-table-overflow-fade-overlay:after {\n\t\t@if _oTableGet('table-background') {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 80px;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbackground: linear-gradient(to top, _oTableGet('table-background') 30px, rgba(_oTableGet('table-background'), 0) 80px);\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-scroll.scss",
      "contents": "/// Styles for a 'ScrollTable'\n/// @access private\n@mixin _oTableResponsiveScroll {\n\t.o-table--responsive-scroll {\n\n\t\t.o-table__duplicate-row {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\t// Remove standard border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:first-child) {\n\t\t\t\tborder: 0;\n\t\t\t}\n\n\t\t\t// Add responsive border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:last-child) {\n\t\t\t\ttd {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttr:not(.o-table__duplicate-row) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.o-table__duplicate-row {\n\t\t\t\tdisplay: table-row;\n\t\t\t}\n\n\t\t\tth {\n\t\t\t\tposition: sticky;\n\t\t\t\tleft: 0;\n\t\t\t\tbackground-color: _oTableGet('table-background');\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_row-headings.scss",
      "contents": "/// @brand internal\n/// @outputs Highlights table headings.\n/// @access private\n@mixin _oTableRowHeadings() {\n\t.o-table--row-headings > tbody th {\n\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_row-stripes.scss",
      "contents": "/// Add this to the table element to get row stripes\n/// @access private\n@mixin _oTableRowStripes() {\n\t.o-table--row-stripes {\n\t\tbackground-color: _oTableGet('table-background');\n\n\t\tcaption {\n\t\t\tbackground-color: _oTableGet('table-background');\n\t\t}\n\n\t\ttbody tr:nth-child(even) {\n\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\tth {\n\t\t\t\t// For sticky \"responsive-scroll\" headers.\n\t\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_sort.scss",
      "contents": "/// Tables styles to support sort buttons.\n/// @access private\n@mixin _oTableSort {\n\n\t.o-table--sortable thead th:not([data-o-table-heading-disable-sort]) {\n\t\tpadding-right: 0; // No header padding with a child sort icon.\n\t}\n\n\t// Sort button.\n\t.o-table__sort {\n\t\t// sass-lint:disable no-vendor-prefixes\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-moz-appearance: none;\n\t\t-webkit-appearance: none;\n\t\t// sass-lint:enable no-vendor-prefixes\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tpadding-right: 20px;\n\t\tmin-width: 60px;\n\t\ttext-align: left;\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrows-up-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tcontent: '';\n\t\t\tmargin-right: -20px;\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show descending icon in sort button with DSC sort applied.\n\t[aria-sort].o-table-sorting-descending .o-table__sort,\n\t[aria-sort='descending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show ascending icon in sort button with ascending sort applied or on hover with no sort.\n\t[aria-sort].o-table-sorting-ascending .o-table__sort,\n\tth[aria-sort='none']:hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\tth:not([aria-sort]):hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\t[aria-sort='ascending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-up', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_wrapper.scss",
      "contents": "/// Styles for a table wrapper to allow table to overflow.\n/// The wrapped table becomes scrollable on small viewports.\n/// @access private\n@mixin _oTableWrapper {\n\t.o-table-scroll-wrapper {\n\t\toverflow-y: hidden;\n\t\toverflow-x: auto;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\t-webkit-overflow-scrolling: touch; //sass-lint:disable-line no-vendor-prefixes\n\t}\n\n\t.o-table-overlay-wrapper {\n\t\tposition: relative;\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/BaseTable.test.js",
      "contents": "/* eslint-env mocha, sinon */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BaseTable\", () => {\n  let oTableEl;\n  let table;\n\n  const click = element => {\n    const click = document.createEvent('MouseEvent');\n    click.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    oTableEl.querySelector(element).dispatchEvent(click);\n  };\n\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    table = new BaseTable(oTableEl, sorter);\n  });\n  describe('addSortButtons', () => {\n    it('adds buttons in the table column headers', done => {\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const thead = oTableEl.querySelector('thead');\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.equal(sortButtons.length, 5, 'Expected 5 buttons, 1 within each of the 5 column headers.');\n          sortButtons.forEach(button => {\n            proclaim.include(button.getAttribute('title'), 'sort', 'Expected each header sort button to have a \"title\" which indicates sort. \"title\" is currently used over \"aria-label\" as \"aria-label\" is read in VoiceOver when moving across columns of the body.');\n            proclaim.notEqual(button.textContent, '', 'Expected each header sort button to have content.');\n          });\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('does not add sort button to column header with attribute \"data-o-table-heading-disable-sort\"', done => {\n      const thead = oTableEl.querySelector('thead'); // Disable sort on first column.\n\n      const firstColumnHeading = thead.querySelector('th');\n      firstColumnHeading.setAttribute('data-o-table-heading-disable-sort', true); // Add buttons.\n\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.isNull(firstColumnHeading.querySelector('button'), 'Found a sort button within a column heading with sort disabled.');\n          proclaim.equal(sortButtons.length, 4, 'Expected 4 buttons, 1 within each of the 5 column headers except for the first column which has sort disabled.');\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('does not add any sort button to column headers when table has \"data-o-table-sortable\" set to false', done => {\n      // Disable sort.\n      oTableEl.setAttribute('data-o-table-sortable', false); // Try to add sort buttons.\n\n      table = new BaseTable(oTableEl, sorter); // re-init table now data att is set\n\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const thead = oTableEl.querySelector('thead');\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.equal(sortButtons.length, 0, 'Expected to find no sort buttons when table has been set to non-sortable.');\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('buttons toggle column sort with header button click (ascending first)', done => {\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          click('thead th button');\n          proclaim.isTrue(sorterSpy.calledWith(table, 0, 'ascending'), 'Expected the table to be sorted \"ascending\" on first click of the header button.');\n        } catch (error) {\n          sorterSpy.restore();\n          done(error);\n        }\n\n        setTimeout(() => {\n          try {\n            click('thead th button');\n            proclaim.isTrue(sorterSpy.calledWith(table, 0, 'descending'), 'Expected the table to be sorted \"descending\" on second click of the header button.');\n          } catch (error) {\n            sorterSpy.restore();\n            done(error);\n          } finally {\n            sorterSpy.restore();\n            done();\n          }\n        }, 100);\n      }, 100);\n    });\n  });\n  describe('sortRowsByColumn', () => {\n    it('sorts a given column in descending order', () => {\n      const columnIndex = 1;\n      const sortOrder = 'descending';\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(columnIndex, sortOrder);\n      proclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n      sorterSpy.restore();\n    });\n    it('sorts a given column in ascending order', () => {\n      const columnIndex = 1;\n      const sortOrder = 'ascending';\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(columnIndex, sortOrder);\n      proclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n      sorterSpy.restore();\n    });\n    it('can be intercepted using the `oTable.sorting` event for a custom sort implementation', () => {\n      // Prevent sorting for custom implementation.\n      oTableEl.addEventListener('oTable.sorting', event => {\n        event.preventDefault();\n      }); // Check sort is intercepted performed.\n\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(0, 'ascending');\n      proclaim.isTrue(sorterSpy.notCalled, 'Default table sorter was called.');\n      sorterSpy.restore();\n    });\n    it('errors if no column index is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(undefined, 'descending');\n      }, /Could not find header for column index/);\n    });\n    it('errors if an invalid column index is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn('not a column index', 'descending');\n      }, /Could not find header for column index/);\n    });\n    it('errors if no sort order is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(1, undefined);\n      }, /Sort order/);\n    });\n    it('errors if an invalid sort order is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(1, 'not a sort order');\n      }, /Sort order/);\n    });\n  });\n  describe('getTableHeader', () => {\n    it('gets a th element for a given column index', () => {\n      const thead = oTableEl.querySelector('thead');\n      const tableHeaders = thead.querySelectorAll('th');\n      tableHeaders.forEach((expectedHeader, index) => {\n        const actualHeader = table.getTableHeader(index);\n        proclaim.equal(actualHeader, expectedHeader, `Did not get the expected th element for column index \"${index}\".`);\n      });\n    });\n    it('errors when getting a th element for a non-existent column', () => {\n      proclaim.throws(() => {\n        table.getTableHeader(1001);\n      }, /Could not find header for column index/);\n    });\n  });\n  describe('sorted', () => {\n    it('fires the oTable.sorted event with column index and sort order', done => {\n      const columnIndex = 1;\n      const sortOrder = 'ascending'; // Expecting a sorted event.\n\n      document.addEventListener('oTable.sorted', event => {\n        try {\n          proclaim.equal(event.detail.instance, table, 'Expected event detail to include the o-table instance which fired the event.');\n          proclaim.equal(event.detail.sortOrder, sortOrder, `Expected event detail to include the sort order.`);\n          proclaim.equal(event.detail.columnIndex, columnIndex, `Expected event detail to include the column index.`);\n        } catch (error) {\n          done(error);\n        }\n\n        done();\n      });\n\n      try {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      } catch (error) {\n        done(error);\n      }\n    });\n    it('errors if no column index is provided', () => {\n      const columnIndex = undefined;\n      const sortOrder = 'ascending';\n      proclaim.throws(() => {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      }, /column index/);\n    });\n    it('errors if no sort order is provided', () => {\n      const columnIndex = 1;\n      const sortOrder = undefined;\n      proclaim.throws(() => {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      }, /sort order/);\n    });\n  });\n  describe('destroy', () => {\n    it('removes sort button event listeners', () => {\n      // Mock removeEventListener\n      const realRemoveEventListener = Element.prototype.removeEventListener;\n      const removeEventListenerSpy = sinon.spy();\n      Element.prototype.removeEventListener = removeEventListenerSpy; // Call destroy\n\n      table.destroy(); // Test sort button event listeners removed.\n\n      try {\n        const thead = document.querySelector('thead');\n        const buttons = thead.querySelectorAll('button');\n        buttons.forEach(button => {\n          proclaim.isTrue(removeEventListenerSpy.calledOn(button), 'Remove event listener was not called on all heading sort buttons.');\n        });\n      } finally {\n        // Restore mocks before calling done.\n        Element.prototype.removeEventListener = realRemoveEventListener;\n      }\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/BasicTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport BasicTable from \"../dist/js/Tables/BasicTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BasicTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new BasicTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new BasicTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('adds sort buttons', done => {\n    const addSortSpy = sinon.spy(BasicTable.prototype, \"addSortButtons\");\n    new BasicTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        proclaim.isTrue(addSortSpy.calledOnce);\n      } catch (error) {\n        done(error);\n      }\n\n      addSortSpy.restore();\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/FlatTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport FlatTable from \"../dist/js/Tables/FlatTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"FlatTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    oTableEl.classList.add('o-table--responsive-flat');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new FlatTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new FlatTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('clones all headings into each row, so each cell has a row heading', done => {\n    const table = new FlatTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        proclaim.equal(table.tableRows.length, 5, `Expected to find 5 table rows.`);\n        table.tableRows.forEach(row => {\n          const duplicateHeadingClass = '.o-table__duplicate-heading';\n          const duplicateHeadings = row.querySelectorAll(`${duplicateHeadingClass}[scope=\"row\"][role=\"rowheader\"]`);\n          proclaim.equal(duplicateHeadings.length, 5, `Expected table rows to contain a clone of all headings,  with class \"${duplicateHeadingClass}\", scope=\"row\", and role=\"rowheader\".`);\n        });\n      } catch (error) {\n        done(error);\n      }\n\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/OverflowTable.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport OverflowTable from \"../dist/js/Tables/OverflowTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\n\nfunction expandable(oTableEl, {\n  minimumRowCount,\n  expanded\n}) {\n  oTableEl.setAttribute('data-o-table-expanded', expanded);\n  oTableEl.setAttribute('data-o-table-minimum-row-count', minimumRowCount);\n}\n\nfunction noTableWrapperOrContainer(oTableEl) {\n  sandbox.setContents(oTableEl.outerHTML);\n  return document.querySelector('[data-o-component=o-table]');\n}\n\nfunction canScrollTable() {\n  document.documentElement.style.width = '340px';\n}\n\nfunction scrollTable(oTableEl, {\n  toEnd\n}) {\n  const wrapper = oTableEl.closest('.o-table-scroll-wrapper');\n  const scrollTo = toEnd ? oTableEl.getBoundingClientRect().width : 0;\n  setTimeout(() => {\n    wrapper.scrollLeft = scrollTo;\n  }, 50);\n}\n\nfunction canScrollPastTable() {\n  document.documentElement.style['padding-bottom'] = '10000px';\n}\n\nfunction scrollPastTable() {\n  document.documentElement.scrollTop = document.documentElement.getBoundingClientRect().height;\n}\n\nfunction forceExpandedTableTallerThanViewport(oTableEl) {\n  const viewportHeight = document.documentElement.clientHeight;\n  const tableHeight = oTableEl.getBoundingClientRect().height;\n\n  if (tableHeight < viewportHeight) {\n    oTableEl.style.height = `${viewportHeight * 2}px`;\n  }\n\n  return oTableEl;\n}\n\nfunction assertBackButton({\n  disabled,\n  visuallyHidden,\n  sticky,\n  docked\n}) {\n  const backElement = document.querySelector('.o-table-control--back');\n  const backButton = backElement.querySelector('button');\n  proclaim.equal(backElement.classList.contains('o-table-control--hide'), visuallyHidden, `Back button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n  proclaim.equal(backButton.hasAttribute('disabled'), disabled, `Back button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\n  if (sticky !== undefined) {\n    proclaim.equal(backElement.classList.contains('o-table-control--sticky'), sticky, `Back button is ${sticky ? 'not sticky' : 'sticky'}.`);\n  }\n\n  if (docked !== undefined) {\n    proclaim.equal(backElement.classList.contains('o-table-control--dock'), sticky, `Back button is ${docked ? 'not docked' : 'docked'}.`);\n  }\n}\n\nfunction assertForwardButton({\n  disabled,\n  visuallyHidden,\n  sticky,\n  docked\n}) {\n  const forwardElement = document.querySelector('.o-table-control--forward');\n  const forwardButton = forwardElement.querySelector('button');\n  proclaim.equal(forwardElement.classList.contains('o-table-control--hide'), visuallyHidden, `Forward button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n  proclaim.equal(forwardButton.hasAttribute('disabled'), disabled, `Forward button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\n  if (sticky !== undefined) {\n    proclaim.equal(forwardElement.classList.contains('o-table-control--sticky'), sticky, `Forward button is ${sticky ? 'not sticky' : 'sticky'}.`);\n  }\n\n  if (docked !== undefined) {\n    proclaim.equal(forwardElement.classList.contains('o-table-control--dock'), sticky, `Forward button is ${docked ? 'not docked' : 'docked'}.`);\n  }\n}\n\nfunction assertExpanded(table, {\n  expanded,\n  minimumRowCount\n}) {\n  expanded = typeof expanded === 'boolean' ? expanded : true;\n  minimumRowCount = minimumRowCount || 20;\n  const expectedButtonContent = expanded ? 'show fewer' : 'show more';\n  const expectedAriaExpanded = expanded ? 'true' : 'false';\n  const expectedHidden = expanded ? 0 : table.tableRows.length - minimumRowCount;\n  const wrapperHeightCorrect = table.wrapper.style.height === '' && expanded || table.wrapper.style.height !== '' && !expanded;\n  proclaim.include(table.container.innerHTML.toLowerCase(), expectedButtonContent, `Expected to see \"${expectedButtonContent}\" within an expanded table.`);\n  proclaim.isTrue(table.rootEl.getAttribute('aria-expanded') === expectedAriaExpanded, `Expected to see \\'aria-expanded=\"${expectedAriaExpanded}\"\\' on an expanded table.`);\n  proclaim.equal(table.tbody.querySelectorAll('tr[aria-hidden=\"true\"]').length, expectedHidden, `Expected ${expectedHidden} table rows to be hidden in an expanded table,`);\n  proclaim.isTrue(wrapperHeightCorrect, `Expect the table wrapper to ${expanded ? 'not have' : 'have'} a set height to hide rows visually.`);\n}\n\ndescribe(\"OverflowTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    document.documentElement.style['padding-bottom'] = '';\n    document.documentElement.style.width = '';\n    sandbox.setContents(fixtures.longTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new OverflowTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new OverflowTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  describe(\"expandable feature\", () => {\n    it(\"errors if there is not a container element and expander enabled\", done => {\n      oTableEl = noTableWrapperOrContainer(oTableEl);\n      expandable(oTableEl, {\n        expanded: false\n      });\n\n      window.onerror = function (message, file, line, col, error) {\n        proclaim.include(error.message, 'container', 'Expected an error when a table is configured to be expandable but has no container element.');\n        window.onerror = null;\n        done();\n        return true;\n      };\n\n      new OverflowTable(oTableEl, sorter);\n    });\n    it(\"is not enabled by default\", () => {\n      const table = new OverflowTable(oTableEl, sorter);\n      proclaim.isFalse(table.canExpand());\n    });\n    it(\"can be configured to be expanded by default\", done => {\n      expandable(oTableEl, {\n        expanded: true\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"can be configured to be contracted by default\", done => {\n      expandable(oTableEl, {\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"can toggle between expanded and contracted programmatically when expandable\", done => {\n      expandable(oTableEl, {\n        expanded: true\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      table.contractTable();\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false\n        });\n        table.expandTable();\n        setTimeout(() => {\n          assertExpanded(table, {\n            expanded: true\n          });\n          done();\n        }, 500);\n      }, 500);\n    });\n    it(\"can configure the number of rows to contract to\", done => {\n      expandable(oTableEl, {\n        minimumRowCount: 2,\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false,\n          minimumRowCount: 2\n        });\n        done();\n      }, 100);\n    });\n    it(\"is not used if the number of rows to contract to is larger than the table\", done => {\n      expandable(oTableEl, {\n        minimumRowCount: 200,\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isFalse(table.canExpand());\n        proclaim.isFalse(table.rootEl.hasAttribute('aria-expanded'), `Did not expect \"aria-expanded\" on a table which can not expand.`);\n        done();\n      }, 100);\n    });\n  });\n  describe(\"scroll controls\", () => {\n    beforeEach(() => {\n      canScrollTable();\n    });\n    it(\"are not added if there are no wrapper and container elements\", done => {\n      oTableEl = noTableWrapperOrContainer(oTableEl);\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isNull(oTableEl.querySelector('.o-table-control--forward'), 'Did not expect to find a forward button.');\n        proclaim.isNull(oTableEl.querySelector('.o-table-control--back'), 'Did not expect to find a back button.');\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are added given wrapper and container elements\", done => {\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isNotNull(document.querySelector('.o-table-control--forward'), 'Did not find forward button.');\n        proclaim.isNotNull(document.querySelector('.o-table-control--back'), 'Did not find back button.');\n        done();\n      }, 100);\n    });\n    it(\"backward button is disabled and visualy hidden at the start of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.init();\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward button is disabled and visualy hidden at the end of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      scrollTable(oTableEl, {\n        toEnd: true\n      });\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"backward button is disabled but visible at the start of the table, when the table can be scrolled past\", done => {\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward button is disabled but visible at the end of the table, when the table can be scrolled past\", done => {\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      scrollTable(oTableEl, {\n        toEnd: true\n      });\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are sticky and hidden when the table is scrolled past\", done => {\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: true,\n          sticky: true\n        });\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true,\n          sticky: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are not sticky when the table can not be scrolled past\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start of the table\n          visuallyHidden: true,\n          // hidden as at the start of the table\n          sticky: false\n        });\n        assertForwardButton({\n          disabled: false,\n          visuallyHidden: false,\n          sticky: false\n        });\n        done();\n      }, 100);\n    });\n  });\n  describe(\"control dock\", () => {\n    function assertDock(hasDock) {\n      const controlOverlay = document.querySelector('.o-table-overflow-control-overlay');\n      proclaim.equal(controlOverlay.classList.contains('o-table-overflow-control-overlay--arrow-dock'), hasDock, `Table control overlay does ${hasDock ? 'not have a control dock' : 'has a control dock'}.`);\n    }\n\n    it(\"is added given the table is scrollable, expandable, and can be scrolled past\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: true\n      });\n      forceExpandedTableTallerThanViewport(oTableEl);\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(true);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is smaller than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes a contracted table is smaller than the viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"is added if the table is smaller than the viewport and can be scrolled past\", done => {\n      canScrollTable();\n      canScrollPastTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes a contracted table is smaller than the viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(true);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is not scrollable\", done => {\n      expandable(oTableEl, {\n        expanded: false\n      });\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is not expandable\", done => {\n      canScrollTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"scroll controls are not sticky and instead \\\"dock\\\" given the dock exists and the table is shorter than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes non-expanded table is shorter than viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: false,\n          visuallyHidden: false,\n          sticky: false,\n          dock: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"scroll controls do not \\\"dock\\\" if the dock does not exist\", done => {\n      canScrollTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: true,\n          // hidden as at the start and not in a dock\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"scroll controls do not \\\"dock\\\" when the table is taller than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: true\n      });\n      forceExpandedTableTallerThanViewport(oTableEl);\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: true,\n          // hidden as at the start and not in a dock\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"sticky scroll controls are visually hidden when scrolling past a table with no \\\"dock\\\".\", done => {\n      canScrollTable();\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true,\n          // hidden as scrolled past the table\n          sticky: true,\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"sticky scroll controls remain visible when scrolling past a table with a \\\"dock\\\".\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: false\n      });\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: false,\n          // visible in dock (does not scroll off table)\n          sticky: true,\n          dock: true\n        });\n        done();\n      }, 100);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/ScrollTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport ScrollTable from \"../dist/js/Tables/ScrollTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"ScrollTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    oTableEl.classList.add('o-table--responsive-scroll');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new ScrollTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new ScrollTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('clones column data into a new row with row header', done => {\n    new ScrollTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        const duplicateRowClass = '.o-table__duplicate-row';\n        const duplicateRows = document.querySelectorAll(duplicateRowClass);\n        proclaim.equal(duplicateRows.length, 5, `Expected to find 5 rows with duplicate data and class \"${duplicateRowClass}\".`);\n        duplicateRows.forEach(row => {\n          const duplicateHeadings = row.querySelectorAll('th[scope=\"row\"][role=\"rowheader\"]');\n          proclaim.equal(duplicateHeadings.length, 1, `Expected to find a row heading within the rows of duplicate data, with scope=\"row\" and role=\"rowheader\".`);\n        });\n      } catch (error) {\n        done(error);\n      }\n\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/Sort/TableSorter.test.js",
      "contents": "/* eslint-env mocha, sinon */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"../helpers/sandbox\";\nimport BaseTable from \"../../dist/js/Tables/BaseTable\";\nimport FlatTable from \"../../dist/js/Tables/FlatTable\";\nimport TableSorter from \"../../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BaseTable\", () => {\n  let oTableEl;\n  let table;\n  beforeEach(() => {\n    sandbox.init();\n  });\n\n  function assertSortOrder({\n    sortOrder,\n    columnIndex,\n    expected\n  }) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          const tbody = oTableEl.querySelector('tbody');\n          const thead = oTableEl.querySelector('thead'); // Assert correct sort order.\n\n          const tableRows = tbody.querySelectorAll('tr');\n\n          if (tableRows.length === 0) {\n            throw new Error('Could not find rows to test against.');\n          }\n\n          tableRows.forEach((row, index) => {\n            const cells = row.querySelectorAll('td,th:not(.o-table__duplicate-heading)');\n            proclaim.equal(cells[columnIndex].innerHTML, expected[index], `Expected a sort order of \"${expected}\".`);\n          }); // Assert correct aria labels.\n\n          const tableHeaders = thead.querySelectorAll('th');\n\n          if (tableHeaders.length === 0) {\n            throw new Error('Could not find column headers to test against.');\n          }\n\n          tableHeaders.forEach((tableHeader, index) => {\n            if (index === columnIndex) {\n              proclaim.equal(tableHeader.getAttribute('aria-sort'), sortOrder, `Expected column header to have aria-sort=\"${sortOrder}\".`);\n            } else {\n              proclaim.equal(tableHeader.getAttribute('aria-sort'), 'none', `Expected the non-sorted column headers to have aria-sort=\"none\".`);\n            }\n          });\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }, 100); // wait for sort and window.requestAnimationFrame to update sort order\n    });\n  }\n\n  describe('sortRowsByColumn', () => {\n    function getTableElementWithData(type, dataArray) {\n      const markup = `\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"${type}\">Test Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t${dataArray.map(data => `<tr><td>${data}</td></tr>`).join('')}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n      sandbox.setContents(markup);\n      return document.querySelector('[data-o-component=o-table]');\n    }\n\n    it('sorts strings alphabetically with no type specified ascending', done => {\n      oTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Apple', 'Dragonfruit', 'Durian', 'Naseberry', 'Strawberry'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts strings alphabetically with no type specified descending', done => {\n      oTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['Strawberry', 'Naseberry', 'Durian', 'Dragonfruit', 'Apple'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts localised strings alphabetically', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Æ', 'apple', 'café', 'caffeine'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts localised strings alphabetically when the Intl.Collator API is not available', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Æ', 'apple', 'café', 'caffeine']; // Remove global.Intl\n\n      const intlBackup = Intl;\n      delete global.Intl;\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      let error;\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(err => {\n        error = err;\n      }).finally(() => {\n        global.Intl = intlBackup; // Retore global.Intl\n\n        done(error);\n      });\n    });\n    it('sorts \"number\" type ascending', done => {\n      oTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5', '1.5', '1.75', '2', '3'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"number\" type descending', done => {\n      oTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['3', '2', '1.75', '1.5', '0.5'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"numeric\" type ascending', done => {\n      oTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5', '1.5', '1.75', '2', '3'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"numeric\" type descending', done => {\n      oTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['3', '2', '1.75', '1.5', '0.5'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"percent\" type descending', done => {\n      oTableEl = getTableElementWithData('percent', ['1.5%', '0.5%', '2%', '50%']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['50%', '2%', '1.5%', '0.5%'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"date\" type with FT style time descending', done => {\n      oTableEl = getTableElementWithData('date', ['7pm', '7am', '6.30am', '6.30pm']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['7pm', '6.30pm', '7am', '6.30am'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"date\" type with FT style dates and time ascending', done => {\n      // assumes current year where not specified\n      oTableEl = getTableElementWithData('date', ['August 17', 'September 12 2012', 'January 2012', 'March 12 2015 1am', 'April 20 2014 3.30am', 'April 20 2014 2.30pm']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['January 2012', 'September 12 2012', 'April 20 2014 3.30am', 'April 20 2014 2.30pm', 'March 12 2015 1am', 'August 17'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts abbreviated type \"currency\" ascending', done => {\n      // assumes current year where not specified\n      oTableEl = getTableElementWithData('currency', ['E£5', '€5.46', 'CFA Fr830', 'DKr10', '£4', 'HK$12', '$140', '￥155', 'Rmb100bn', '13 colons', 'Rp3,400']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['£4', 'E£5', '€5.46', 'DKr10', 'HK$12', '13 colons', '$140', '￥155', 'CFA Fr830', 'Rp3,400', 'Rmb100bn'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts from \"<span>\", \"<a>\", \"<i>\" tags and \"<img>\" tag \"alt\" attributes', done => {\n      oTableEl = getTableElementWithData('', ['<a href=\"#\">y</a>', '<span><a href=\"#\">v</a></span>', '<i class=\"o-icons-icon\">x</i>', '<img src=\"#\" alt=\"w\">', '<span>z</span>']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['<span><a href=\"#\">v</a></span>', '<img src=\"#\" alt=\"w\">', '<i class=\"o-icons-icon\">x</i>', '<a href=\"#\">y</a>', '<span>z</span>'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts from \"aria-label\" or \"title\" of \"<span>\", \"<a>\", or \"<i>\" tags if they have no content', done => {\n      oTableEl = getTableElementWithData('', ['<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>', '<span class=\"o-icons-icon o-icons-icon--tick\">e</span>', '<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>', '<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>', '<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>', '<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>', '<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>', '<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>', '<span class=\"o-icons-icon o-icons-icon--tick\">e</span>'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"n/a\" and \"-\" as if empty cells (first in ascending order)', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'N/A', 'n.a.', '-', '', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['N/A', 'n.a.', '-', '', 'Æ', 'apple', 'café', 'caffeine'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts non-numeric fields in a \"numeric\" column first when ascending', done => {\n      oTableEl = getTableElementWithData('numeric', ['9', '', '0.5', 'Some Non-Numeric Text', 'N/A', '300', '-']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['', 'N/A', '-', 'Some Non-Numeric Text', '0.5', '9', '300'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts ranges, using the value before a dash or en-dash', done => {\n      oTableEl = getTableElementWithData('numeric', ['1-3', '10-21', '0.5-200']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5-200', '1-3', '10-21'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts ignoring any duplicate headings of the FlatTable', done => {\n      // Issue: https://github.com/Financial-Times/o-table/pull/106\n      oTableEl = getTableElementWithData('numeric', ['3', '1', '999', '2']);\n      table = new FlatTable(oTableEl, sorter); // Flat table duplicates headings within rows.\n\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['1', '2', '3', '999'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts by attribute \"data-o-table-sort-value\" value if set', done => {\n      sandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"c\">snowman</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"a\">42</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"b\">pangea</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['42', 'pangea', 'snowman'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts row headers', done => {\n      sandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t\t<th>Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">c</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">a</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">b</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['a', 'b', 'c'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts custom data types according to a given formatter', done => {\n      oTableEl = getTableElementWithData('emoji-time', ['🌑', '🌤', '🌑', '🌤']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['🌑', '🌑', '🌤', '🌤'];\n      sorter.setCellFormatterForType('emoji-time', cell => {\n        const text = cell.textContent.trim();\n\n        if (text === '🌑') {\n          return 1;\n        }\n\n        if (text === '🌤') {\n          return 2;\n        }\n\n        return 0;\n      });\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('calls the table\\'s \"sorted\" method', done => {\n      oTableEl = getTableElementWithData('numeric', ['1', '3', '2']);\n      table = new BaseTable(oTableEl, sorter);\n      const sortedSpy = sinon.spy(table, 'sorted');\n      sorter.sortRowsByColumn(table, 0, 'ascending');\n      setTimeout(() => {\n        let error;\n\n        try {\n          proclaim.isTrue(sortedSpy.calledWith({\n            columnIndex: 0,\n            sortOrder: 'ascending'\n          }));\n          sortedSpy.restore();\n        } catch (err) {\n          error = err;\n        } finally {\n          done(error);\n        }\n      }, 100);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/fixtures.js",
      "contents": "const longTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\nconst shortTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\nexport { longTableWithContainer, shortTableWithContainer };"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/sandbox.js",
      "contents": "let sandboxEl;\nexport function init() {\n  if (document.querySelector('.sandbox')) {\n    sandboxEl = document.querySelector('.sandbox');\n  } else {\n    sandboxEl = document.createElement('div');\n    sandboxEl.classList.add('sandbox');\n    document.body.appendChild(sandboxEl);\n  }\n}\nexport function reset() {\n  while (sandboxEl.firstChild) {\n    sandboxEl.removeChild(sandboxEl.firstChild);\n  }\n}\nexport function setContents(html) {\n  sandboxEl.innerHTML = html;\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/oTable.test.js",
      "contents": "/* eslint-env mocha, proclaim */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport OTable from \"../browser\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport OverflowTable from \"../dist/js/Tables/OverflowTable\";\nimport FlatTable from \"../dist/js/Tables/FlatTable\";\nimport ScrollTable from \"../dist/js/Tables/ScrollTable\";\nimport BasicTable from \"../dist/js/Tables/BasicTable\";\ndescribe('OTable constructs', () => {\n  let oTableEl;\n  let testOTable;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  afterEach(() => {\n    testOTable = undefined;\n    sandbox.reset();\n    oTableEl = undefined;\n  });\n  it('a ScrollTable when the table has attribute data-o-table-responsive=\"scroll\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'scroll');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, ScrollTable);\n  });\n  it('an OverflowTable when the table has attribute data-o-table-responsive=\"overflow\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'overflow');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, OverflowTable);\n  });\n  it('a FlatTable when the table has attribute data-o-table-responsive=\"flat\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'flat');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, FlatTable);\n  });\n  it('a BasicTable when the table has attribute data-o-table-responsive=\"\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', '');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, BasicTable);\n  });\n  it('a BasicTable when the table does not have the data-o-table-responsive attribute', () => {\n    oTableEl.removeAttribute('data-o-table-responsive');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, BasicTable);\n  });\n});\ndescribe('Init', () => {\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(`\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t`);\n  });\n  afterEach(() => {\n    sandbox.reset();\n  });\n  it('instantiates every o-table in the document', () => {\n    const tables = OTable.init();\n    proclaim.equal(tables instanceof Array, true, 'init did not return an array of tables.');\n    proclaim.equal(tables.length, 3, 'init did not return the expected number of tables.');\n    proclaim.equal(tables[0] instanceof BaseTable, true, 'a table returned did not extend BaseTable.');\n  });\n  it('instantiates a single o-table for a given selector which returns one table', () => {\n    const firstTable = document.querySelector('.o-table');\n    firstTable.setAttribute('id', 'test-table');\n    const otable = OTable.init('#test-table');\n    proclaim.equal(otable instanceof BaseTable, true, 'Did not return an instance of BaseTable.');\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/BaseTable.test.js",
      "contents": "/* eslint-env mocha, sinon */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BaseTable\", () => {\n\tlet oTableEl;\n\tlet table;\n\n\tconst click = element => {\n\t\tconst click = document.createEvent('MouseEvent');\n\t\tclick.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t\toTableEl.querySelector(element).dispatchEvent(click);\n\t};\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\ttable = new BaseTable(oTableEl, sorter);\n\t});\n\n\tdescribe('addSortButtons', () => {\n\t\tit('adds buttons in the table column headers', done => {\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 5, 'Expected 5 buttons, 1 within each of the 5 column headers.');\n\t\t\t\t\tsortButtons.forEach(button => {\n\t\t\t\t\t\tproclaim.include(button.getAttribute('title'), 'sort', 'Expected each header sort button to have a \"title\" which indicates sort. \"title\" is currently used over \"aria-label\" as \"aria-label\" is read in VoiceOver when moving across columns of the body.');\n\t\t\t\t\t\tproclaim.notEqual(button.textContent, '', 'Expected each header sort button to have content.');\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('does not add sort button to column header with attribute \"data-o-table-heading-disable-sort\"', done => {\n\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t// Disable sort on first column.\n\t\t\tconst firstColumnHeading = thead.querySelector('th');\n\t\t\tfirstColumnHeading.setAttribute('data-o-table-heading-disable-sort', true);\n\t\t\t// Add buttons.\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.isNull(firstColumnHeading.querySelector('button'),'Found a sort button within a column heading with sort disabled.');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 4, 'Expected 4 buttons, 1 within each of the 5 column headers except for the first column which has sort disabled.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('does not add any sort button to column headers when table has \"data-o-table-sortable\" set to false', done => {\n\t\t\t// Disable sort.\n\t\t\toTableEl.setAttribute('data-o-table-sortable', false);\n\t\t\t// Try to add sort buttons.\n\t\t\ttable = new BaseTable(oTableEl, sorter); // re-init table now data att is set\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 0, 'Expected to find no sort buttons when table has been set to non-sortable.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('buttons toggle column sort with header button click (ascending first)', done => {\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tclick('thead th button');\n\t\t\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, 0, 'ascending'), 'Expected the table to be sorted \"ascending\" on first click of the header button.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclick('thead th button');\n\t\t\t\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, 0, 'descending'), 'Expected the table to be sorted \"descending\" on second click of the header button.');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\tdescribe('sortRowsByColumn', () => {\n\t\tit('sorts a given column in descending order', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(columnIndex, sortOrder);\n\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('sorts a given column in ascending order', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(columnIndex, sortOrder);\n\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('can be intercepted using the `oTable.sorting` event for a custom sort implementation', () => {\n\t\t\t// Prevent sorting for custom implementation.\n\t\t\toTableEl.addEventListener('oTable.sorting', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\t// Check sort is intercepted performed.\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(0, 'ascending');\n\t\t\tproclaim.isTrue(sorterSpy.notCalled, 'Default table sorter was called.');\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('errors if no column index is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(undefined, 'descending');\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\n\t\tit('errors if an invalid column index is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn('not a column index', 'descending');\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\n\t\tit('errors if no sort order is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(1, undefined);\n\t\t\t}, /Sort order/);\n\t\t});\n\n\t\tit('errors if an invalid sort order is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(1, 'not a sort order');\n\t\t\t}, /Sort order/);\n\t\t});\n\t});\n\n\tdescribe('getTableHeader', () => {\n\t\tit('gets a th element for a given column index', () => {\n\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\tconst tableHeaders = thead.querySelectorAll('th');\n\t\t\ttableHeaders.forEach((expectedHeader, index) => {\n\t\t\t\tconst actualHeader = table.getTableHeader(index);\n\t\t\t\tproclaim.equal(actualHeader, expectedHeader, `Did not get the expected th element for column index \"${index}\".`);\n\t\t\t});\n\t\t});\n\t\tit('errors when getting a th element for a non-existent column', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.getTableHeader(1001);\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\t});\n\n\tdescribe('sorted', () => {\n\t\tit('fires the oTable.sorted event with column index and sort order', done => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\t// Expecting a sorted event.\n\t\t\tdocument.addEventListener('oTable.sorted', (event) => {\n\t\t\t\ttry {\n\t\t\t\t\tproclaim.equal(event.detail.instance, table, 'Expected event detail to include the o-table instance which fired the event.');\n\t\t\t\t\tproclaim.equal(event.detail.sortOrder, sortOrder, `Expected event detail to include the sort order.`);\n\t\t\t\t\tproclaim.equal(event.detail.columnIndex, columnIndex, `Expected event detail to include the column index.`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t\tdone();\n\t\t\t});\n\t\t\ttry {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t});\n\n\t\tit('errors if no column index is provided', () => {\n\t\t\tconst columnIndex = undefined;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t}, /column index/);\n\t\t});\n\n\t\tit('errors if no sort order is provided', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = undefined;\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t}, /sort order/);\n\t\t});\n\t});\n\n\tdescribe('destroy', () => {\n\t\tit('removes sort button event listeners', () => {\n\t\t\t// Mock removeEventListener\n\t\t\tconst realRemoveEventListener = Element.prototype.removeEventListener;\n\t\t\tconst removeEventListenerSpy = sinon.spy();\n\t\t\tElement.prototype.removeEventListener = removeEventListenerSpy;\n\t\t\t// Call destroy\n\t\t\ttable.destroy();\n\t\t\t// Test sort button event listeners removed.\n\t\t\ttry {\n\t\t\t\tconst thead = document.querySelector('thead');\n\t\t\t\tconst buttons = thead.querySelectorAll('button');\n\t\t\t\tbuttons.forEach(button => {\n\t\t\t\t\tproclaim.isTrue(removeEventListenerSpy.calledOn(button), 'Remove event listener was not called on all heading sort buttons.');\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\t// Restore mocks before calling done.\n\t\t\t\tElement.prototype.removeEventListener = realRemoveEventListener;\n\t\t\t}\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/BasicTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport BasicTable from './../src/js/Tables/BasicTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BasicTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew BasicTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new BasicTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('adds sort buttons', (done) => {\n\t\tconst addSortSpy = sinon.spy(BasicTable.prototype, \"addSortButtons\");\n\t\tnew BasicTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tproclaim.isTrue(addSortSpy.calledOnce);\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\taddSortSpy.restore();\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/FlatTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport FlatTable from './../src/js/Tables/FlatTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"FlatTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\toTableEl.classList.add('o-table--responsive-flat');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew FlatTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new FlatTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('clones all headings into each row, so each cell has a row heading', (done) => {\n\t\tconst table = new FlatTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tproclaim.equal(table.tableRows.length, 5, `Expected to find 5 table rows.`);\n\t\t\t\ttable.tableRows.forEach(row => {\n\t\t\t\t\tconst duplicateHeadingClass = '.o-table__duplicate-heading';\n\t\t\t\t\tconst duplicateHeadings = row.querySelectorAll(`${duplicateHeadingClass}[scope=\"row\"][role=\"rowheader\"]`);\n\t\t\t\t\tproclaim.equal(duplicateHeadings.length, 5, `Expected table rows to contain a clone of all headings,  with class \"${duplicateHeadingClass}\", scope=\"row\", and role=\"rowheader\".`);\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/OverflowTable.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\n\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport OverflowTable from './../src/js/Tables/OverflowTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\nfunction expandable(oTableEl, { minimumRowCount, expanded }) {\n\toTableEl.setAttribute('data-o-table-expanded', expanded);\n\toTableEl.setAttribute('data-o-table-minimum-row-count', minimumRowCount);\n}\n\nfunction noTableWrapperOrContainer(oTableEl) {\n\tsandbox.setContents(oTableEl.outerHTML);\n\treturn document.querySelector('[data-o-component=o-table]');\n}\n\nfunction canScrollTable() {\n\tdocument.documentElement.style.width = '340px';\n}\n\nfunction scrollTable(oTableEl, { toEnd }) {\n\tconst wrapper = oTableEl.closest('.o-table-scroll-wrapper');\n\tconst scrollTo = toEnd ? oTableEl.getBoundingClientRect().width : 0;\n\tsetTimeout(() => {\n\t\twrapper.scrollLeft = scrollTo;\n\t}, 50);\n}\n\nfunction canScrollPastTable() {\n\tdocument.documentElement.style['padding-bottom'] = '10000px';\n}\n\nfunction scrollPastTable() {\n\tdocument.documentElement.scrollTop = document.documentElement.getBoundingClientRect().height;\n}\n\nfunction forceExpandedTableTallerThanViewport(oTableEl) {\n\tconst viewportHeight = document.documentElement.clientHeight;\n\tconst tableHeight = oTableEl.getBoundingClientRect().height;\n\tif (tableHeight < viewportHeight) {\n\t\toTableEl.style.height = `${viewportHeight * 2}px`;\n\t}\n\treturn oTableEl;\n}\n\nfunction assertBackButton({ disabled, visuallyHidden, sticky, docked }) {\n\tconst backElement = document.querySelector('.o-table-control--back');\n\tconst backButton = backElement.querySelector('button');\n\tproclaim.equal(backElement.classList.contains('o-table-control--hide'), visuallyHidden, `Back button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n\tproclaim.equal(backButton.hasAttribute('disabled'), disabled, `Back button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\tif (sticky !== undefined) {\n\t\tproclaim.equal(backElement.classList.contains('o-table-control--sticky'), sticky, `Back button is ${sticky ? 'not sticky' : 'sticky'}.`);\n\t}\n\tif (docked !== undefined) {\n\t\tproclaim.equal(backElement.classList.contains('o-table-control--dock'), sticky, `Back button is ${docked ? 'not docked' : 'docked'}.`);\n\t}\n}\n\nfunction assertForwardButton({ disabled, visuallyHidden, sticky, docked }) {\n\tconst forwardElement = document.querySelector('.o-table-control--forward');\n\tconst forwardButton = forwardElement.querySelector('button');\n\tproclaim.equal(forwardElement.classList.contains('o-table-control--hide'), visuallyHidden, `Forward button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n\tproclaim.equal(forwardButton.hasAttribute('disabled'), disabled, `Forward button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\tif (sticky !== undefined) {\n\t\tproclaim.equal(forwardElement.classList.contains('o-table-control--sticky'), sticky, `Forward button is ${sticky ? 'not sticky' : 'sticky'}.`);\n\t}\n\tif (docked !== undefined) {\n\t\tproclaim.equal(forwardElement.classList.contains('o-table-control--dock'), sticky, `Forward button is ${docked ? 'not docked' : 'docked'}.`);\n\t}\n}\n\nfunction assertExpanded(table, { expanded, minimumRowCount }) {\n\texpanded = typeof expanded === 'boolean' ? expanded : true;\n\tminimumRowCount = minimumRowCount || 20;\n\tconst expectedButtonContent = expanded ? 'show fewer' : 'show more';\n\tconst expectedAriaExpanded = expanded ? 'true' : 'false';\n\tconst expectedHidden = expanded ? 0 : table.tableRows.length - minimumRowCount;\n\tconst wrapperHeightCorrect = (table.wrapper.style.height === '' && expanded) || (table.wrapper.style.height !== '' && !expanded);\n\tproclaim.include(table.container.innerHTML.toLowerCase(), expectedButtonContent, `Expected to see \"${expectedButtonContent}\" within an expanded table.`);\n\tproclaim.isTrue(table.rootEl.getAttribute('aria-expanded') === expectedAriaExpanded, `Expected to see \\'aria-expanded=\"${expectedAriaExpanded}\"\\' on an expanded table.`);\n\tproclaim.equal(table.tbody.querySelectorAll('tr[aria-hidden=\"true\"]').length, expectedHidden, `Expected ${expectedHidden} table rows to be hidden in an expanded table,`);\n\tproclaim.isTrue(wrapperHeightCorrect, `Expect the table wrapper to ${expanded ? 'not have' : 'have'} a set height to hide rows visually.`);\n}\n\ndescribe(\"OverflowTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tdocument.documentElement.style['padding-bottom'] = '';\n\t\tdocument.documentElement.style.width = '';\n\t\tsandbox.setContents(fixtures.longTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew OverflowTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tdescribe(\"expandable feature\", () => {\n\n\t\tit(\"errors if there is not a container element and expander enabled\", (done) => {\n\t\t\toTableEl = noTableWrapperOrContainer(oTableEl);\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\twindow.onerror = function (message, file, line, col, error) {\n\t\t\t\tproclaim.include(error.message, 'container', 'Expected an error when a table is configured to be expandable but has no container element.');\n\t\t\t\twindow.onerror = null;\n\t\t\t\tdone();\n\t\t\t\treturn true;\n\t\t\t};\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t});\n\n\t\tit(\"is not enabled by default\", () => {\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tproclaim.isFalse(table.canExpand());\n\t\t});\n\n\t\tit(\"can be configured to be expanded by default\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: true });\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"can be configured to be contracted by default\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false });\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"can toggle between expanded and contracted programmatically when expandable\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\ttable.contractTable();\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false });\n\t\t\t\ttable.expandTable();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tassertExpanded(table, { expanded: true });\n\t\t\t\t\tdone();\n\t\t\t\t}, 500);\n\t\t\t}, 500);\n\t\t});\n\n\t\tit(\"can configure the number of rows to contract to\", (done) => {\n\t\t\texpandable(oTableEl, { minimumRowCount: 2, expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false, minimumRowCount: 2});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"is not used if the number of rows to contract to is larger than the table\", (done) => {\n\t\t\texpandable(oTableEl, { minimumRowCount: 200, expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isFalse(table.canExpand());\n\t\t\t\tproclaim.isFalse(table.rootEl.hasAttribute('aria-expanded'), `Did not expect \"aria-expanded\" on a table which can not expand.`);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\n\tdescribe(\"scroll controls\", () => {\n\t\tbeforeEach(() => {\n\t\t\tcanScrollTable();\n\t\t});\n\n\t\tit(\"are not added if there are no wrapper and container elements\", (done) => {\n\t\t\toTableEl = noTableWrapperOrContainer(oTableEl);\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isNull(oTableEl.querySelector('.o-table-control--forward'), 'Did not expect to find a forward button.');\n\t\t\t\tproclaim.isNull(oTableEl.querySelector('.o-table-control--back'), 'Did not expect to find a back button.');\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward / backward buttons are added given wrapper and container elements\", (done) => {\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isNotNull(document.querySelector('.o-table-control--forward'), 'Did not find forward button.');\n\t\t\t\tproclaim.isNotNull(document.querySelector('.o-table-control--back'), 'Did not find back button.');\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"backward button is disabled and visualy hidden at the start of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.init();\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward button is disabled and visualy hidden at the end of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tscrollTable(oTableEl, { toEnd: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"backward button is disabled but visible at the start of the table, when the table can be scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward button is disabled but visible at the end of the table, when the table can be scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tscrollTable(oTableEl, { toEnd: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"forward / backward buttons are sticky and hidden when the table is scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true,\n\t\t\t\t\tsticky: true\n\t\t\t\t});\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true,\n\t\t\t\t\tsticky: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"forward / backward buttons are not sticky when the table can not be scrolled past\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start of the table\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start of the table\n\t\t\t\t\tsticky: false\n\t\t\t\t});\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tvisuallyHidden: false,\n\t\t\t\t\tsticky: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\tdescribe(\"control dock\", () => {\n\t\tfunction assertDock(hasDock) {\n\t\t\tconst controlOverlay = document.querySelector('.o-table-overflow-control-overlay');\n\t\t\tproclaim.equal(controlOverlay.classList.contains('o-table-overflow-control-overlay--arrow-dock'), hasDock, `Table control overlay does ${hasDock ? 'not have a control dock' : 'has a control dock'}.`);\n\t\t}\n\t\tit(\"is added given the table is scrollable, expandable, and can be scrolled past\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tforceExpandedTableTallerThanViewport(oTableEl);\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(true);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is smaller than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes a contracted table is smaller than the viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is added if the table is smaller than the viewport and can be scrolled past\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tcanScrollPastTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes a contracted table is smaller than the viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(true);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is not scrollable\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is not expandable\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls are not sticky and instead \\\"dock\\\" given the dock exists and the table is shorter than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes non-expanded table is shorter than viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tvisuallyHidden: false,\n\t\t\t\t\tsticky: false,\n\t\t\t\t\tdock: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls do not \\\"dock\\\" if the dock does not exist\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start and not in a dock\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls do not \\\"dock\\\" when the table is taller than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tforceExpandedTableTallerThanViewport(oTableEl);\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start and not in a dock\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"sticky scroll controls are visually hidden when scrolling past a table with no \\\"dock\\\".\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true, // hidden as scrolled past the table\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"sticky scroll controls remain visible when scrolling past a table with a \\\"dock\\\".\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: false, // visible in dock (does not scroll off table)\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tdock: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/ScrollTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport ScrollTable from './../src/js/Tables/ScrollTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"ScrollTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\toTableEl.classList.add('o-table--responsive-scroll');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew ScrollTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new ScrollTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('clones column data into a new row with row header', (done) => {\n\t\tnew ScrollTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tconst duplicateRowClass = '.o-table__duplicate-row';\n\t\t\t\tconst duplicateRows = document.querySelectorAll(duplicateRowClass);\n\t\t\t\tproclaim.equal(duplicateRows.length, 5, `Expected to find 5 rows with duplicate data and class \"${duplicateRowClass}\".`);\n\t\t\t\tduplicateRows.forEach(row => {\n\t\t\t\t\tconst duplicateHeadings = row.querySelectorAll('th[scope=\"row\"][role=\"rowheader\"]');\n\t\t\t\t\tproclaim.equal(duplicateHeadings.length, 1, `Expected to find a row heading within the rows of duplicate data, with scope=\"row\" and role=\"rowheader\".`);\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/Sort/TableSorter.test.js",
      "contents": "/* eslint-env mocha, sinon */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './../helpers/sandbox';\nimport BaseTable from './../../src/js/Tables/BaseTable';\nimport FlatTable from './../../src/js/Tables/FlatTable';\nimport TableSorter from './../../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BaseTable\", () => {\n\tlet oTableEl;\n\tlet table;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t});\n\n\tfunction assertSortOrder({sortOrder, columnIndex, expected}) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst tbody = oTableEl.querySelector('tbody');\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\t// Assert correct sort order.\n\t\t\t\t\tconst tableRows = tbody.querySelectorAll('tr');\n\t\t\t\t\tif (tableRows.length === 0) {\n\t\t\t\t\t\tthrow new Error('Could not find rows to test against.');\n\t\t\t\t\t}\n\t\t\t\t\ttableRows.forEach((row, index) => {\n\t\t\t\t\t\tconst cells = row.querySelectorAll('td,th:not(.o-table__duplicate-heading)');\n\t\t\t\t\t\tproclaim.equal(cells[columnIndex].innerHTML, expected[index], `Expected a sort order of \"${expected}\".`);\n\t\t\t\t\t});\n\t\t\t\t\t// Assert correct aria labels.\n\t\t\t\t\tconst tableHeaders = thead.querySelectorAll('th');\n\t\t\t\t\tif (tableHeaders.length === 0) {\n\t\t\t\t\t\tthrow new Error('Could not find column headers to test against.');\n\t\t\t\t\t}\n\t\t\t\t\ttableHeaders.forEach((tableHeader, index) => {\n\t\t\t\t\t\tif(index === columnIndex) {\n\t\t\t\t\t\t\tproclaim.equal(tableHeader.getAttribute('aria-sort'), sortOrder, `Expected column header to have aria-sort=\"${sortOrder}\".`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproclaim.equal(tableHeader.getAttribute('aria-sort'), 'none', `Expected the non-sorted column headers to have aria-sort=\"none\".`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t}, 100); // wait for sort and window.requestAnimationFrame to update sort order\n\t\t});\n\t}\n\n\tdescribe('sortRowsByColumn', () => {\n\n\t\tfunction getTableElementWithData(type, dataArray) {\n\t\t\tconst markup = `\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"${type}\">Test Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t${dataArray.map(data => `<tr><td>${data}</td></tr>`).join('')}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tsandbox.setContents(markup);\n\t\t\treturn document.querySelector('[data-o-component=o-table]');\n\t\t}\n\n\t\tit('sorts strings alphabetically with no type specified ascending', done => {\n\t\t\toTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Apple', 'Dragonfruit', 'Durian', 'Naseberry', 'Strawberry'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts strings alphabetically with no type specified descending', done => {\n\t\t\toTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['Strawberry', 'Naseberry', 'Durian', 'Dragonfruit', 'Apple'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts localised strings alphabetically', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Æ', 'apple', 'café', 'caffeine'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts localised strings alphabetically when the Intl.Collator API is not available', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Æ', 'apple', 'café', 'caffeine'];\n\t\t\t// Remove global.Intl\n\t\t\tconst intlBackup = Intl;\n\t\t\tdelete global.Intl;\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tlet error;\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected })\n\t\t\t\t.catch(err => {\n\t\t\t\t\terror = err;\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tglobal.Intl = intlBackup; // Retore global.Intl\n\t\t\t\t\tdone(error);\n\t\t\t\t});\n\t\t});\n\n\t\tit('sorts \"number\" type ascending', done => {\n\t\t\toTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5', '1.5', '1.75', '2', '3'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"number\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['3','2','1.75','1.5','0.5'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"numeric\" type ascending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5', '1.5', '1.75', '2', '3'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"numeric\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['3','2','1.75','1.5','0.5'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"percent\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('percent', ['1.5%', '0.5%', '2%', '50%']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['50%','2%','1.5%','0.5%'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"date\" type with FT style time descending', done => {\n\t\t\toTableEl = getTableElementWithData('date', ['7pm', '7am', '6.30am', '6.30pm']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['7pm', '6.30pm', '7am', '6.30am'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"date\" type with FT style dates and time ascending', done => {\n\t\t\t// assumes current year where not specified\n\t\t\toTableEl = getTableElementWithData('date', ['August 17', 'September 12 2012', 'January 2012', 'March 12 2015 1am', 'April 20 2014 3.30am', 'April 20 2014 2.30pm']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['January 2012', 'September 12 2012', 'April 20 2014 3.30am', 'April 20 2014 2.30pm', 'March 12 2015 1am', 'August 17'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts abbreviated type \"currency\" ascending', done => {\n\t\t\t// assumes current year where not specified\n\t\t\toTableEl = getTableElementWithData('currency', ['E£5', '€5.46', 'CFA Fr830', 'DKr10', '£4', 'HK$12', '$140', '￥155', 'Rmb100bn', '13 colons', 'Rp3,400']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['£4', 'E£5', '€5.46', 'DKr10', 'HK$12', '13 colons', '$140', '￥155', 'CFA Fr830', 'Rp3,400', 'Rmb100bn'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts from \"<span>\", \"<a>\", \"<i>\" tags and \"<img>\" tag \"alt\" attributes', done => {\n\t\t\toTableEl = getTableElementWithData('', [\n\t\t\t\t'<a href=\"#\">y</a>',\n\t\t\t\t'<span><a href=\"#\">v</a></span>',\n\t\t\t\t'<i class=\"o-icons-icon\">x</i>',\n\t\t\t\t'<img src=\"#\" alt=\"w\">',\n\t\t\t\t'<span>z</span>'\n\t\t\t]);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = [\n\t\t\t\t'<span><a href=\"#\">v</a></span>',\n\t\t\t\t'<img src=\"#\" alt=\"w\">',\n\t\t\t\t'<i class=\"o-icons-icon\">x</i>',\n\t\t\t\t'<a href=\"#\">y</a>',\n\t\t\t\t'<span>z</span>'\n\t\t\t];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts from \"aria-label\" or \"title\" of \"<span>\", \"<a>\", or \"<i>\" tags if they have no content', done => {\n\t\t\toTableEl = getTableElementWithData('', [\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\">e</span>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>'\n\t\t\t]);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = [\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\">e</span>'\n\t\t\t];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"n/a\" and \"-\" as if empty cells (first in ascending order)', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'N/A', 'n.a.', '-', '', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['N/A', 'n.a.', '-', '', 'Æ', 'apple', 'café', 'caffeine'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts non-numeric fields in a \"numeric\" column first when ascending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['9', '' ,'0.5', 'Some Non-Numeric Text', 'N/A', '300', '-']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['', 'N/A', '-', 'Some Non-Numeric Text', '0.5', '9', '300'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts ranges, using the value before a dash or en-dash', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1-3', '10-21', '0.5-200']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5-200', '1-3', '10-21'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts ignoring any duplicate headings of the FlatTable', done => {\n\t\t\t// Issue: https://github.com/Financial-Times/o-table/pull/106\n\t\t\toTableEl = getTableElementWithData('numeric', ['3', '1', '999', '2']);\n\t\t\ttable = new FlatTable(oTableEl, sorter); // Flat table duplicates headings within rows.\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['1', '2', '3', '999'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts by attribute \"data-o-table-sort-value\" value if set', done => {\n\t\t\tsandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"c\">snowman</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"a\">42</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"b\">pangea</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['42', 'pangea', 'snowman'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts row headers', done => {\n\t\t\tsandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t\t<th>Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">c</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">a</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">b</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['a', 'b', 'c'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts custom data types according to a given formatter', done => {\n\t\t\toTableEl = getTableElementWithData('emoji-time', ['🌑', '🌤', '🌑', '🌤']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['🌑', '🌑', '🌤', '🌤'];\n\t\t\tsorter.setCellFormatterForType('emoji-time', cell => {\n\t\t\t\tconst text = cell.textContent.trim();\n\t\t\t\tif (text === '🌑') {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (text === '🌤') {\n\t\t\t\t\treturn 2;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('calls the table\\'s \"sorted\" method', (done) => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1','3','2']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst sortedSpy = sinon.spy(table, 'sorted');\n\t\t\tsorter.sortRowsByColumn(table, 0, 'ascending');\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet error;\n\t\t\t\ttry {\n\t\t\t\t\tproclaim.isTrue(sortedSpy.calledWith({\n\t\t\t\t\t\tcolumnIndex: 0,\n\t\t\t\t\t\tsortOrder: 'ascending'\n\t\t\t\t\t}));\n\t\t\t\t\tsortedSpy.restore();\n\t\t\t\t} catch (err) {\n\t\t\t\t\terror = err;\n\t\t\t\t} finally {\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/fixtures.js",
      "contents": "\nconst longTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\n\nconst shortTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\n\nexport {\n\tlongTableWithContainer,\n\tshortTableWithContainer,\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/sandbox.js",
      "contents": "let sandboxEl;\n\nexport function init() {\n\tif (document.querySelector('.sandbox')) {\n\t\tsandboxEl = document.querySelector('.sandbox');\n\t} else {\n\t\tsandboxEl = document.createElement('div');\n\t\tsandboxEl.classList.add('sandbox');\n\t\tdocument.body.appendChild(sandboxEl);\n\t}\n}\n\nexport function reset() {\n\twhile (sandboxEl.firstChild) {\n\t\tsandboxEl.removeChild(sandboxEl.firstChild);\n\t}\n}\n\nexport function setContents(html) {\n\tsandboxEl.innerHTML = html;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/oTable.test.js",
      "contents": "/* eslint-env mocha, proclaim */\n\nimport proclaim from 'proclaim';\n\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport OTable from './../main';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport OverflowTable from './../src/js/Tables/OverflowTable';\nimport FlatTable from './../src/js/Tables/FlatTable';\nimport ScrollTable from './../src/js/Tables/ScrollTable';\nimport BasicTable from './../src/js/Tables/BasicTable';\n\ndescribe('OTable constructs', () => {\n\tlet oTableEl;\n\tlet testOTable;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tafterEach(() => {\n\t\ttestOTable = undefined;\n\t\tsandbox.reset();\n\t\toTableEl = undefined;\n\t});\n\n\tit('a ScrollTable when the table has attribute data-o-table-responsive=\"scroll\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'scroll');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, ScrollTable);\n\t});\n\n\tit('an OverflowTable when the table has attribute data-o-table-responsive=\"overflow\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'overflow');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, OverflowTable);\n\t});\n\n\n\tit('a FlatTable when the table has attribute data-o-table-responsive=\"flat\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'flat');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, FlatTable);\n\t});\n\n\tit('a BasicTable when the table has attribute data-o-table-responsive=\"\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', '');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, BasicTable);\n\t});\n\n\tit('a BasicTable when the table does not have the data-o-table-responsive attribute', () => {\n\t\toTableEl.removeAttribute('data-o-table-responsive');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, BasicTable);\n\t});\n});\n\ndescribe('Init', () => {\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(`\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t`);\n\t});\n\n\tafterEach(() => {\n\t\tsandbox.reset();\n\t});\n\n\tit('instantiates every o-table in the document', () => {\n\t\tconst tables = OTable.init();\n\t\tproclaim.equal(tables instanceof Array, true, 'init did not return an array of tables.');\n\t\tproclaim.equal(tables.length, 3, 'init did not return the expected number of tables.');\n\t\tproclaim.equal(tables[0] instanceof BaseTable, true, 'a table returned did not extend BaseTable.');\n\t});\n\n\tit('instantiates a single o-table for a given selector which returns one table', () => {\n\t\tconst firstTable = document.querySelector('.o-table');\n\t\tfirstTable.setAttribute('id', 'test-table');\n\t\tconst otable = OTable.init('#test-table');\n\t\tproclaim.equal(otable instanceof BaseTable, true, 'Did not return an instance of BaseTable.');\n\t});\n});\n"
    }
  ]
}

exports['occ o-table-7.0.0 o-table-7.0.0 with CIRCLE_REPOSITORY_URL set matches snapshot 1'] = {
  "contents": [
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": ".npmignore",
      "contents": ".gitignore\nbuild\ntest\nkarma.conf.js\npackage.json.idea/\n.jshintrc\n.sass-cache/\nbower_components/\nbuild/\ndemos/local/\nnode_modules/\n.editorconfig\n.DS_Store\n.gitignore\nbuild\ntest\nkarma.conf.js\npackage.json.idea/\n.jshintrc\n.sass-cache/\nbower_components/\nbuild/\ndemos/local/\nnode_modules/\n.editorconfig\n.DS_Store\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "README.md",
      "contents": "# o-table \nStyling for tables.\n\n- [Usage](#usage)\n\t- [Markup](#markup)\n\t- [Sass](#sass)\n\t- [JavaScript](#javascript)\n- [Troubleshooting](#troubleshooting)\n- [Migration guide](#migration-guide)\n- [Contact](#contact)\n- [Licence](#licence)\n\n## Usage\n\n### Markup\n\n#### Basic table\n\nAdd an `o-table` class to any table you wish to apply the styles to:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t...\n</table>\n```\n\nWhere table headings (`th`) are used as row headings, `scope=\"row\"` attributes must be set on the `th`:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<th scope=\"row\" role=\"rowheader\">Item</th>\n\t\t\t<td>Holiday</td>\n\t\t\t<td>Lunch</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th scope=\"row\" role=\"rowheader\">Cost</th>\n\t\t\t<td>£123.45</td>\n\t\t\t<td>£7</td>\n\t\t</tr>\n\t</tbody>\n\t...\n</table>\n```\n\nThe table's `caption` element should include a header of the appropriate level and style for the table's context.\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<caption class=\"o-table__caption\">\n\t\t<h2>My Table Caption</h2>\n\t</caption>\n\t<thead>\n\t\t...\n\t</thead>\n\t<tbody>\n\t\t...\n\t</tbody>\n\t...\n</table>\n```\n\nThe table's footer `tfoot` element may use the helper class `o-table-footnote` to display sources, disclaimers, etc.\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=2 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n\t<thead>\n\t\t...\n\t</thead>\n\t<tbody>\n\t\t...\n\t</tbody>\n\t...\n</table>\n```\n\n#### Disable sort\n\nTable columns are sortable by default but may be disabled by adding `data-o-table-sortable=\"false\"` to the table.\n```html\n<table class=\"o-table\" data-o-component=\"o-table\" data-o-table-sortable=\"false\">\n</table>\n```\n\nOr to disable sort per table column, add `data-o-table-heading-disable-sort` to the column's `th` element.\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Heading One</th>\n\t\t\t<!-- do not show the actions column as sortable -->\n\t\t\t<th data-o-table-heading-disable-sort>Actions</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>Item One</td>\n\t\t\t<td><a href=\"#edit\">edit</a></td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n#### Responsive options\n\nThere are three options for small viewports where the table does not fit.\n\n1. [overflow](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-overflow) - Scroll the whole table including headings horizontally. This option also supports an [expander](#expander).\n2. [scroll](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-scroll) - Flip the table so headings are in the first column and sticky, data is scrollable horizontally.\n3. [flat](https://www.ft.com/__origami/service/build/v2/demos/o-table/responsive-flat) - Split each row into an individual item and repeat headings.\n\nTo enable these set `data-o-table-responsive` to the type of responsive table desired and add the classes for that type of table. Then wrap the table in `o-table-container`, `o-table-overlay-wrapper`, `o-table-scroll-wrapper`. E.g for an \"overflow\" table:\n\n```html\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow o-table--responsive-flat\" data-o-component=\"o-table\" data-o-table-responsive=\"overflow\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n```\n\nMore examples are available in [the registry](https://registry.origami.ft.com/components/o-table).\n\n#### Expander\n\nThe \"overflow\" style of responsive table ([see above](#responsive-options)) supports an expander to hide rows and offer a \"show more\" / \"show fewer\" button. To enable this feature set `data-o-table-expanded=\"false\"` to the table. The number of rows to show when the table is not expanded can be configured with `data-o-table-minimum-row-count=\"20\"` _(default: 20)_.\n\n```html\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll--wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow o-table--responsive-flat\"\n\t\t\tdata-o-component=\"o-table\"\n\t\t\tdata-o-table-responsive=\"overflow\"\n\t\t\tdata-o-table-expanded=\"false\"\n\t\t\tdata-o-table-minimum-row-count=\"10\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n```\n\nTo add a footnote to an expandable table, for example with disclaimers or sources, add the footnote within the container and link to the table with an id and the `aria-describedby` attribute. If not working on an expandable table, [use the `tfoot` element instead](#basic-table).\n```diff\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll--wrapper\">\n+\t\t\t<table aria-describedby=\"demo-footnote\">\n\t\t\t\t...\n\t\t\t</table>\n\t\t</div>\n\t</div>\n+\t<div id=\"demo-footnode\" class=\"o-table-footnote\">\n+\t\tSource: The Origami team's love of fruit.\n+\t</div>\n</div>\n```\n\n#### Additional markup\n- `o-table--compact` - Apply to the table for smaller typography and padding.\n- `o-table--row-stripes` - Apply to the table for alternating stripes on the table rows.\n- `o-table-footnote` - Style a `tfoot` element subtily for sources, disclaimers, etc.\n- `o-table__cell--numeric` - Apply to numeric cells to align content to the right.\n- `o-table__cell--vertically-center` - Apply to cells which should center vertically.\n\nSee more in the registry: [o-table demos](https://registry.origami.ft.com/components/o-table).\n\n### Sass\n\n#### Silent mode\n\nIf using `o-table` in silent mode, `@include oTable()` includes styles for all features. Alternatively styles may be included granularly with an `$opts` map.\n\nInclude all table features:\n```scss\n@include oTable();\n```\n\nAlternatively include base styles with only selected optional features. E.g. to include only the \"overflow\" responsive table and styles for table lines:\n```scss\n@include oTable($opts: (\n\t'responsive-overflow',\n\t'lines'\n));\n```\n\n| Feature             | Description                                             | Brand support                |\n|---------------------|---------------------------------------------------------|------------------------------|\n| responsive-overflow | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| responsive-flat     | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| responsive-scroll   | See [responsive options](#responsive-options).          | master, internal, whitelabel |\n| lines               | Styles for horizontal and vertical lines, plus borders. | master, internal, whitelabel |\n| compact             | A table with smaller typography and padding.            | master, internal, whitelabel |\n| stripes             | Alternating row stripe styles.                          | master, internal             |\n| row-headings        | Row heading styles.                                     | internal                     |\n\n### JavaScript\n\nTo manually instantiate `o-table`:\n\n``` js\nconst OTable = require('o-table');\nOTable.init();\n```\nor\n``` js\nconst OTable = require('o-table');\noTable = new OTable(document.body);\n```\n\nThis will return an instance of `BasicTable` (default), `OverflowTable`, `FlatTable`, or `ScrollTable` depending on the value of `data-o-table-responsive`. All four table types extend `BaseTable`.\n\nInstantiation will add column sorting to all tables. It will also add scroll controls and, if configured, an [expander](#expander) to any `OverflowTable`. These can be configured with [data attributes](#disable-sort) or imperatively with an options object:\n\n``` js\nconst OTable = require('o-table');\nOTable.init(document.body, {\n\tsortable: true,\n\texpanded: true,\n\tminimumRowCount: 10,\n});\n```\n\n#### Sorting\n\nAll `o-table` instances support sorting. Sorting on non-string values such as numbers works if the column type has been declared. E.g. for a column of numbers add the following to `o-table`:\n`data-o-table-data-type=\"number\"`.\n\nOther data types for `data-o-table-data-type` include:\n\n| type     | description                                                                                   | examples                                   |\n|----------|-----------------------------------------------------------------------------------------------|--------------------------------------------|\n| text     | The default, content is sorted as a stirng.                                                   | \"Jane Doe\", \"John Smith\"                   |\n| date     | Supports the FT style of date and time, including abbreviation.                               | \"Aug 17\", \"1.30am\", \"April 20 2014 1.30pm\" |\n| number   | Any number which may include number formatting and abbreviation.                              | \"1,200\", \"100\", \"3.2\", \"1bn\", \"2tn\"        |\n| percent  | Any percentage with or without the symbol \"%\".                                                | \"3.3%\", \"200%\", \"50%\"                      |\n| currency | Any currency, which may include number formatting, number abbreviation, and currency symbols. | \"$84m\", \"£36bn\", \"HK$90bn\", \"Rp14.595\"     |\n| numeric  | A column which may be treated as numeric which does not fit a more specific type.             | \"101 dalmatians\"                           |\n\nIt is possible to add sort support for a custom data type. Alternatively, the behaviour of an existing type may be modified.\n\n##### Custom sort (declarative)\n\nIf you are wanting to sort by a custom pattern, you can apply the sorting values to each row as a data attribute:\n`data-o-table-sort-value=${sort-value}`. These values can be strings or integers.\n\nFor example to support a custom date format set `data-o-table-sort-value` to its UNIX Epoch.\n\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"date\">Custom Date Formats</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"1533081600\">Wednesday, 1 August 2018</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"1483228800\">Jan 2017</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=\"723168000\">1st December 1992</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\nOr to provide an arbitrary sort order:\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Things</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>snowman</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=3>42</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>pangea</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n##### Custom sort (imperative)\n\nRather than specify `data-o-table-sort-value` [declaratively](#custom-sort-declarative), a formatter function may be provided client-side to generate sort values for a given data type.\n\nFor example we could add support for a custom data type `emoji-time`.\n\n``` html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"emoji-time\">Emoji Time</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌤️️</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>🌤️️</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\nTo do that call `setSortFormatterForType` with the custom data type and a formatter function.\nThe formatter accepts the table cell (HTMLElement) and returns a sort value (Number or String) for that cell.\nIn this case we add support for our custom type `emoji-time` by assigning the emoji a numerical sort value. This will effect all tables instantiated by `OTable`.\n\n``` js\nconst OTable = require('o-table');\n// Set a filter for custom data type \"emoji-time\".\n// The return value may be a string or number.\nOTable.setSortFormatterForType('emoji-time', (cell) => {\n\tconst text = cell.textContent.trim();\n\tif (text === '🌑') {\n\t\treturn 1;\n\t}\n\tif (text === '🌤️️') {\n\t\treturn 2;\n\t}\n\treturn 0;\n});\nOTable.init();\n```\n\nWhich for an ascending sort, will result in:\n\n```html\n<table class=\"o-table\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th data-o-table-data-type=\"emoji-time\" aria-sort=\"ascending\">Emoji Time</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=1>🌑</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>🌤️️</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td data-o-table-sort-value=2>🌤️️</td>\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n#### Events\n\nThe following events are fired by `o-table`.\n\n- `oTable.ready`\n- `oTable.sorting`\n- `oTable.sorted`\n\n##### oTable.ready\n\n`oTable.ready` fires when the table has been initialised.\n\nThe event provides the following properties:\n- `detail.instance` - The initialised `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\n##### oTable.sorted\n\n`oTable.sorted` indicates a table has finished sorting. It includes details of the current sort status of the table.\n\nThe event provides the following properties:\n- `detail.sortOrder` - The sort order e.g. \"ascending\" _(String)_.\n- `detail.columnIndex` - The index of the sorted column heading _(Number)_.\n- `detail.instance` - The effected `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\n```js\ndocument.addEventListener('oTable.sorted', (event) => {\n\tconsole.log(`The target table was just sorted by column \"${event.detail.columnIndex}\" in an \"${event.detail.sortOrder}\" order.`);\n});\n```\n\n##### oTable.sorting\n\nThis event is fired just before a table sorts based on user interaction. It may be prevented to implement custom sort functionality. This may be useful to sort a paginated table server-side.\n\nThe event provides the following properties:\n- `detail.sortOrder` - The sort requested e.g. \"ascending\" _(String)_.\n- `detail.columnIndex` - The index of the column heading which will be sorted _(Number)_.\n- `detail.instance` - The effected `o-table` instance _(FlatTable | ScrollTable | OverflowTable | BasicTable)_.\n\nWhen intercepting the default sort the `sorted` method must be called with relevant parameters when the custom sort is completed.\n\n```js\ndocument.addEventListener('oTable.sorting', (event) => {\n\t// Prevent default sorting.\n\tevent.preventDefault();\n\t// Update the table with a custom sort.\n\tconsole.log(`Update the table with sorted data here.`);\n\t// Fire the sorted event, passing along the column index and sort.\n\tevent.detail.instance.sorted(event.detail.columnIndex, event.detail.sort);\n});\n```\n\n##### Get The Sorted Column Heading From A Sort Event\n\n`o-table` sort events provide a `columnIndex`. This index maps to a column heading. To retrieve the column heading use `getTableHeader`.\n\n```js\ndocument.addEventListener('oTable.sorting', (event) => {\n\tconst table = event.detail.instance;\n\tconst columnIndex = event.detail.columnIndex;\n\t// Get the table header from the column index.\n\tconsole.log(table.getTableHeader(columnIndex));\n});\n```\n\n## Troubleshooting\n\nKnown issues:\n* IE11 and below need the [polyfill service](https://polyfill.io/)\n\n## Migration guide\n\n### How to upgrade from v5.x.x to v6.x.x?\n- To prevent errors in IE11, add support for `IntersectionObserverEntry` and `IntersectionObserver` with the [polyfill service](https://polyfill.io/).\n- Data attribute `data-o-table-order` has been removed. To specify a custom sort order on `td` cells use `data-o-table-sort-value` instead.\n- Markup updates:\n\t- Previous `o-table` demos omitted `thead` and `tbody` from `table`, including their child `tr` element. Ensure your table markup is correct and includes `thead` and `tbody`.\n\t- `o-table__caption--top` and `o-table__caption--bottom` have been removed. Remove these classes and add a heading within the caption (e.g. a `<h2>`) with appropriate styling.\n\t- `o-table-wrapper` is now `o-table-scroll-wrapper`\n\t- Responsive tables are now wrapped in a container div `o-table-container` and overlay div `o-table-overlay-wrapper`.\n\t- Responsive tables should now have their type specified via a data attribute e.g. `data-o-table-responsive=\"overflow\"`.\n```diff\n+<div class=\"o-table-container\">\n+    <div class=\"o-table-overlay-wrapper\">\n+     \t<div class=\"o-table-scroll-wrapper\">\n-    \t<div class=\"o-table-wrapper\">\n-        \t<table data-o-component=\"o-table\" class=\"o-table--responsive-overflow\">\n+        \t<table data-o-component=\"o-table\" class=\"o-table--responsive-overflow\" data-o-table-responsive=\"overflow\">\n-            \t<caption class=\"o-table__caption o-table__caption--bottom\">\n+            \t<caption class=\"o-table__caption\">\n-                \tMy Table Caption\n+                \t<h2>My Table Caption</h2>\n             \t</caption>\n             \t<!-- thead, tbody -->\n        \t</table>\n    \t</div>\n+   </div>\n+</div>\n```\n- Style updates:\n\t- The default bottom margin of `o-table` has been removed. Please apply the margin as needed, depending on the context of the table e.g. within typical body copy:\n\t```scss\n\t\t.o-table {\n\t\t\tmargin-bottom: oTypographySpacingSize($units: 4);\n\t\t}\n\t```\n- Mixin updates:\n\t- All `o-table` mixins have been made private except for a new mixin `@include oTable($opts)`. It accepts an feature list `$opts` to include `o-table` styles granularly. Replace previous mixins with one call to the [`oTable` mixin with an optional `$opts` flag](#silent-mode). Please [contact us](#contact) if this does not suit your product.\n\t- `oTableAll` has been replaced with `oTable`, which does not accept a class name `$classname`. Instead use the default `o-table` class name in your markup. As the mixin now output classes directly, they must not be wrapped in an `.o-table` class manually.\n```diff\n-.o-table {\n-    @include oTableBase;\n-    @include oTableResponsiveFlat;\n-}\n-.o-table-wrapper {\n-    @include oTableWrapper;\n-}\n-.o-table-container {\n-    @include oTableContainer;\n-}\n\n+ @include oTable($opts: ('responsive-flat'));\n```\n- JS updates:\n\t- `OTable` returns an instance of `BasicTable`, `FlatTable`, `ScrollTable`, `OverflowTable` on construction, according to the type of table. All extend from `BaseTable`.\n\t- Table properties removed or made private: `isResponsive`, `listeners`.\n\t- Table methods removed or made private:\n\t\t- `wrap`: for a responsive table manually wrap the table in a container and wrapper class.\n\t\t```html\n\t\t<div class=\"o-table-container\">\n\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t<!-- table -->\n\t\t\t</div>\n\t\t</div>\n\t\t```\n\t\t- `sortRowsByColumn`: arguments are simplified `sortRowsByColumn(columnIndex, sortOrder)` over `sortRowsByColumn(index, sortAscending, isNumericValue, type)`, where `columnIndex` replaces `index` and `sortOrder` is \"ascending\" or \"descending\".\n\t\t- `removeEventListeners`\n\t\t- `dispatch`\n- Events:\n\t- Event detail `detail.oTable` is now `detail.instance`.\n\t- Event detail `detail.sort` is now `detail.sortOrder`, the value is now \"ascending\" rather than \"ASC\", and \"descending\" rather than \"DES\".\n\t- The `oTable.sorting` event target is no longer the `th` of the column being sorted. To find the sorted column use [the event detail](#get-the-sorted-column-heading-from-a-sort-event) instead.\n- Colour:\n\t- All [deprecated colour usecases](https://github.com/Financial-Times/o-table/blob/533811d7f8673a7576a31608df8cd71777ff39d5/src/scss/_deprecated.scss) have been removed, ensure `o-table` colours are not used in your project.\n\n\n### How to upgrade from v4.x.x to v5.x.x?\n\nThis major takes the new o-colors and o-typography. Some of the colors and typography have changed slightly from v4 to v5. The font size and line heights of the table data has increased to sit in line with the new typography scale. Some of the colors have changed as there isn't an exact mapping from one color to the other in o-colors.\n\nThe `oTableCellContentPrimary` mixin (deprecated in v5) has been removed.\nThe concrete classes `.primary-data` and `.secondary-data` (deprecated in v5) have been removed.\n\n### How to upgrade from v3.x.x to v4.x.x?\n\n#### Important Changes\n\n- In order to have sorting work correctly, tables need `thead` and `tbody` elements\n- The Javascript module now returns an o-table constructor\n\n#### Markup changes\n\n- Wrap the headings in `thead`\n- Add `data-o-component=\"o-table\"` to the `table` element of any o-table components which require JS.\n\n---\n\n## Contact\n\nIf you have any questions or comments about this component, or need help using it, please either [raise an issue](https://github.com/Financial-Times/o-table/issues), visit [#ft-origami](https://financialtimes.slack.com/messages/ft-origami/) or email [Origami Support](mailto:origami-support@ft.com).\n\n----\n\n## Licence\n\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT).\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "app.json",
      "contents": "{\n  \"name\": \"o-table\",\n  \"scripts\": {},\n  \"env\": {},\n  \"formation\": {},\n  \"addons\": [],\n  \"buildpacks\": [{\n      \"url\": \"heroku/nodejs\"\n    }]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "bower.json",
      "contents": "{\n  \"name\": \"o-table\",\n  \"dependencies\": {\n    \"o-colors\": \"^4.0.0\",\n    \"o-grid\": \"^4.0.6\",\n    \"o-icons\": \">=4.0.0 <6\",\n    \"o-typography\": \"^5.0.0\",\n    \"o-brand\": \"^3.1.1\",\n    \"o-visual-effects\": \"^2.0.3\",\n    \"o-buttons\": \"^5.14.0\",\n    \"dom-delegate\": \"ftdomdelegate#^2.2.0\"\n  },\n  \"main\": [\n    \"main.scss\",\n    \"main.js\"\n  ],\n  \"ignore\": [\n    \".gitignore\",\n    \"build\",\n    \"test\",\n    \"karma.conf.js\",\n    \"package.json\"\n  ]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "browser.js",
      "contents": "/*global require, module*/\nimport oTable from \"./dist/js/oTable\";\n\nvar constructAll = function constructAll() {\n  oTable.init();\n  document.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\nexport default oTable;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/base.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table aria-describedby=\"demo-footnote\" class=\"o-table o-table--horizontal-lines {{modifierClass}} {{#tableType}}o-table--responsive-{{tableType}}{{/tableType}}\" data-o-component=\"o-table\" {{#tableType}}data-o-table-responsive=\"{{tableType}}\"{{/tableType}}>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div id=\"demo-footnote\" class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/basic.mustache",
      "contents": "<table class=\"o-table {{^isStriped}}o-table--horizontal-lines{{/isStriped}} {{modifierClass}}\" data-o-component=\"o-table\">\n    {{#showCaption}}\n        <caption class=\"o-table__caption\">\n            <h2 class=\"o-typography-heading-level-2\">Table Caption</h2>\n        </caption>\n    {{/showCaption}}\n    {{#showFooter}}\n        <tfoot>\n            <tr>\n                <td colspan=5 class=\"o-table-footnote\">\n                    Source: The Origami team's love of fruit.\n                </td>\n            </tr>\n        </tfoot>\n    {{/showFooter}}\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/cell-styles.mustache",
      "contents": "<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Report date</th>\n\t\t\t<th data-o-table-heading-disable-sort>Action</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">Vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">Another vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class=\"o-table__cell--vertically-center\">A third vertically centred row</td>\n\t\t\t<td class=\"o-table__cell--vertically-center\">\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">View</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Edit</a></div>\n\t\t\t\t<div><a class=\"o-typography-link\" href=\"#\">Download</a></div>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.js",
      "contents": "/*global require*/\n\n(function() {\n\trequire('./../../main');\n}());\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/demo.scss",
      "contents": "$o-table-is-silent: false;\n@import \"./../../main\";\n\n// Default font and styles\nhtml {\n\tfont-family: BentonSans, sans-serif;\n\tbackground: oColorsGetColorFor('page', 'background');\n}\n\n.o-table-demo-constrain {\n\tmax-width: 600px;\n}\n\n.o-table-demo-pad {\n\tpadding-bottom: 1000px;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/expanding.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table o-table--horizontal-lines o-table--responsive-overflow\"  data-o-component=\"o-table\" data-o-table-responsive=\"overflow\" data-o-table-minimum-row-count=\"10\" data-o-table-expanded=\"{{expanded}}\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/pa11y.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table aria-describedby=\"demo-footnote\" class=\"o-table o-table--horizontal-lines o-table--responsive-overflow\" data-o-component=\"o-table\" data-o-table-responsive=\"overflow\" data-o-table-minimum-row-count=\"2\" data-o-table-expanded=\"false\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n\t<div id=\"demo-footnote\" class=\"o-table-footnote\">\n\t\tSource: The Origami team's love of fruit.\n\t</div>\n</div>\n\n\n<table class=\"o-table o-table--compact o-table--row-stripes\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n\n<table class=\"o-table o-table--row-stripes\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n\n<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t<tfoot>\n\t\t<tr>\n\t\t\t<td colspan=5 class=\"o-table-footnote\">\n\t\t\t\tSource: The Origami team's love of fruit.\n\t\t\t</td>\n\t\t</tr>\n\t</tfoot>\n    <thead>\n        <tr>\n            <th scope=\"col\" role=\"columnheader\">Fruit</th>\n            <th scope=\"col\" role=\"columnheader\">Genus</th>\n            <th scope=\"col\" role=\"columnheader\">Characteristic</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n            <th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Dragonfruit</td>\n            <td>Stenocereus</td>\n            <td>Juicy</td>\n            <td class=\"o-table__cell--numeric\">3</td>\n            <td class=\"o-table__cell--numeric\">2.72</td>\n        </tr>\n        <tr>\n            <td>Durian</td>\n            <td>Durio</td>\n            <td>Smelly</td>\n            <td class=\"o-table__cell--numeric\">1.75</td>\n            <td class=\"o-table__cell--numeric\">1.33</td>\n        </tr>\n        <tr>\n            <td>Naseberry</td>\n            <td>Manilkara</td>\n            <td>Chewy</td>\n            <td class=\"o-table__cell--numeric\">2</td>\n            <td class=\"o-table__cell--numeric\">1.85</td>\n        </tr>\n        <tr>\n            <td>Strawberry</td>\n            <td>Fragaria</td>\n            <td>Sweet</td>\n            <td class=\"o-table__cell--numeric\">1.5</td>\n            <td class=\"o-table__cell--numeric\">1.69</td>\n        </tr>\n        <tr>\n            <td>Apple</td>\n            <td>Malus</td>\n            <td>Crunchy</td>\n            <td class=\"o-table__cell--numeric\">0.5</td>\n            <td class=\"o-table__cell--numeric\">0.56</td>\n        </tr>\n    </tbody>\n</table>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/row-headings.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-scroll-wrapper\">\n\t\t<table class=\"o-table o-table--row-headings o-table--vertical-lines\" data-o-component=\"o-table\">\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" role=\"rowheader\">Item</th>\n\t\t\t\t<td>Holiday</td>\n\t\t\t\t<td>Lunch</td>\n\t\t\t\t<td>Coffee</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\" role=\"rowheader\">Cost</th>\n\t\t\t\t<td>£123.45</td>\n\t\t\t\t<td>£7</td>\n\t\t\t\t<td>£2.34</td>\n\t\t\t</tr>\n\t\t</table>\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "demos/src/sorting.mustache",
      "contents": "<div class=\"o-table-container\">\n\t<div class=\"o-table-scroll-wrapper\">\n\t\t<table class=\"o-table o-table--horizontal-lines\" data-o-component=\"o-table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Links</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Date</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Abbreviated&nbsp;Date</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Date&nbsp;&amp;&nbsp;Time</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"date\">Time</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Formatted&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Abbreviated&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"number\">Ranged&nbsp;numbers</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"currency\">Ranged&nbsp;currency</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"currency\">Abbreviated&nbsp;currency</th>\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"percent\">Percentage</th>\n\t\t\t\t\t<!-- do not show the actions column as sortable -->\n\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-heading-disable-sort>Actions</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Pitaya\">Dragonfruit <i class=\"list-view__icon o-icons-icon o-icons-icon--tick\"></i></a></td>\n\t\t\t\t\t<td>August 17 2018</td>\n\t\t\t\t\t<td>Aug 17</td>\n\t\t\t\t\t<td>Aug 17 9pm</td>\n\t\t\t\t\t<td>1.30am</td>\n\t\t\t\t\t<td>138,000</td>\n\t\t\t\t\t<td>84m</td>\n\t\t\t\t\t<td>5m&ndash;10m</td>\n\t\t\t\t\t<td>$84m&ndash;$86m</td>\n\t\t\t\t\t<td>$84m</td>\n\t\t\t\t\t<td>30%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Durian\">Durian*</a></td>\n\t\t\t\t\t<td>August 02 2012</td>\n\t\t\t\t\t<td>Aug 7</td>\n\t\t\t\t\t<td>Aug 17 10am</td>\n\t\t\t\t\t<td>1.30pm</td>\n\t\t\t\t\t<td>1,439,165.43**</td>\n\t\t\t\t\t<td>36bn</td>\n\t\t\t\t\t<td>5bn&ndash;8bn</td>\n\t\t\t\t\t<td>£36bn&ndash;£40bn</td>\n\t\t\t\t\t<td>£36bn</td>\n\t\t\t\t\t<td>50%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Manilkara_zapota\">Naseberry</a></td>\n\t\t\t\t\t<td>August 10 2012</td>\n\t\t\t\t\t<td>Dec 21</td>\n\t\t\t\t\t<td>February 12 4.05pm</td>\n\t\t\t\t\t<td>2.45pm</td>\n\t\t\t\t\t<td>1.28</td>\n\t\t\t\t\t<td>1.5bn</td>\n\t\t\t\t\t<td>8.6tn&ndash;12tn</td>\n\t\t\t\t\t<td>HK$74.9bn&ndash;HK$90bn</td>\n\t\t\t\t\t<td>HK$74.9bn</td>\n\t\t\t\t\t<td>15%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Gruy%C3%A8re_cheese\">Gruyère</a></td>\n\t\t\t\t\t<td>February 03 2018</td>\n\t\t\t\t\t<td>Feb 16</td>\n\t\t\t\t\t<td>February 12 4.20pm</td>\n\t\t\t\t\t<td>5.00am</td>\n\t\t\t\t\t<td>138,000.45</td>\n\t\t\t\t\t<td>8.27tn</td>\n\t\t\t\t\t<td>1.3&ndash;5</td>\n\t\t\t\t\t<td>Rp14.595&ndash;Rp20</td>\n\t\t\t\t\t<td>Rp14.595</td>\n\t\t\t\t\t<td>60%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Pitaya\">Dragonfruit <i class=\"list-view__icon o-icons-icon o-icons-icon--tick\"></i></a></td>\n\t\t\t\t\t<td>August 17 2018</td>\n\t\t\t\t\t<td>Aug 17</td>\n\t\t\t\t\t<td>Aug 17 9pm</td>\n\t\t\t\t\t<td>1.30am</td>\n\t\t\t\t\t<td>138,000</td>\n\t\t\t\t\t<td>84m</td>\n\t\t\t\t\t<td>5m&ndash;10m</td>\n\t\t\t\t\t<td>$84m&ndash;$86m</td>\n\t\t\t\t\t<td>$84m</td>\n\t\t\t\t\t<td>30%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Durian\">Durian*</a></td>\n\t\t\t\t\t<td>August 02 2012</td>\n\t\t\t\t\t<td>Aug 7</td>\n\t\t\t\t\t<td>Aug 17 10am</td>\n\t\t\t\t\t<td>1.30pm</td>\n\t\t\t\t\t<td>1,439,165.43**</td>\n\t\t\t\t\t<td>36bn</td>\n\t\t\t\t\t<td>5bn&ndash;8bn</td>\n\t\t\t\t\t<td>£36bn&ndash;£40bn</td>\n\t\t\t\t\t<td>£36bn</td>\n\t\t\t\t\t<td>50%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Manilkara_zapota\">Naseberry</a></td>\n\t\t\t\t\t<td>August 10 2012</td>\n\t\t\t\t\t<td>Dec 21</td>\n\t\t\t\t\t<td>February 12 4.05pm</td>\n\t\t\t\t\t<td>2.45pm</td>\n\t\t\t\t\t<td>1.28</td>\n\t\t\t\t\t<td>1.5bn</td>\n\t\t\t\t\t<td>8.6tn&ndash;12tn</td>\n\t\t\t\t\t<td>HK$74.9bn&ndash;HK$90bn</td>\n\t\t\t\t\t<td>HK$74.9bn</td>\n\t\t\t\t\t<td>15%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"https://en.wikipedia.org/wiki/Gruy%C3%A8re_cheese\">Gruyère</a></td>\n\t\t\t\t\t<td>February 03 2018</td>\n\t\t\t\t\t<td>Feb 16</td>\n\t\t\t\t\t<td>February 12 4.20pm</td>\n\t\t\t\t\t<td>5.00am</td>\n\t\t\t\t\t<td>138,000.45</td>\n\t\t\t\t\t<td>8.27tn</td>\n\t\t\t\t\t<td>1.3&ndash;5</td>\n\t\t\t\t\t<td>Rp14.595&ndash;Rp20</td>\n\t\t\t\t\t<td>Rp14.595</td>\n\t\t\t\t\t<td>60%</td>\n\t\t\t\t\t<td><a class=\"o-typography-link\" href=\"#\">Edit</a></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t</table>\n\t</div>\n</div>\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort/CellFormatter.js",
      "contents": "/**\n * Extracts the contents of img alt text.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractAltFromImages('<img alt=\"text\">'); // text\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} the parameter\n */\nfunction extractAltFromImages(cell) {\n  var images = Array.from(cell.getElementsByTagName('img'));\n  images.forEach(image => {\n    var contents = image.getAttribute('alt');\n    image.insertAdjacentHTML('beforebegin', contents);\n    image.remove();\n  });\n  return cell;\n}\n/**\n * Returns the text represantation of an HTML node.\n * If a node contains no content `aria-label` or `title` attributes of <a>, <span>, or <i> child nodes are used.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractText('<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"mailto:example@ft.com\" title=\"Email Example at example@ft.com\"></a>'); //Email Example at example@ft.com\n * \textractText('<span class=\"o-icons-icon o-icons-icon--tick\">Correct</span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" title=\"Correct\"></span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"Correct\"></span>); //Correct\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} text representation of the HTML node\n */\n\n\nfunction extractText(cell) {\n  var text = cell.textContent.trim(); // No text found, check aria labels and titles.\n  // Useful for icon-only cells.\n\n  if (text === '') {\n    var nodes = cell.querySelectorAll('a, span, i');\n    text = Array.from(nodes).reduce((accumulator, node) => {\n      var nodeText = node.getAttribute('aria-label') || node.getAttribute('title');\n      return nodeText ? \"\".concat(accumulator, \" \").concat(nodeText) : accumulator;\n    }, '');\n  }\n\n  return text.trim();\n}\n/**\n * Returns the text with abbreviations expanded.\n * Supports million 'm', billion 'bn' (1,000 million), and trillion 'tn' (1,000 billion).\n * @example\n *  expandAbbreviations('1m') //1000000\n *  expandAbbreviations('1.2bn') //2200000000\n *  expandAbbreviations('1tn') //1000000000000\n *  expandAbbreviations('5m-10m') //5000000-10000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with any supported abbreviations expanded\n */\n\n\nfunction expandAbbreviations(text) {\n  text = text.replace(/([\\d,.]+)([a-zA-Z]+)/g, (match, digit, abbreviation) => {\n    var zeros = {\n      'm': 6,\n      'bn': 9,\n      'tn': 12\n    };\n    return \"\".concat(digit * Math.pow(10, zeros[abbreviation] || 0));\n  });\n  return text;\n}\n/**\n * Returns the text with digit group separators removed.\n * @example\n *  removeDigitGroupSeparator('1,000') //1000\n *  removeDigitGroupSeparator('40') //40\n *  removeDigitGroupSeparator('4,000,000') //4000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digit group separators (commas) removed.\n */\n\n\nfunction removeDigitGroupSeparators(text) {\n  return text.replace(/,/g, '');\n}\n/**\n * Returns the text with non-number characters removed (e.g. currency symbols).\n * Does not effect range characters e.g. \"–\" will be maintained.\n * If no digits were found to remove, returns the text unchanged.\n * @example\n *  extractDigitsIfFound('Rmb100') //100\n *  extractDigitsIfFound('CFA Fr830') //830\n *  extractDigitsIfFound('HK$12') //12\n *  extractDigitsIfFound('HK$12-HK$20') //12–20\n *  extractDigitsIfFound('1534956593-1534956620') //1534956593–1534956620\n *  extractDigitsIfFound('Some text') //Some text\n *  extractDigitsIfFound('Some text 123') //123\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digits characters only.\n */\n\n\nfunction extractDigitsIfFound(text) {\n  var digitsAndRange = text.replace(/([^\\d.,\\-\\–]+)/g, '');\n\n  if (digitsAndRange === '') {\n    return text;\n  }\n\n  return digitsAndRange;\n}\n/**\n * Returns a number from a range\n * @example\n *  removeRange('1534956593–1534956620') //1534956593\n *  removeRange('123–345') //123\n *  removeRange('123') //123\n *  removeRange('No numbers') //No numbers\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number}\n */\n\n\nfunction extractNumberFromRange(text) {\n  var number = parseFloat(text);\n  return isNaN(number) ? text : number;\n}\n/**\n * Parses FT style date and time and formats as a number for sorting.\n * FT date or date and time returns a UNIX epoch (UTC).\n * FT time returns a positive float for pm, negative for am.\n * @example\n *  ftDateTimeToNumber('August 17') //UNIX epoch, assumes current year\n *  ftDateTimeToNumber('September 12 2012') //UNIX epoch\n *  ftDateTimeToNumber('January 2012') //UNIX epoch, first of month\n *  ftDateTimeToNumber('March 12 2015 1am') //UNIX epoch including time\n *  ftDateTimeToNumber('April 20 2014 1.30pm') //UNIX epoch including time\n *  ftDateTimeToNumber('1am') //1\n *  ftDateTimeToNumber('1.30am') //1.3\n *  ftDateTimeToNumber('1.40pm') //13.4\n *  ftDateTimeToNumber('3pm') //15\n *  ftDateTimeToNumber('Not a known date') //Note a known date\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number} Number representation of date and/or time for sorting.\n */\n\n\nfunction ftDateTimeToNumber(text) {\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // FT style for writing dates: is June 23 2016 (no commas, month date year)\n\n  var date = text.match(/^([A-Za-z]{3,})(?:[\\s])(?=[\\d])((?:\\d{1,2})?(?![\\d]))?(?:\\s)?(\\d{4})?/); // FT style for writing time:\n  // The 12 hour clock should be used: 1am, 9.30pm\n\n  var time = text.match(/(?:\\s|^)(\\d{1,2}(?:[.](\\d{2}))?)(pm|am)$/); // Get date.\n\n  var month = date && date[1] ? date[1] : null; // Get full month name from a given month e.g. 'January' for 'Jan'.\n\n  var matchingMonthNames = monthNames.filter(name => name.indexOf(month) !== -1); // Get the index of the matching month name.\n\n  var monthIndex = matchingMonthNames && matchingMonthNames[0] ? monthNames.indexOf(matchingMonthNames[0]) : null;\n  var day = date && date[2] ? parseInt(date[2], 10) : null;\n  var year = date && date[3] ? parseInt(date[3], 10) : null;\n\n  if (month && !year) {\n    // For sorting purposes, assume a month is for this year if not otherwise specified.\n    year = new Date().getFullYear();\n  } // Get time.\n\n\n  var hour = time && time[1] ? parseInt(time[1], 10) : null;\n  var minute = time && time[2] ? parseInt(time[2], 10) : 0;\n  var period = time ? time[3] : null;\n  var twentyFourHour = hour && period === 'pm' ? hour + 12 : hour; // Sort number for FT formated time.\n\n  if (hour && !(year && monthIndex)) {\n    return parseFloat(\"\".concat(twentyFourHour, \".\").concat(minute));\n  } // Unix epoch to sort FT formated date.\n\n\n  var dateObj = new Date(Date.UTC(year, monthIndex, day, twentyFourHour, minute));\n  return isNaN(dateObj.getTime()) ? text : dateObj.getTime();\n}\n/**\n * Removes and number of asterisk's which are at the end of the line.\n * @example\n *  removeRefereneAsterisk('Durian*') //Durian\n *  removeRefereneAsterisk('1,439,165.43**') //1,439,165.43\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text without source/reference asterisk.\n */\n\n\nfunction removeRefereneAsterisk(text) {\n  return text.replace(/\\*+$/, '');\n}\n/**\n * Removes indicators of an empty cell.\n * @example\n *  removeEmptyCellIndicators('n/a'); //\n *  removeEmptyCellIndicators('-'); //\n *  removeEmptyCellIndicators('Cell-content'); //Cell-content\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} An empty string or the original text.\n */\n\n\nfunction removeEmptyCellIndicators(text) {\n  // Remove n/a\n  text = text.replace(/^n[./]a[.]?$/i, ''); // Remove -\n\n  return text === '-' ? '' : text;\n}\n/**\n * Group of filters to extract text from a cell.\n * @param {HTMLElement} cell The node to extract sortable text from.\n * @access private\n * @returns {String} The node content to sort on.\n */\n\n\nfunction extractNodeContent(cell) {\n  var steps = [extractAltFromImages, extractText, removeRefereneAsterisk, removeEmptyCellIndicators];\n  var text = cell;\n  steps.forEach(step => {\n    text = step(text);\n  });\n  return typeof text === 'string' ? text : '';\n}\n/**\n * Group of filters to extract a number for sorting.\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number|String} A number if one could a extracted, string otherwise.\n */\n\n\nfunction extractNumber(text) {\n  var steps = [removeDigitGroupSeparators, expandAbbreviations, extractDigitsIfFound, extractNumberFromRange];\n  steps.forEach(step => {\n    text = step(text);\n  });\n  return text;\n}\n/**\n * Methods to format table cells for sorting.\n * @access public\n */\n\n\nclass CellFormatter {\n  constructor() {\n    // This object is used to keep the running order of filter methods\n    this.filters = {\n      text: [extractNodeContent],\n      number: [extractNodeContent, extractNumber],\n      percent: [extractNodeContent, extractNumber],\n      currency: [extractNodeContent, extractNumber],\n      numeric: [extractNodeContent, extractNumber],\n      date: [extractNodeContent, ftDateTimeToNumber]\n    };\n  }\n  /**\n   * The `formatFunction` take the table cell HTMLElement,\n   * and converts it to a String or Number of sorting.\n   *\n   * @callback formatFunction\n   * @param {HTMLElement} cell\n   * @return {String|Object}\n   */\n\n  /**\n   * @param {String} type The data type of the cell to apply the filter function to.\n   * @param {formatFunction} formatFunction The function to take the cell and return a sortable value (string/number).\n   * @example\n   *  mySortFormatter.setFormatter('emoji-time', (cell) => {\n   *  \tconst text = cell.textContent.trim();\n   *  \tif (text === '🌑') {\n   *  \t\treturn 1;\n   *  \t}\n   *  \tif (text === '🌤️️') {\n   *  \t\treturn 2;\n   *  \t}\n   *  \treturn 0;\n   *  });\n   * @access public\n   */\n\n\n  setFormatter(type, formatFunction) {\n    this.filters[type] = [formatFunction];\n  }\n  /**\n   * @param {HTMLElement} cell\n   * @param {String} type The data type of the cell, e.g. date, number, currency. Custom types are supported.\n   * @see {@link setFormatter} to support add support for a custom type.\n   * @access public\n   * @return {String|Number} A representation of cell which can be used for sorting.\n   */\n\n\n  formatCell(_ref) {\n    var {\n      cell,\n      type = 'text'\n    } = _ref;\n    type = type || 'text';\n    var cellClone = cell.cloneNode({\n      deep: true\n    });\n    var sortValue = cell.getAttribute('data-o-table-sort-value');\n\n    if (sortValue === null) {\n      if (this.filters[type]) {\n        sortValue = cellClone;\n        this.filters[type].forEach(fn => {\n          sortValue = fn(sortValue);\n        });\n      }\n\n      cell.setAttribute('data-o-table-sort-value', sortValue);\n    }\n\n    var sortValueIsNumber = sortValue !== '' && !isNaN(sortValue);\n    return sortValueIsNumber ? parseFloat(sortValue) : sortValue;\n  }\n\n}\n\nexport default CellFormatter;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Sort/TableSorter.js",
      "contents": "import CellFormatter from \"./CellFormatter\";\n/**\n * Construct Intl.Collator if supported.\n *\n * @access private\n * @returns {Intl.Collator | Undefined}\n */\n\nfunction getIntlCollator() {\n  if (typeof Intl !== 'undefined' && {}.hasOwnProperty.call(Intl, 'Collator')) {\n    return new Intl.Collator();\n  }\n}\n/**\n * An ascending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\n\n\nfunction ascendingSort(a, b, intlCollator) {\n  if ((typeof a === 'string' || a instanceof String) && (typeof b === 'string' || b instanceof String)) {\n    return intlCollator ? intlCollator.compare(a, b) : a.localeCompare(b);\n  } else if (!isNaN(b) && isNaN(a) || a < b) {\n    return -1;\n  } else if (!isNaN(a) && isNaN(b) || b < a) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n/**\n * A descending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\n\n\nfunction descendingSort() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return 0 - ascendingSort.apply(this, args);\n}\n/**\n * Provides methods to sort table instances.\n */\n\n\nclass TableSorter {\n  constructor() {\n    this._cellFormatter = new CellFormatter();\n  }\n  /**\n   * Sort the given table.\n   *\n   * @access public\n   * @param {BaseTable} table - The table instance to sort.\n   * @param {Number} columnIndex - The index of the table column to sort.\n   * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n   * @returns {undefined}\n   */\n\n\n  sortRowsByColumn(table, columnIndex, sortOrder) {\n    var tableHeaderElement = table.getTableHeader(columnIndex);\n\n    if (['ascending', 'descending'].indexOf(sortOrder) === -1) {\n      throw new Error(\"Sort order \\\"\".concat(sortOrder, \"\\\" is not supported. Must be \\\"ascending\\\" or \\\"descending\\\".\"));\n    } // Add class for immediate visual feedback (only update aria when table has sorted successfully).\n\n\n    window.requestAnimationFrame(() => {\n      tableHeaderElement.classList.add(\"o-table-sorting-\".concat(sortOrder));\n    });\n    var intlCollator = getIntlCollator();\n    var cellFormatter = this._cellFormatter;\n    var type = tableHeaderElement.getAttribute('data-o-table-data-type') || undefined;\n    table.tableRows.sort((a, b) => {\n      var aCol = a.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n      var bCol = b.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n      aCol = cellFormatter.formatCell({\n        cell: aCol,\n        type\n      });\n      bCol = cellFormatter.formatCell({\n        cell: bCol,\n        type\n      });\n\n      if (sortOrder === 'ascending') {\n        return ascendingSort(aCol, bCol, intlCollator);\n      } else {\n        return descendingSort(aCol, bCol, intlCollator);\n      }\n    });\n    window.requestAnimationFrame(() => {\n      table.tableRows.forEach(row => {\n        table.tbody.appendChild(row);\n      });\n      table.tableHeaders.forEach(header => {\n        var headerSort = header === tableHeaderElement ? sortOrder : 'none';\n        header.setAttribute('aria-sort', headerSort);\n        header.classList.remove(\"o-table-sorting-ascending\");\n        header.classList.remove(\"o-table-sorting-descending\");\n      });\n      table.sorted({\n        columnIndex,\n        sortOrder\n      });\n    });\n  }\n  /**\n   * Set a custom cell formatter for a given data type.\n   *\n   * @param {String} type - The data type to apply the filter function to.\n   * @param {formatFunction} formatFunction - Callback to format a table cell to a sort value.\n   * @see {@link CellFormatter~setFormatter} for `formatFunction` details.\n   * @access public\n   */\n\n\n  setCellFormatterForType(type, formatFunction) {\n    this._cellFormatter.setFormatter(type, formatFunction);\n  }\n\n}\n\nexport default TableSorter;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/BaseTable.js",
      "contents": "import Delegate from \"dom-delegate\";\n\nclass BaseTable {\n  /**\n   * The shared functionality of all `o-table` variants.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {BaseTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this._listeners = [];\n    this._sorter = sorter;\n    this.rootEl = rootEl;\n    this._opts = Object.assign({\n      sortable: this.rootEl.getAttribute('data-o-table-sortable') !== 'false'\n    }, opts);\n    this.thead = this.rootEl.querySelector('thead');\n    this.tbody = this.rootEl.querySelector('tbody');\n    this.tableHeaders = this.thead ? Array.from(this.thead.querySelectorAll('th')) : [];\n    this.tableRows = this.tbody ? Array.from(this.tbody.getElementsByTagName('tr')) : [];\n    this.wrapper = this.rootEl.closest('.o-table-scroll-wrapper');\n    this.container = this.rootEl.closest('.o-table-container');\n    this.overlayWrapper = this.rootEl.closest('.o-table-overlay-wrapper');\n    this._rootElDomDelegate = new Delegate(this.rootEl);\n  }\n  /**\n   * Gets a table header for a given column index.\n   *\n   * @access public\n   * @param {Number} columnIndex - The index of the table column to get the header for.\n   * @throws When no header is not found.\n   * @returns {HTMLElement}\n   */\n\n\n  getTableHeader(columnIndex) {\n    var th = this.tableHeaders[columnIndex];\n\n    if (!th) {\n      throw new Error(\"Could not find header for column index \\\"\".concat(columnIndex, \"\\\".\"));\n    }\n\n    return th;\n  }\n  /**\n   * Sort the table.\n   *\n   * @access public\n   * @param {Number} columnIndex - The index of the table column to sort.\n   * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n   * @returns {undefined}\n   */\n\n\n  sortRowsByColumn(columnIndex, sortOrder) {\n    /**\n     * Fires an \"oTable.sorting\" event. The sorting event can be cancelled to\n     * provide a totally custom method of sorting the table.\n     * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     */\n    var defaultSort = this._dispatchEvent('sorting', {\n      sort: sortOrder,\n      columnIndex\n    }, {\n      cancelable: true\n    });\n\n    if (defaultSort) {\n      this._sorter.sortRowsByColumn(this, columnIndex, sortOrder);\n    }\n  }\n  /**\n   * Add sort buttons to the DOM within the table header.\n   * @returns {undefined}\n   */\n\n\n  addSortButtons() {\n    if (!this._opts.sortable) {\n      return;\n    }\n\n    this.rootEl.classList.add('o-table--sortable');\n    this.tableHeaders.forEach(function (th) {\n      // Don't add sort buttons to unsortable columns.\n      if (th.hasAttribute('data-o-table-heading-disable-sort')) {\n        return;\n      } // Move heading text into button.\n\n\n      var sortButton = document.createElement('button');\n      var heading = th.textContent;\n      sortButton.textContent = heading; // In VoiceOver, button `aria-label` is repeated when moving from one column of tds to the next.\n      // Using `title` avoids this, but risks not being announced by other screen readers.\n\n      sortButton.classList.add('o-table__sort');\n      sortButton.setAttribute('title', \"sort table by \".concat(heading));\n      th.innerHTML = '';\n      th.appendChild(sortButton); // Add click event to buttons.\n\n      var listener = this._sortButtonHandler.bind(this);\n\n      this._rootElDomDelegate.on('click', '.o-table__sort', listener);\n    }.bind(this));\n  }\n  /**\n   * Indicate that the table has been sorted after intercepting the sorting event.\n   *\n   * @access public\n   * @param {Object} sortDetails - Details of the current sort state.\n   * @param {Number|Null} sortDetails.columnIndex - The index of the currently sorted column.\n   * @param {String|Null} sortDetails.sortOrder - The type of sort, \"ascending\" or \"descending\"\n   */\n\n\n  sorted(_ref) {\n    var {\n      columnIndex,\n      sortOrder\n    } = _ref;\n\n    if (isNaN(columnIndex)) {\n      throw new Error(\"Expected a numerical column index but received \\\"\".concat(columnIndex, \"\\\".\"));\n    }\n\n    if (!sortOrder) {\n      throw new Error(\"Expected a sort order e.g. \\\"ascending\\\" or \\\"descending\\\".\");\n    }\n\n    this._dispatchEvent('sorted', {\n      sortOrder,\n      columnIndex\n    });\n  }\n  /**\n   * Gets the instance ready for deletion.\n   * Removes event listeners that were added during instatiation of the component.\n   * @access public\n   * @returns {undefined}\n   */\n\n\n  destroy() {\n    this._rootElDomDelegate.destroy();\n\n    this._listeners.forEach((_ref2) => {\n      var {\n        type,\n        listener,\n        element\n      } = _ref2;\n      element.removeEventListener(type, listener);\n    });\n  }\n  /**\n   * Indicate that the table has been constructed successfully.\n   * @returns {undefined}\n   */\n\n\n  _ready() {\n    this._dispatchEvent('ready');\n  }\n  /**\n   * Handles a sort button click event. Toggles column sort.\n   * @param {MouseEvent} event - The click event.\n   * @returns {undefined}\n   */\n\n\n  _sortButtonHandler(event) {\n    var sortButton = event.target;\n    var th = sortButton.closest('th');\n    var columnIndex = this.tableHeaders.indexOf(th);\n\n    if (th && !isNaN(columnIndex)) {\n      var currentSort = th.getAttribute('aria-sort');\n      var sortOrder = [null, 'none', 'descending'].indexOf(currentSort) !== -1 ? 'ascending' : 'descending';\n      this.sortRowsByColumn(columnIndex, sortOrder);\n    }\n  }\n  /**\n   * Helper function to dispatch namespaced events.\n   *\n   * @param {String} event - The event name within `oTable` e.g. \"sorted\".\n   * @param {Object} data={} - Event data. `insatnce` is added automatically.\n   * @param {Object} opts={} - [Event options]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event/Event#Values} (o-table events bubble by default).\n   */\n\n\n  _dispatchEvent(event) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    Object.assign(data, {\n      instance: this\n    });\n    return this.rootEl.dispatchEvent(new CustomEvent(\"oTable.\".concat(event), Object.assign({\n      detail: data,\n      bubbles: true\n    }, opts)));\n  }\n\n}\n\nexport default BaseTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/BasicTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass BasicTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component without responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {BasicTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n\n}\n\nexport default BasicTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/FlatTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass FlatTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"flat\" responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {FlatTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts); // Flat table can only work given headers.\n\n    if (this.tableHeaders.length > 0) {\n      this._duplicateHeaders(rootEl);\n    } else {\n      console.warn('Could not create a \"flat\" table as no headers were found. Ensure table headers are placed within \"<thead>\". Removing class \"o-table--responsive-flat\".', rootEl);\n      rootEl.classList.remove('o-table--responsive-flat');\n    }\n\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Duplicate table headers for each tabel row.\n   */\n\n\n  _duplicateHeaders() {\n    this.tableRows.forEach(row => {\n      var data = Array.from(row.getElementsByTagName('td'));\n      data.forEach((td, dataIndex) => {\n        var clonedHeader = this.tableHeaders[dataIndex].cloneNode(true);\n        clonedHeader.setAttribute('scope', 'row');\n        clonedHeader.setAttribute('role', 'rowheader');\n        clonedHeader.classList.add('o-table__duplicate-heading');\n        td.parentNode.insertBefore(clonedHeader, td);\n      });\n    });\n  }\n\n}\n\nexport default FlatTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/OverflowTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass OverflowTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"overflow\" responsive behaviour.\n   *\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @param {Undefined | Bool} opts.expanded\n   * @param {Number} opts.minimumRowCount [20]\n   * @access public\n   * @returns {OverflowTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n    this._opts = Object.assign({\n      expanded: this.rootEl.hasAttribute('data-o-table-expanded') ? this.rootEl.getAttribute('data-o-table-expanded') !== 'false' : null,\n      minimumRowCount: this.rootEl.getAttribute('data-o-table-minimum-row-count')\n    }, this._opts);\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n    window.requestAnimationFrame(this._setupScroll.bind(this));\n    window.requestAnimationFrame(this._setupExpander.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Check if the table is expanded (true) or collapsed (false).\n   * @access public\n   * @returns {Bool}\n   */\n\n\n  isExpanded() {\n    var value = this.rootEl.getAttribute('data-o-table-expanded');\n    return Boolean(value !== 'false');\n  }\n  /**\n   * Check if the table supports the expand/contract feature.\n   * @access public\n   * @returns {Bool}\n   */\n\n\n  canExpand() {\n    return typeof this._opts.expanded === 'boolean' && this._minimumRowCount < this.tableRows.length;\n  }\n  /**\n   * Hides table rows if the table can be expanded.\n   * @access public\n   * @returns undefined\n   */\n\n\n  contractTable() {\n    if (!this.canExpand()) {\n      return;\n    } // Expander not setup until next frame. Update options.\n\n\n    if (!this.controls) {\n      this._opts.expanded = false;\n      return;\n    }\n\n    var expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n    var rowsToHide = this._rowsToHide;\n    var originalButtonTopOffset = this.controls.expanderButton.getBoundingClientRect().top; // Calculate contracted table height.\n    // Extra height to tease half of the first hidden row.\n\n    var tableHeight = this.rootEl.getBoundingClientRect().height;\n    var rowsToHideHeight = rowsToHide.reduce((accumulatedHeight, row) => {\n      return accumulatedHeight + row.getBoundingClientRect().height;\n    }, 0);\n    var extraHeight = rowsToHide[0] ? rowsToHide[0].getBoundingClientRect().height / 2 : 0;\n    var contractedHeight = tableHeight + extraHeight - rowsToHideHeight; // Contract table.\n\n    window.requestAnimationFrame(() => {\n      this._updateRowVisibility(false);\n\n      this.rootEl.setAttribute('aria-expanded', false);\n      this.rootEl.setAttribute('data-o-table-expanded', false);\n      this.wrapper.style.height = \"\".concat(contractedHeight, \"px\");\n      this.container.classList.remove('o-table-container--expanded');\n      this.container.classList.add('o-table-container--contracted');\n\n      if (expanderButton) {\n        expanderButton.textContent = 'Show more'; // Keep more/fewer button in viewport when contracting table.\n        // Using `window.scroll(x-coord, y-coord)` as IE11 did not scroll\n        // correctly with `window.scroll(options)`.\n\n        var top = window.pageYOffset + this.controls.expanderButton.getBoundingClientRect().top - originalButtonTopOffset;\n        window.scroll(null, top);\n      }\n\n      this._updateControls();\n    });\n  }\n  /**\n   * Expands the table, revealing hidden table rows, if it can be expanded and has been contracted.\n   * @access public\n   * @returns undefined\n   */\n\n\n  expandTable() {\n    if (!this.canExpand()) {\n      return;\n    } // Expander not setup until next frame. Update options.\n\n\n    if (!this.controls) {\n      this._opts.expanded = true;\n      return;\n    }\n\n    var expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n    window.requestAnimationFrame(() => {\n      this.container.classList.remove('o-table-container--contracted');\n      this.container.classList.add('o-table-container--expanded');\n\n      if (expanderButton) {\n        expanderButton.textContent = 'Show fewer';\n      }\n\n      this.wrapper.style.height = '';\n\n      this._updateRowVisibility(true);\n\n      this.rootEl.setAttribute('aria-expanded', true);\n      this.rootEl.setAttribute('data-o-table-expanded', true);\n\n      this._updateControls();\n    });\n  }\n  /**\n   * Performs post-sort actions such as updating row visibility and firing a `oTable.sorted` event.\n   * Required as the sort event can be intercepted for a custom implementation.\n   *\n   * @access public\n   * @param {Object} sortDetail An object containing information about the sort.\n   * @param {Number} sortDetail.columnIndex The index of the column which has been sorted.\n   * @param {String} sortDetail.sortAscending The order of the sort i.e. ascending or descending.\n   * @returns undefined\n   */\n\n\n  sorted(_ref) {\n    var {\n      columnIndex,\n      sortOrder\n    } = _ref;\n    window.requestAnimationFrame(() => {\n      this._updateRowVisibility(this.isExpanded());\n\n      super.sorted({\n        columnIndex,\n        sortOrder\n      });\n    });\n  }\n  /**\n   * Update row aria attributes to show/hide them.\n   * E.g. After performing a sort, rows which where hidden in the colapsed table may have become visible.\n   * @param {boolean} expanded - Update row visibility for an expanded or contracted table.\n   * @returns {undefined}\n   */\n\n\n  _updateRowVisibility(expanded) {\n    var visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n    var hiddenRows = expanded ? [] : this.tableRows.slice(visibleRowCount, this.tableRows.length);\n    this.tableRows.forEach(row => {\n      row.setAttribute('aria-hidden', hiddenRows && hiddenRows.indexOf(row) !== -1 ? 'true' : 'false');\n    });\n  }\n  /**\n   * Add controls such as the back, forward, \"show more\" buttons to DOM,\n   * plus wrappers needed for them to function.\n   * @returns {undefined}\n   */\n\n\n  _addControlsToDom() {\n    if (this.overlayWrapper && !this.controls) {\n      var supportsArrows = OverflowTable._supportsArrows();\n\n      this.overlayWrapper.insertAdjacentHTML('beforeend', \"\\n\\t\\t\\t\\t\".concat(this.wrapper ? \"\\n\\t\\t\\t\\t\\t<div class=\\\"o-table-overflow-fade-overlay\\\" style=\\\"display: none;\\\"></div>\\n\\t\\t\\t\\t\" : '', \"\\n\\t\\t\\t\\t<div class=\\\"o-table-overflow-control-overlay\\\" style=\\\"display: none;\\\">\\n\\t\\t\\t\\t\\t\").concat(this.wrapper && supportsArrows ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--back o-table-control--hide\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button aria-label=\\\"visually scroll table back\\\" disabled=\\\"true\\\" class=\\\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-left\\\"></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\n\\t\\t\\t\\t\\t\").concat(this.wrapper && supportsArrows ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--forward o-table-control--hide\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button aria-label=\\\"visually scroll table forward\\\" disabled=\\\"true\\\" class=\\\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-right\\\"></button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\n\\t\\t\\t\\t\\t\").concat(this.canExpand() ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"o-table-control o-table-control--expander\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"o-buttons o-buttons--primary o-buttons--big\\\">Show fewer</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\" : '', \"\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\"));\n      this.controls = {\n        controlsOverlay: this.overlayWrapper.querySelector('.o-table-overflow-control-overlay'),\n        fadeOverlay: this.overlayWrapper.querySelector('.o-table-overflow-fade-overlay'),\n        expanderButton: this.overlayWrapper.querySelector('.o-table-control--expander'),\n        forwardButton: this.overlayWrapper.querySelector('.o-table-control--forward'),\n        backButton: this.overlayWrapper.querySelector('.o-table-control--back')\n      };\n    }\n  }\n  /**\n   * Add functionality to improve the experience when scrolling a table,\n   * such as showing forward/back buttons to indicate that scroll is possible.\n   * @returns {undefined}\n   */\n\n\n  _setupScroll() {\n    // Does not warn of a missing wrapper: assumes no overflow is desired.\n    if (this.container && this.overlayWrapper && !this.wrapper) {\n      console.warn('Controls to scroll table left/right could not be added to \"o-table\" as it is missing markup. ' + 'Please add the container and wrapper elements according to the documentation https://registry.origami.ft.com/components/o-table.', {\n        table: this.rootEl\n      });\n    } // Can not add controls without a container or wrapper.\n\n\n    if (!this.container || !this.overlayWrapper || !this.wrapper) {\n      return;\n    } // Add table controls (e.g. left/right button).\n\n\n    if (!this.controls) {\n      this._addControlsToDom();\n    } // Add forward button behaviour.\n\n\n    if (this.controls.forwardButton) {\n      var scrollForward = function () {\n        this.wrapper.scrollBy({\n          left: document.body.clientWidth / 2,\n          behavior: 'smooth'\n        });\n      }.bind(this);\n\n      this.controls.forwardButton.addEventListener('click', scrollForward);\n\n      this._listeners.push({\n        element: this.controls.forwardButton,\n        scrollForward,\n        type: 'click'\n      });\n    } // Add back button behaviour.\n\n\n    if (this.controls.backButton) {\n      var scrollBackward = function () {\n        this.wrapper.scrollBy({\n          left: -(document.body.clientWidth / 2),\n          behavior: 'smooth'\n        });\n      }.bind(this);\n\n      this.controls.backButton.addEventListener('click', scrollBackward);\n\n      this._listeners.push({\n        element: this.controls.backButton,\n        scrollBackward,\n        type: 'click'\n      });\n    } // Set scroll position and update controls.\n\n\n    var updateScroll = function () {\n      this._setScrollPosition();\n\n      this._updateControls();\n    }.bind(this);\n\n    updateScroll(); // Observe controls scrolling beyond table and update.\n\n    if (this.controls.controlsOverlay && window.IntersectionObserver) {\n      // Fade forward/back buttons at start and end of table.\n      var arrowFadeObserverConfig = {\n        root: this.controls.controlsOverlay,\n        threshold: 1.0,\n        rootMargin: \"-50px 0px \".concat(this.controls.expanderButton ? '0px' : '-10px', \" 0px\")\n      };\n      var arrowFadeObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          entry.target.setAttribute('data-o-table-intersection', entry.intersectionRatio !== 1);\n          updateScroll();\n        });\n      }, arrowFadeObserverConfig);\n\n      if (this.controls.backButton) {\n        arrowFadeObserver.observe(this.controls.backButton);\n      }\n\n      if (this.controls.forwardButton) {\n        arrowFadeObserver.observe(this.controls.forwardButton);\n      }\n    } // Add other event listeners to update controls.\n\n\n    this.wrapper.addEventListener('scroll', updateScroll);\n    window.addEventListener('resize', updateScroll);\n    window.addEventListener('load', updateScroll);\n\n    this._listeners.push({\n      element: this.wrapper,\n      updateScroll,\n      type: 'scroll'\n    });\n\n    this._listeners.push({\n      element: window,\n      updateScroll,\n      type: 'resize'\n    });\n\n    this._listeners.push({\n      element: window,\n      updateScroll,\n      type: 'load'\n    });\n  }\n  /**\n   * Add hide/show functionality for long tables.\n   * @returns {undefined}\n   */\n\n\n  _setupExpander() {\n    if (!this.canExpand()) {\n      return;\n    }\n\n    if (!this.container || !this.overlayWrapper || !this.wrapper) {\n      throw new Error('Controls to expand/contract the table could not be added to \"o-table\" as it is missing markup.' + 'Please add the container and wrapper element according to the documentation https://registry.origami.ft.com/components/o-table.');\n    } // Add table controls (e.g. \"more\" button).\n\n\n    if (!this.controls) {\n      this._addControlsToDom();\n    }\n\n    if (this.controls.expanderButton) {\n      var toggleExpanded = function () {\n        if (this.isExpanded()) {\n          this.contractTable();\n        } else {\n          this.expandTable();\n        }\n      }.bind(this);\n\n      this.controls.expanderButton.addEventListener('click', toggleExpanded);\n\n      this._listeners.push({\n        element: this.controls.expanderButton,\n        toggleExpanded,\n        type: 'click'\n      });\n    }\n\n    if (this._opts.expanded) {\n      this.expandTable();\n    } else {\n      this.contractTable();\n    }\n  }\n  /**\n   * Set table scroll position in wrapper.\n   * @returns {undefined}\n   */\n\n\n  _setScrollPosition() {\n    this._fromEnd = this.wrapper.scrollWidth - this.wrapper.clientWidth - this.wrapper.scrollLeft;\n    this._fromStart = this.wrapper.scrollLeft;\n  }\n  /**\n   * Update all controls and their overlays,\n   * e.g. forward/back arrow visibility, visibility of arrow dock, overlay fade.\n   * @returns {undefined}\n   */\n\n\n  _updateControls() {\n    if (!this._controlUpdateScheduled) {\n      this._controlUpdateScheduled = true;\n      setTimeout(function () {\n        // Toggle fade.\n        this.controls.fadeOverlay.classList.toggle('o-table-overflow-fade-overlay--scroll', this._canScrollTable);\n        this.controls.fadeOverlay.style.setProperty('--o-table-fade-from-end', \"\".concat(Math.min(this._fromEnd, 10), \"px\"));\n        this.controls.fadeOverlay.style.setProperty('--o-table-fade-from-start', \"\".concat(Math.min(this._fromStart, 10), \"px\")); // Toggle arrow dock.\n\n        this.controls.controlsOverlay.classList.toggle('o-table-overflow-control-overlay--arrow-dock', this._showArrowDock); // Update forward/back scroll controls.\n\n        if (OverflowTable._supportsArrows()) {\n          this._updateScrollControl(this.controls.forwardButton);\n\n          this._updateScrollControl(this.controls.backButton);\n        } // Make controls visible.\n\n\n        this.controls.controlsOverlay.style.display = '';\n        this.controls.fadeOverlay.style.display = '';\n        this._controlUpdateScheduled = false;\n      }.bind(this), 33);\n    }\n  }\n  /**\n   * Update the visibility of a scroll forward/back button.\n   * @param {HTMLElement} element - The button wrapper.\n   * @returns {undefined}\n   */\n\n\n  _updateScrollControl(element) {\n    // Make arrows sticky if table is tall and can be scrolled past.\n    element.classList.toggle('o-table-control--sticky', this._stickyArrows); // Place the arrows in the doc if they are not sticky.\n\n    var arrowsDocked = this._showArrowDock && !this._stickyArrows;\n    element.classList.toggle('o-table-control--dock', arrowsDocked); // Hide scroll buttons if the table fits within the viewport.\n\n    if (this._canScrollTable) {\n      element.style.display = '';\n    } else {\n      element.style.display = 'none';\n    } // Disable forward button if the table is scrolled to the end.\n\n\n    var scrolledToBoundary = this._fromEnd <= 0 && element === this.controls.forwardButton || this._fromStart <= 0 && element === this.controls.backButton;\n    var outsideTable = element.getAttribute('data-o-table-intersection') === 'true';\n\n    if (outsideTable) {\n      element.querySelector('button').setAttribute('disabled', true);\n      element.classList.add('o-table-control--hide');\n    }\n\n    if (!scrolledToBoundary && !outsideTable) {\n      element.querySelector('button').removeAttribute('disabled');\n      element.classList.remove('o-table-control--hide');\n    }\n\n    if (scrolledToBoundary && !outsideTable) {\n      element.querySelector('button').setAttribute('disabled', true);\n      var hideControl = !arrowsDocked && (!this._stickyArrows || this._stickyArrows && !this._canScrollPastTable);\n      element.classList.toggle('o-table-control--hide', hideControl);\n    }\n  }\n  /**\n   * The number of rows to display if the table is collapsed.\n   * @returns {Number}\n   */\n\n\n  get _minimumRowCount() {\n    var minimumRowCount = this._opts.minimumRowCount;\n    return isNaN(parseInt(minimumRowCount, 10)) ? 20 : parseInt(minimumRowCount, 10);\n  }\n  /**\n   * The number rows which will be hidden if the table is collapsed.\n   * @returns {Number}\n   */\n\n\n  get _rowsToHide() {\n    var visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n    return this.tableRows.slice(visibleRowCount, this.tableRows.length);\n  }\n  /**\n   * Check if the table can be scrolled.\n   * @returns {Boolean}\n   */\n\n\n  get _canScrollTable() {\n    return this._fromEnd > 0 || this._fromStart > 0;\n  }\n  /**\n   * Check if the table can fit within the viewport vertically.\n   * @returns {Boolean}\n   */\n\n\n  get _tableTallerThanViewport() {\n    return this.container.getBoundingClientRect().height > document.documentElement.clientHeight;\n  }\n  /**\n   * Check if the document is long enough to scroll beyond the table enough for sticky arrows to dock at the bottom.\n   * I.e. Scroll past the table by at least 50% of the viewport.\n   * @returns {Boolean}\n   */\n\n\n  get _canScrollPastTable() {\n    return this.container.getBoundingClientRect().bottom + document.documentElement.clientHeight / 2 < document.documentElement.getBoundingClientRect().bottom;\n  }\n  /**\n   * Check if the \"dock\" at the bottom of the table should be shown.\n   * After scrolling past the table, sticky arrows sit within the dock at the bottom of the table.\n   * @returns {Boolean}\n   */\n\n\n  get _showArrowDock() {\n    return OverflowTable._supportsArrows() && this._canScrollTable && this._canScrollPastTable && this.canExpand() && this._rowsToHide.length !== 0;\n  }\n  /**\n   * Check if left/right controls should be sticky.\n   * @returns {Boolean}\n   */\n\n\n  get _stickyArrows() {\n    return OverflowTable._supportsArrows() && this._tableTallerThanViewport;\n  }\n  /**\n   * Check if sticky buttons are supported.\n   * @returns {Boolean}\n   */\n\n\n  static _supportsArrows() {\n    return typeof CSS !== 'undefined' && (CSS.supports(\"position\", \"sticky\") || CSS.supports('position', '-webkit-sticky'));\n  }\n\n}\n\nexport default OverflowTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/Tables/ScrollTable.js",
      "contents": "import BaseTable from \"./BaseTable\";\n\nclass ScrollTable extends BaseTable {\n  /**\n   * Initialises an `o-table` component with \"scroll\" responsive behaviour.\n   *\n   * @access public\n   * @param {HTMLElement} rootEl - The `o-table` element.\n   * @param {TableSorter} sorter\n   * @param {Object} opts [{}]\n   * @param {Bool} opts.sortable [true]\n   * @returns {ScrollTable}\n   */\n  constructor(rootEl, sorter) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(rootEl, sorter, opts);\n\n    this._duplicateRowsWithAddedHeader();\n\n    window.requestAnimationFrame(this.addSortButtons.bind(this));\n\n    this._ready();\n\n    return this;\n  }\n  /**\n   * Duplicate the table headers into a one tbody row.\n   * @returns {undefined}\n   */\n\n\n  _duplicateRowsWithAddedHeader() {\n    this.tableHeaders.forEach((header, index) => {\n      var headerRow = document.createElement('tr');\n      headerRow.classList.add('o-table__duplicate-row'); // Clone column heading and turn into a row heading.\n\n      var clonedHeader = header.cloneNode(true);\n      clonedHeader.setAttribute('scope', 'row');\n      clonedHeader.setAttribute('role', 'rowheader');\n      headerRow.appendChild(clonedHeader); // Clone data for the column into the new row.\n\n      this.tableRows.forEach(row => {\n        var data = row.querySelectorAll('td')[index];\n        headerRow.appendChild(data.cloneNode(true));\n      });\n      this.tbody.appendChild(headerRow);\n    });\n  }\n\n}\n\nexport default ScrollTable;"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/js/oTable.js",
      "contents": "import FlatTable from \"./Tables/FlatTable\";\nimport ScrollTable from \"./Tables/ScrollTable\";\nimport OverflowTable from \"./Tables/OverflowTable\";\nimport BasicTable from \"./Tables/BasicTable\";\nimport TableSorter from \"./Sort/TableSorter\";\nvar sorter = new TableSorter();\n\nclass OTable {\n  /**\n   * Table options.\n   * @typedef {Object} OTable~opts - Table options.\n   * @property {Bool} sortable [true] - Disable the table's sort feature.\n   * @property {Undefined | Bool} expanded [Undefined] - Allow the \"OverflowTable\" to hide results behind a \"show more\" button. The table is expanded by default when \"true\", contracted when \"false\", or not expandable if not set.\n   * @property {Number} minimumRowCount [20] - When the `expanded` option is set, the number of rows to show when the table is not expanded.\n   */\n\n  /**\n   * Constructs an o-table component.\n   *\n   * @param {HTMLElement} - An o-table element.\n   * @param {...OTable~opts} opts - A table options object.\n   * @returns {FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance.\n   */\n  constructor(rootEl) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var tableType = rootEl.getAttribute('data-o-table-responsive');\n    var Table;\n\n    switch (tableType) {\n      case 'flat':\n        Table = FlatTable;\n        break;\n\n      case 'scroll':\n        Table = ScrollTable;\n        break;\n\n      case 'overflow':\n        Table = OverflowTable;\n        break;\n\n      default:\n        Table = BasicTable;\n        break;\n    }\n\n    return new Table(rootEl, sorter, opts);\n  }\n  /**\n   * Constructs all o-table components inside the element passed as the first parameter.\n   *\n   * @access public\n   * @param {(HTMLElement|string)} [el=document.body] - Element where to search for o-table components. You can pass an HTMLElement or a selector string.\n   * @param {...OTable~opts} opts - A table options object.\n   * @returns {Array<FlatTable | ScrollTable | OverflowTable | BasicTable> | FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance or array of table instances.\n   */\n\n\n  static init() {\n    var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document.body;\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!(el instanceof HTMLElement)) {\n      el = document.querySelector(el);\n    }\n\n    if (/\\bo-table\\b/.test(el.getAttribute('data-o-component'))) {\n      return new OTable(el, opts);\n    }\n\n    var tableEls = Array.from(el.querySelectorAll('[data-o-component~=\"o-table\"]'));\n    return tableEls.map(el => {\n      return new OTable(el, opts);\n    });\n  }\n  /**\n   * The custom formatter accepts a table cell and returns a sort value for that cell.\n   * This could be used to define a custom sort order for an unsupported format, such as emoji's, or a new date format.\n   *\n   * @callback formatFunction\n   * @param {HTMLElement} cell\n   */\n\n  /**\n   * Set a custom sort formatter for a given data type.\n   *\n   * @example <caption>Mapping table cells which contain emojis to a numerical sort value.</caption>\n   *\tconst OTable = require('o-table');\n   *\t// Set a filter for custom data type \"emoji-time\".\n   *\t// The return value may be a string or number.\n   *\tOTable.setSortFormatterForType('emoji-time', (cell) => {\n   *\t\tconst text = cell.textContent.trim();\n   *\t\tif (text === '🌑') {\n   *\t\t\treturn 1;\n   *\t\t}\n   *\t\tif (text === '🌤️️') {\n   *\t\t\treturn 2;\n   *\t\t}\n   *\t\treturn 0;\n   *\t});\n   *\tOTable.init();\n   *\n   * @param {String} type - The data type to apply the filter function to.\n   * @param {formatFunction} formatFunction\n   * @access public\n   */\n\n\n  static setSortFormatterForType(type, formatFunction) {\n    sorter.setCellFormatterForType(type, formatFunction);\n  }\n\n}\n\nmodule.exports = OTable;"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_base.scss",
      "contents": "/// Base tables styles and simple utility classes.\n/// @access private\n@mixin _oTableBase() {\n\t.o-table {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\n\t\tthead {\n\t\t\tborder-bottom: 2px solid _oTableGet('table-data-color');\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 10px;\n\t\t\ttext-align: left;\n\t\t\tvertical-align: top;\n\t\t\tcolor: _oTableGet('table-data-color');\n\t\t}\n\n\t\tth {\n\t\t\t@include oTypographySansBold(1);\n\t\t\tbackground-color: _oTableGet('header-background');\n\t\t\t&:not([scope=row]) {\n\t\t\t\tvertical-align: bottom;\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(1);\n\t\t\tscroll-snap-align: none center;\n\t\t\t&:empty:before {\n\t\t\t\t@include oIconsGetIcon('minus', $container-width: 15,  $container-height: 15, $iconset-version: 1);\n\t\t\t\tcontent: '';\n\t\t\t\tvertical-align: middle;\n\t\t\t}\n\t\t}\n\n\t\t.o-table__caption {\n\t\t\ttext-align: left;\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0 10px;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.o-table__cell--numeric {\n\t\t\ttext-align: right;\n\t\t\tfont-feature-settings: \"tnum\" 1;\n\t\t}\n\n\t\t.o-table__cell--content-secondary {\n\t\t\t@include oTypographySize(0);\n\t\t\tfont-weight: normal;\n\t\t}\n\n\t\t.o-table__cell--vertically-center {\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-table .o-table-footnote,\n\t.o-table-footnote {\n\t\t@include oTypographyCaption();\n\t}\n\n\t.o-table-container > .o-table-footnote {\n\t\tmargin-left: 10px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_borders.scss",
      "contents": "/// Horizontal borders\n/// @access private\n@mixin _oTableHorizontalBorders {\n\t.o-table--horizontal-borders {\n\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\n\t\tth:not([scope=row]) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n/// Vertical borders\n/// @access private\n@mixin _oTableVerticalBorders {\n\t.o-table--vertical-borders {\n\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\n\t\t// sass-lint:disable no-qualifying-elements\n\t\tth[scope=row] {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t\t// sass-lint:enable no-qualifying-elements\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oTableGet($variables, $from: null) {\n    @return oBrandGet($component: 'o-table', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oTableSupports($variant) {\n    @return oBrandSupportsVariant($component: 'o-table', $variant: $variant);\n}\n\n@if oBrandGetCurrentBrand() == 'master' {\n\t@include oBrandDefine('o-table', 'master', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('paper'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('wheat'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsMix('wheat', 'paper', 40)\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'internal' {\n\t@include oBrandDefine('o-table', 'internal', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('white'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('slate-white-5'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsGetPaletteColor('slate-white-5')\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact',\n\t\t\t'row-headings'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'whitelabel' {\n\t@include oBrandDefine('o-table', 'whitelabel', (\n\t\t'variables': (),\n\t\t'supports-variants': (\n\t\t\t'compact'\n\t\t)\n\t));\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_compact.scss",
      "contents": "/// Make a table 'compact'\n/// @access private\n@mixin _oTableCompact {\n\t.o-table--compact {\n\t\tth {\n\t\t\t@include oTypographySansBold(0);\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(0);\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 4px 10px;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_container.scss",
      "contents": "/// Styles for a table container, the parent of all other table elements.\n/// Enables child overlays such as to indicate the ability to scroll a table.\n/// Includes standard table margin.\n/// @access private\n@mixin _oTableContainer {\n\t.o-table-container {\n\t\tposition: relative;\n\t}\n\t// Leave space for controls such as \"show more\" when expanded/contracted.\n\t.o-table-container--expanded,\n\t.o-table-container--contracted {\n\t\tpadding-bottom: 40px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_lines.scss",
      "contents": "/// Add horizontal lines to a table\n/// @access private\n@mixin _oTableHorizontalLines {\n\t.o-table--horizontal-lines {\n\t\ttr:not(:first-child) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n\n/// Add verticle lines to a table\n/// @access private\n@mixin _oTableVerticalLines {\n\t.o-table--vertical-lines {\n\t\tth:not(:last-child):not(:first-child),\n\t\ttd:not(:last-child):not(:first-child) {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_mixins.scss",
      "contents": "/// Outputs all features and styles available.\n/// @param $opts {list} [('responsive-overflow', 'responsive-flat', 'responsive-scroll', 'lines', 'compact', 'stripes', 'row-headings')] - Table features to output. Defaults to all table features.\n/// @access public\n@mixin oTable($opts: (\n\t'responsive-overflow',\n\t'responsive-flat',\n\t'responsive-scroll',\n\t'lines',\n\t'compact',\n\t'stripes',\n\t'row-headings',\n)) {\n\t$overflow-enabled: index($opts, 'responsive-overflow');\n\t$flat-enabled: index($opts, 'responsive-flat');\n\t$scroll-enabled: index($opts, 'responsive-scroll');\n\t$lines-enabled: index($opts, 'lines');\n\t$compact-enabled: index($opts, 'compact');\n\t$stripes-enabled: index($opts, 'stripes');\n\t$row-headings-enabled: index($opts, 'row-headings');\n\n\t// Basic styles and simple utilities.\n\t@include _oTableBase;\n\n\t// Sortable columns.\n\t@include _oTableSort;\n\n\t// Respnsive solutions.\n\t@if $flat-enabled or $scroll-enabled or $overflow-enabled {\n\t\t@include _oTableWrapper;\n\t\t@include _oTableContainer;\n\t}\n\t@if $overflow-enabled {\n\t\t@include _oTableResponsiveOverflow;\n\t}\n\t@if $flat-enabled {\n\t\t@include _oTableResponsiveFlat;\n\t}\n\t@if $scroll-enabled {\n\t\t@include _oTableResponsiveScroll;\n\t}\n\n\t// Lines.\n\t@if $lines-enabled {\n\t\t@include _oTableHorizontalLines;\n\t\t@include _oTableVerticalLines;\n\t\t@include _oTableHorizontalBorders;\n\t\t@include _oTableVerticalBorders;\n\t}\n\n\t// Compact.\n\t@if $compact-enabled and _oTableSupports('compact') {\n\t\t@include _oTableCompact;\n\t}\n\n\t// Stripes.\n\t@if $stripes-enabled and _oTableSupports('stripes') {\n\t\t@include _oTableRowStripes;\n\t}\n\n\t// Row headings.\n\t@if $row-headings-enabled and _oTableSupports('row-headings') {\n\t\t@include _oTableRowHeadings;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-flat.scss",
      "contents": "/// Styles for a 'FlatTable'\n/// @access private\n@mixin _oTableResponsiveFlat {\n\t.o-table.o-table--responsive-flat {\n\t\twidth: 100%;\n\n\t\t.o-table__duplicate-heading {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\tdisplay: block;\n\n\t\t\ttd,\n\t\t\tth,\n\t\t\ttr {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\ttr {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-flow: row wrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\ttd {\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\tthead th {\n\t\t\t\tdisplay: none;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\tthead tr {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\ttbody tr:not(:first-child) {\n\t\t\t\tborder-top: 1px solid _oTableGet('table-data-color');\n\t\t\t}\n\n\t\t\t&.o-table--row-stripes tbody tr:nth-child(even) th, // Remove stripes when flat.\n\t\t\ttbody tr:nth-child(even) {\n\t\t\t\tbackground-color: _oTableGet('table-item-alternate-background', 'flat');\n\t\t\t}\n\n\t\t\t&.o-table--horizontal-lines th:not(:last-of-type),\n\t\t\t&.o-table--horizontal-lines td:not(:last-of-type), {\n\t\t\t\t// When flat, only show row border if a colour is defined.\n\t\t\t\t// Else the browser will use a black border.\n\t\t\t\t@if _oTableGet('table-border-color') {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__duplicate-heading {\n\t\t\t\tdisplay: block;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-overflow.scss",
      "contents": "/// Styles for an 'OverflowTable'\n/// @require _oTableContainer\n/// @require _oTableWrapper\n/// @access private\n@mixin _oTableResponsiveOverflow {\n\t@include _oTableOverflowControlsOverlay;\n\t@include _oTableOverflowFadeOverlay;\n}\n\n/// Styles for controls which overlay the table. Such as scroll forward/back buttons,\n/// and a \"show more\" button to expand/contract a table with many items.\n@mixin _oTableOverflowControlsOverlay {\n\t.o-table-overflow-control-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\n\n\t\t.o-table-control {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: _oTableGet('table-background');\n\t\t\tpointer-events: all;\n\t\t\ttransition: 1s opacity ease-in-out;\n\t\t\tbutton {\n\t\t\t\t@include oButtons($size: 'big', $theme: 'primary');\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--expander {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\ttext-align: center;\n\t\t\tbutton {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward,\n\t\t.o-table-control--back {\n\t\t\t@supports (pointer-events: none)  {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: calc(50% - 20px);\n\t\t\t\ttransition: opacity 0.3s $o-visual-effects-transition-fade;\n\t\t\t}\n\t\t\tz-index: 1;\n\t\t}\n\n\t\t.o-table-control--back {\n\t\t\tleft: 0; //absolute\n\t\t\tfloat: left; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-left',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward {\n\t\t\tright: 0; //absolute\n\t\t\tfloat: right; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-right',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--hide {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.o-table-control--sticky {\n\t\t\tposition: sticky;\n\t\t}\n\t}\n\n\t.o-table-overflow-control-overlay--arrow-dock {\n\t\t// Create area left/right for arrows to scroll into (\"dock\").\n\t\t&:after,\n\t\t&:before {\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\tbottom: 0;\n\t\t\theight: 40px;\n\t\t\tpointer-events: none;\n\t\t\tborder-color: oButtonsGetColor('default', 'background', $theme: 'primary');\n\t\t\tborder-style: solid;\n\t\t\twidth: 1px;\n\t\t}\n\n\t\t&:before {\n\t\t\tleft: 0;\n\t\t\tborder-width: 0 40px 0 9px;\n\t\t}\n\n\t\t&:after {\n\t\t\tright: 0;\n\t\t\tborder-width: 0 9px 0 40px;\n\t\t}\n\n\t\t// Make more control leave space for arrows to dock left/right.\n\t\t.o-table-control--expander {\n\t\t\tleft: 51px;\n\t\t\tright: 51px;\n\t\t}\n\n\t\t// A modifier class which forces arrows to \"dock\" at the bottom of the overlay.\n\t\t.o-table-control--dock {\n\t\t\ttop: auto;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n}\n\n/// Styles to show scroll and expander fade out.\n@mixin _oTableOverflowFadeOverlay {\n\t.o-table-overflow-fade-overlay {\n\t\t@supports (pointer-events: none) {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n\n\t// Show horizontal fade when the table is scrolled.\n\t.o-table-overflow-fade-overlay--scroll {\n\t\t@if _oTableGet('table-background') {\n\t\t\tbackground: linear-gradient(to right, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-start)),\n\t\t\tlinear-gradient(to left, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-end));\n\t\t}\n\t}\n\n\t// Show vertical fade when the table is contracted.\n\t.o-table-container--contracted .o-table-overflow-fade-overlay:after {\n\t\t@if _oTableGet('table-background') {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 80px;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbackground: linear-gradient(to top, _oTableGet('table-background') 30px, rgba(_oTableGet('table-background'), 0) 80px);\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_responsive-scroll.scss",
      "contents": "/// Styles for a 'ScrollTable'\n/// @access private\n@mixin _oTableResponsiveScroll {\n\t.o-table--responsive-scroll {\n\n\t\t.o-table__duplicate-row {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\t// Remove standard border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:first-child) {\n\t\t\t\tborder: 0;\n\t\t\t}\n\n\t\t\t// Add responsive border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:last-child) {\n\t\t\t\ttd {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttr:not(.o-table__duplicate-row) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.o-table__duplicate-row {\n\t\t\t\tdisplay: table-row;\n\t\t\t}\n\n\t\t\tth {\n\t\t\t\tposition: sticky;\n\t\t\t\tleft: 0;\n\t\t\t\tbackground-color: _oTableGet('table-background');\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_row-headings.scss",
      "contents": "/// @brand internal\n/// @outputs Highlights table headings.\n/// @access private\n@mixin _oTableRowHeadings() {\n\t.o-table--row-headings > tbody th {\n\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_row-stripes.scss",
      "contents": "/// Add this to the table element to get row stripes\n/// @access private\n@mixin _oTableRowStripes() {\n\t.o-table--row-stripes {\n\t\tbackground-color: _oTableGet('table-background');\n\n\t\tcaption {\n\t\t\tbackground-color: _oTableGet('table-background');\n\t\t}\n\n\t\ttbody tr:nth-child(even) {\n\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\tth {\n\t\t\t\t// For sticky \"responsive-scroll\" headers.\n\t\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_sort.scss",
      "contents": "/// Tables styles to support sort buttons.\n/// @access private\n@mixin _oTableSort {\n\n\t.o-table--sortable thead th:not([data-o-table-heading-disable-sort]) {\n\t\tpadding-right: 0; // No header padding with a child sort icon.\n\t}\n\n\t// Sort button.\n\t.o-table__sort {\n\t\t// sass-lint:disable no-vendor-prefixes\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-moz-appearance: none;\n\t\t-webkit-appearance: none;\n\t\t// sass-lint:enable no-vendor-prefixes\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tpadding-right: 20px;\n\t\tmin-width: 60px;\n\t\ttext-align: left;\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrows-up-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tcontent: '';\n\t\t\tmargin-right: -20px;\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show descending icon in sort button with DSC sort applied.\n\t[aria-sort].o-table-sorting-descending .o-table__sort,\n\t[aria-sort='descending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show ascending icon in sort button with ascending sort applied or on hover with no sort.\n\t[aria-sort].o-table-sorting-ascending .o-table__sort,\n\tth[aria-sort='none']:hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\tth:not([aria-sort]):hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\t[aria-sort='ascending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-up', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "dist/scss/_wrapper.scss",
      "contents": "/// Styles for a table wrapper to allow table to overflow.\n/// The wrapped table becomes scrollable on small viewports.\n/// @access private\n@mixin _oTableWrapper {\n\t.o-table-scroll-wrapper {\n\t\toverflow-y: hidden;\n\t\toverflow-x: auto;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\t-webkit-overflow-scrolling: touch; //sass-lint:disable-line no-vendor-prefixes\n\t}\n\n\t.o-table-overlay-wrapper {\n\t\tposition: relative;\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.js",
      "contents": "/*global require, module*/\nimport oTable from './src/js/oTable';\n\nconst constructAll = function() {\n\toTable.init();\n\tdocument.removeEventListener('o.DOMContentLoaded', constructAll);\n};\n\ndocument.addEventListener('o.DOMContentLoaded', constructAll);\n\nexport default oTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "main.scss",
      "contents": "$o-table-is-silent: true !default;\n\n// Dependancies\n@import \"o-brand/main\";\n@import \"o-buttons/main\";\n@import \"o-colors/main\";\n@import \"o-grid/main\";\n@import \"o-icons/main\";\n@import \"o-typography/main\";\n@import \"o-visual-effects/main\";\n// Branding\n@import \"src/scss/brand\";\n// Main\n@import \"src/scss/base\";\n@import \"src/scss/borders\";\n@import \"src/scss/compact\";\n@import \"src/scss/container\";\n@import \"src/scss/lines\";\n@import \"src/scss/mixins\";\n@import \"src/scss/responsive-overflow\";\n@import \"src/scss/responsive-flat\";\n@import \"src/scss/responsive-scroll\";\n@import \"src/scss/row-headings\";\n@import \"src/scss/row-stripes\";\n@import \"src/scss/sort\";\n@import \"src/scss/wrapper\";\n\n@if ($o-table-is-silent == false) {\n\t@include oTable();\n\n\t// Set table to silent again to avoid being output twice\n\t$o-table-is-silent: true !global;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "origami.json",
      "contents": "{\n\t\"description\": \"FT-branded tables\",\n\t\"origamiType\": \"module\",\n\t\"origamiCategory\": \"components\",\n\t\"origamiVersion\": 1,\n\t\"brands\" : [\n\t\t\"master\",\n\t\t\"internal\",\n\t\t\"whitelabel\"\n\t],\n\t\"support\": \"https://github.com/Financial-Times/o-table/issues\",\n\t\"supportContact\": {\n\t\t\"email\": \"origami.support@ft.com\",\n\t\t\"slack\": \"financialtimes/ft-origami\"\n\t},\n\t\"supportStatus\": \"active\",\n\t\"browserFeatures\": {\n\t\t\"required\": [\n\t\t\t\"IntersectionObserver\",\n\t\t\t\"IntersectionObserverEntry\"\n\t\t]\n\t},\n\t\"demosDefaults\": {\n\t\t\"js\": \"demos/src/demo.js\",\n\t\t\"sass\": \"demos/src/demo.scss\",\n\t\t\"dependencies\": [\n\t\t\t\"o-fonts@^3.0.0\",\n\t\t\t\"o-normalise@^1.0.0\",\n\t\t\t\"o-typography@v5.7.5\"\n\t\t]\n\t},\n\t\"demos\": [\n\t\t{\n\t\t\t\"title\": \"Basic\",\n\t\t\t\"name\": \"basic\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Compact\",\n\t\t\t\"name\": \"compact\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"modifierClass\": \"o-table--compact\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Caption and footnote\",\n\t\t\t\"name\": \"captions\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"showCaption\": true,\n\t\t\t\t\"showFooter\": true\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Caption elements may include flow content such as a heading, this demo uses o-typography to add a h2. The footer may also include any flow content, but in this case uses the footnote class to style a source.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Row headings\",\n\t\t\t\"name\": \"row-headings\",\n\t\t\t\"brands\": [\"internal\"],\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"template\": \"demos/src/row-headings.mustache\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Overflow\",\n\t\t\t\"name\": \"responsive-overflow\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"overflow\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. On small viewports this table overflows and may be scrolled left/right. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Scroll\",\n\t\t\t\"name\": \"responsive-scroll\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"scroll\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. This table moves headers into the first column on small viewports. The headers stick to the left edge as the table data is scrolled. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Responsive Flat\",\n\t\t\t\"name\": \"responsive-flat\",\n\t\t\t\"template\": \"demos/src/base.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"tableType\": \"flat\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Open demo and shrink browser to preview. Each entry in the flat table is shown individually with headers on small viewports. This demo includes the optional row stripes from the previous demo.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Expanding Table\",\n\t\t\t\"name\": \"expanding\",\n\t\t\t\"template\": \"demos/src/expanding.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"expanded\": \"false\"\n\t\t\t},\n\t\t\t\"description\": \"Open demo and shrink browser to preview. Responsive Overflow tables may be configured to expand/contract.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Expanding Table With Arrow Dock\",\n\t\t\t\"name\": \"expanding-dock\",\n\t\t\t\"template\": \"demos/src/expanding.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"expanded\": \"true\"\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-pad\",\n\t\t\t\"hidden\": true,\n\t\t\t\"description\": \"Open demo and shrink browser to preview. When expanding Responsive Overflow tables are tall and can be scrolled past, the left/right arrows \\\"dock\\\" next to the \\\"show more\\\" expand button.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Sorting\",\n\t\t\t\"name\": \"sorting\",\n\t\t\t\"template\": \"demos/src/sorting.mustache\",\n\t\t\t\"description\": \"This demo shows sorting columns of various data types, including FT style dates, times, and abbreviated numbers. The demo also shows a column with sort disabled.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Row Stripes\",\n\t\t\t\"name\": \"row-stripes\",\n\t\t\t\"template\": \"demos/src/basic.mustache\",\n\t\t\t\"data\": {\n\t\t\t\t\"modifierClass\": \"o-table--row-stripes\",\n\t\t\t\t\"isStriped\": true\n\t\t\t},\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"Adds a modifier class to make alternate table rows striped. An alternative to lined tables.\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Vertically centre\",\n\t\t\t\"name\": \"cell-styles\",\n\t\t\t\"template\": \"demos/src/cell-styles.mustache\",\n\t\t\t\"documentClasses\": \"o-table-demo-constrain\",\n\t\t\t\"description\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"title\": \"Pa11y\",\n\t\t\t\"name\": \"pa11y\",\n\t\t\t\"template\": \"demos/src/pa11y.mustache\",\n\t\t\t\"hidden\": true\n\t\t}\n\t]\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "package.json",
      "contents": "{\n\t\"browser\": \"browser.js\",\n\t\"eslintIgnore\": [\n\t\t\"browser.js\",\n\t\t\"dist/\"\n\t],\n\t\"keywords\": [\n\t\t\"origami\",\n\t\t\"component\",\n\t\t\"ft\"\n\t],\n\t\"name\": \"@financial-times/o-table\",\n\t\"version\": \"0.0.0\",\n\t\"dependencies\": {\n\t\t\"@financial-times/o-colors\": \"^4.0.0\",\n\t\t\"@financial-times/o-grid\": \"^4.0.6\",\n\t\t\"@financial-times/o-icons\": \">=4.0.0 <6\",\n\t\t\"@financial-times/o-typography\": \"^5.0.0\",\n\t\t\"@financial-times/o-brand\": \"^3.1.1\",\n\t\t\"@financial-times/o-visual-effects\": \"^2.0.3\",\n\t\t\"@financial-times/o-buttons\": \"^5.14.0\",\n\t\t\"dom-delegate\": \"^2.2.0\"\n\t},\n\t\"component\": \"o-table\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://origami.ft.com\"\n\t},\n\t\"scripts\": {\n\t\t\"heroku-postbuild\": \"npx origami-build-tools install && npm i serve && npx origami-build-tools demo\",\n\t\t\"start\": \"serve -l $PORT\"\n\t},\n\t\"devDependencies\": {}\n}\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort/CellFormatter.js",
      "contents": "/**\n * Extracts the contents of img alt text.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractAltFromImages('<img alt=\"text\">'); // text\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} the parameter\n */\nfunction extractAltFromImages(cell){\n\tconst images = Array.from(cell.getElementsByTagName('img'));\n\timages.forEach(image => {\n\t\tconst contents = image.getAttribute('alt');\n\t\timage.insertAdjacentHTML('beforebegin', contents);\n\t\timage.remove();\n\t});\n\n\treturn cell;\n}\n\n/**\n * Returns the text represantation of an HTML node.\n * If a node contains no content `aria-label` or `title` attributes of <a>, <span>, or <i> child nodes are used.\n * @example String argument for example purposes only, to represent a HTMLElement.\n * \textractText('<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"mailto:example@ft.com\" title=\"Email Example at example@ft.com\"></a>'); //Email Example at example@ft.com\n * \textractText('<span class=\"o-icons-icon o-icons-icon--tick\">Correct</span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" title=\"Correct\"></span>); //Correct\n* \textractText('<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"Correct\"></span>); //Correct\n * @param {HTMLElement} cell The DOM node to operate on, possibly a <td>\n * @access private\n * @returns {HTMLElement} text representation of the HTML node\n */\nfunction extractText(cell){\n\tlet text = cell.textContent.trim();\n\t// No text found, check aria labels and titles.\n\t// Useful for icon-only cells.\n\tif (text === '') {\n\t\tconst nodes = cell.querySelectorAll('a, span, i');\n\t\ttext = Array.from(nodes).reduce((accumulator, node) => {\n\t\t\tconst nodeText = node.getAttribute('aria-label') || node.getAttribute('title');\n\t\t\treturn nodeText ? `${accumulator} ${nodeText}` : accumulator;\n\t\t}, '');\n\t}\n\treturn text.trim();\n}\n\n/**\n * Returns the text with abbreviations expanded.\n * Supports million 'm', billion 'bn' (1,000 million), and trillion 'tn' (1,000 billion).\n * @example\n *  expandAbbreviations('1m') //1000000\n *  expandAbbreviations('1.2bn') //2200000000\n *  expandAbbreviations('1tn') //1000000000000\n *  expandAbbreviations('5m-10m') //5000000-10000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with any supported abbreviations expanded\n */\nfunction expandAbbreviations(text) {\n\ttext = text.replace(/([\\d,.]+)([a-zA-Z]+)/g, (match, digit, abbreviation) => {\n\t\tconst zeros = {\n\t\t\t'm': 6,\n\t\t\t'bn': 9,\n\t\t\t'tn': 12\n\t\t};\n\t\treturn `${digit * Math.pow(10, zeros[abbreviation] || 0)}`;\n\t});\n\treturn text;\n}\n\n/**\n * Returns the text with digit group separators removed.\n * @example\n *  removeDigitGroupSeparator('1,000') //1000\n *  removeDigitGroupSeparator('40') //40\n *  removeDigitGroupSeparator('4,000,000') //4000000\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digit group separators (commas) removed.\n */\nfunction removeDigitGroupSeparators(text) {\n\treturn text.replace(/,/g, '');\n}\n\n/**\n * Returns the text with non-number characters removed (e.g. currency symbols).\n * Does not effect range characters e.g. \"–\" will be maintained.\n * If no digits were found to remove, returns the text unchanged.\n * @example\n *  extractDigitsIfFound('Rmb100') //100\n *  extractDigitsIfFound('CFA Fr830') //830\n *  extractDigitsIfFound('HK$12') //12\n *  extractDigitsIfFound('HK$12-HK$20') //12–20\n *  extractDigitsIfFound('1534956593-1534956620') //1534956593–1534956620\n *  extractDigitsIfFound('Some text') //Some text\n *  extractDigitsIfFound('Some text 123') //123\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text with digits characters only.\n */\nfunction extractDigitsIfFound(text) {\n\tconst digitsAndRange = text.replace(/([^\\d.,\\-\\–]+)/g, '');\n\tif (digitsAndRange === '') {\n\t\treturn text;\n\t}\n\treturn digitsAndRange;\n}\n\n/**\n * Returns a number from a range\n * @example\n *  removeRange('1534956593–1534956620') //1534956593\n *  removeRange('123–345') //123\n *  removeRange('123') //123\n *  removeRange('No numbers') //No numbers\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number}\n */\nfunction extractNumberFromRange(text) {\n\tconst number = parseFloat(text);\n\treturn isNaN(number) ? text : number;\n}\n\n/**\n * Parses FT style date and time and formats as a number for sorting.\n * FT date or date and time returns a UNIX epoch (UTC).\n * FT time returns a positive float for pm, negative for am.\n * @example\n *  ftDateTimeToNumber('August 17') //UNIX epoch, assumes current year\n *  ftDateTimeToNumber('September 12 2012') //UNIX epoch\n *  ftDateTimeToNumber('January 2012') //UNIX epoch, first of month\n *  ftDateTimeToNumber('March 12 2015 1am') //UNIX epoch including time\n *  ftDateTimeToNumber('April 20 2014 1.30pm') //UNIX epoch including time\n *  ftDateTimeToNumber('1am') //1\n *  ftDateTimeToNumber('1.30am') //1.3\n *  ftDateTimeToNumber('1.40pm') //13.4\n *  ftDateTimeToNumber('3pm') //15\n *  ftDateTimeToNumber('Not a known date') //Note a known date\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number} Number representation of date and/or time for sorting.\n */\nfunction ftDateTimeToNumber(text) {\n\tconst monthNames = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\t// FT style for writing dates: is June 23 2016 (no commas, month date year)\n\tconst date = text.match(/^([A-Za-z]{3,})(?:[\\s])(?=[\\d])((?:\\d{1,2})?(?![\\d]))?(?:\\s)?(\\d{4})?/);\n\t// FT style for writing time:\n\t// The 12 hour clock should be used: 1am, 9.30pm\n\tconst time = text.match(/(?:\\s|^)(\\d{1,2}(?:[.](\\d{2}))?)(pm|am)$/);\n\t// Get date.\n\tconst month = date && date[1] ? date[1] : null;\n\t// Get full month name from a given month e.g. 'January' for 'Jan'.\n\tconst matchingMonthNames = monthNames.filter((name) => name.indexOf(month) !== -1);\n\t// Get the index of the matching month name.\n\tconst monthIndex = matchingMonthNames && matchingMonthNames[0] ? monthNames.indexOf(matchingMonthNames[0]) : null;\n\tconst day = date && date[2] ? parseInt(date[2], 10) : null;\n\tlet year = date && date[3] ? parseInt(date[3], 10) : null;\n\tif (month && !year) {\n\t\t// For sorting purposes, assume a month is for this year if not otherwise specified.\n\t\tyear = (new Date()).getFullYear();\n\t}\n\t// Get time.\n\tconst hour = time && time[1] ? parseInt(time[1], 10) : null;\n\tconst minute = time && time[2] ? parseInt(time[2], 10) : 0;\n\tconst period = time ? time[3] : null;\n\tconst twentyFourHour = hour && period === 'pm' ? hour + 12 : hour;\n\t// Sort number for FT formated time.\n\tif (hour && !(year && monthIndex)) {\n\t\treturn parseFloat(`${twentyFourHour}.${minute}`);\n\t}\n\t// Unix epoch to sort FT formated date.\n\tconst dateObj = new Date(Date.UTC(year, monthIndex, day, twentyFourHour, minute));\n\treturn isNaN(dateObj.getTime()) ? text : dateObj.getTime();\n}\n\n/**\n * Removes and number of asterisk's which are at the end of the line.\n * @example\n *  removeRefereneAsterisk('Durian*') //Durian\n *  removeRefereneAsterisk('1,439,165.43**') //1,439,165.43\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} Text without source/reference asterisk.\n */\nfunction removeRefereneAsterisk(text) {\n\treturn text.replace(/\\*+$/, '');\n}\n\n/**\n * Removes indicators of an empty cell.\n * @example\n *  removeEmptyCellIndicators('n/a'); //\n *  removeEmptyCellIndicators('-'); //\n *  removeEmptyCellIndicators('Cell-content'); //Cell-content\n * @param {String} text The string to operate on\n * @access private\n * @returns {String} An empty string or the original text.\n */\nfunction removeEmptyCellIndicators(text) {\n\t// Remove n/a\n\ttext = text.replace(/^n[./]a[.]?$/i, '');\n\t// Remove -\n\treturn text === '-' ? '' : text;\n}\n\n/**\n * Group of filters to extract text from a cell.\n * @param {HTMLElement} cell The node to extract sortable text from.\n * @access private\n * @returns {String} The node content to sort on.\n */\nfunction extractNodeContent(cell) {\n\tconst steps = [extractAltFromImages, extractText, removeRefereneAsterisk, removeEmptyCellIndicators];\n\tlet text = cell;\n\tsteps.forEach(step => { text = step(text); });\n\treturn typeof text === 'string' ? text : '';\n}\n\n/**\n * Group of filters to extract a number for sorting.\n * @param {String} text The string to operate on\n * @access private\n * @returns {Number|String} A number if one could a extracted, string otherwise.\n */\nfunction extractNumber(text) {\n\tconst steps = [removeDigitGroupSeparators, expandAbbreviations, extractDigitsIfFound, extractNumberFromRange];\n\tsteps.forEach(step => { text = step(text); });\n\treturn text;\n}\n\n/**\n * Methods to format table cells for sorting.\n * @access public\n */\nclass CellFormatter {\n\n\tconstructor () {\n\t\t// This object is used to keep the running order of filter methods\n\t\tthis.filters = {\n\t\t\ttext: [extractNodeContent],\n\t\t\tnumber: [extractNodeContent, extractNumber],\n\t\t\tpercent: [extractNodeContent, extractNumber],\n\t\t\tcurrency: [extractNodeContent, extractNumber],\n\t\t\tnumeric: [extractNodeContent, extractNumber],\n\t\t\tdate: [extractNodeContent, ftDateTimeToNumber]\n\t\t};\n\t}\n\n\t/**\n\t * The `formatFunction` take the table cell HTMLElement,\n\t * and converts it to a String or Number of sorting.\n\t *\n\t * @callback formatFunction\n\t * @param {HTMLElement} cell\n\t * @return {String|Object}\n\t */\n\n\t/**\n\t * @param {String} type The data type of the cell to apply the filter function to.\n\t * @param {formatFunction} formatFunction The function to take the cell and return a sortable value (string/number).\n\t * @example\n\t *  mySortFormatter.setFormatter('emoji-time', (cell) => {\n\t *  \tconst text = cell.textContent.trim();\n\t *  \tif (text === '🌑') {\n\t *  \t\treturn 1;\n\t *  \t}\n\t *  \tif (text === '🌤️️') {\n\t *  \t\treturn 2;\n\t *  \t}\n\t *  \treturn 0;\n\t *  });\n\t * @access public\n\t */\n\tsetFormatter(type, formatFunction) {\n\t\tthis.filters[type] = [formatFunction];\n\t}\n\n\t/**\n\t * @param {HTMLElement} cell\n\t * @param {String} type The data type of the cell, e.g. date, number, currency. Custom types are supported.\n\t * @see {@link setFormatter} to support add support for a custom type.\n\t * @access public\n\t * @return {String|Number} A representation of cell which can be used for sorting.\n\t */\n\tformatCell({ cell, type = 'text' }) {\n\t\ttype = type || 'text';\n\t\tlet cellClone = cell.cloneNode({ deep: true });\n\t\tlet sortValue = cell.getAttribute('data-o-table-sort-value');\n\t\tif (sortValue === null) {\n\t\t\tif (this.filters[type]) {\n\t\t\t\tsortValue = cellClone;\n\t\t\t\tthis.filters[type].forEach(fn => { sortValue = fn(sortValue); });\n\t\t\t}\n\t\t\tcell.setAttribute('data-o-table-sort-value', sortValue);\n\t\t}\n\t\tconst sortValueIsNumber = sortValue !== '' && !isNaN(sortValue);\n\t\treturn sortValueIsNumber ? parseFloat(sortValue) : sortValue;\n\t}\n}\n\nexport default CellFormatter;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Sort/TableSorter.js",
      "contents": "import CellFormatter from \"./CellFormatter\";\n\n/**\n * Construct Intl.Collator if supported.\n *\n * @access private\n * @returns {Intl.Collator | Undefined}\n */\nfunction getIntlCollator() {\n\tif (typeof Intl !== 'undefined' && {}.hasOwnProperty.call(Intl, 'Collator')) {\n\t\treturn new Intl.Collator();\n\t}\n}\n\n/**\n * An ascending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\nfunction ascendingSort(a, b, intlCollator) {\n\tif ((typeof a === 'string' || a instanceof String) && (typeof b === 'string' || b instanceof String)) {\n\t\treturn intlCollator ? intlCollator.compare(a, b) : a.localeCompare(b);\n\t} else if ((!isNaN(b) && isNaN(a)) || a < b) {\n\t\treturn -1;\n\t} else if ((!isNaN(a) && isNaN(b)) || b < a) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * A descending [compare function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters}.\n *\n * @access private\n * @param {String|Number} a\n * @param {String|Number} b\n * @param {Intl.Collator} intlCollator\n * @returns {Number}\n */\nfunction descendingSort(...args) {\n\treturn 0 - ascendingSort.apply(this, args);\n}\n\n/**\n * Provides methods to sort table instances.\n */\nclass TableSorter {\n\n\tconstructor() {\n\t\tthis._cellFormatter = new CellFormatter();\n\t}\n\n\t/**\n\t * Sort the given table.\n\t *\n\t * @access public\n\t * @param {BaseTable} table - The table instance to sort.\n\t * @param {Number} columnIndex - The index of the table column to sort.\n\t * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n\t * @returns {undefined}\n\t */\n\tsortRowsByColumn(table, columnIndex, sortOrder) {\n\t\tconst tableHeaderElement = table.getTableHeader(columnIndex);\n\n\t\tif (['ascending', 'descending'].indexOf(sortOrder) === -1) {\n\t\t\tthrow new Error(`Sort order \"${sortOrder}\" is not supported. Must be \"ascending\" or \"descending\".`);\n\t\t}\n\n\t\t// Add class for immediate visual feedback (only update aria when table has sorted successfully).\n\t\twindow.requestAnimationFrame(() => {\n\t\t\ttableHeaderElement.classList.add(`o-table-sorting-${sortOrder}`);\n\t\t});\n\n\t\tconst intlCollator = getIntlCollator();\n\t\tconst cellFormatter = this._cellFormatter;\n\t\tconst type = tableHeaderElement.getAttribute('data-o-table-data-type') || undefined;\n\t\ttable.tableRows.sort((a, b) => {\n\t\t\tlet aCol = a.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n\t\t\tlet bCol = b.querySelectorAll('td,th:not(.o-table__duplicate-heading)')[columnIndex];\n\t\t\taCol = cellFormatter.formatCell({ cell: aCol, type });\n\t\t\tbCol = cellFormatter.formatCell({ cell: bCol, type });\n\t\t\tif (sortOrder === 'ascending') {\n\t\t\t\treturn ascendingSort(aCol, bCol, intlCollator);\n\t\t\t} else {\n\t\t\t\treturn descendingSort(aCol, bCol, intlCollator);\n\t\t\t}\n\t\t});\n\n\t\twindow.requestAnimationFrame(() => {\n\t\t\ttable.tableRows.forEach((row) => {\n\t\t\t\ttable.tbody.appendChild(row);\n\t\t\t});\n\t\t\ttable.tableHeaders.forEach((header) => {\n\t\t\t\tconst headerSort = (header === tableHeaderElement ? sortOrder : 'none');\n\t\t\t\theader.setAttribute('aria-sort', headerSort);\n\t\t\t\theader.classList.remove(`o-table-sorting-ascending`);\n\t\t\t\theader.classList.remove(`o-table-sorting-descending`);\n\t\t\t});\n\t\t\ttable.sorted({\n\t\t\t\tcolumnIndex,\n\t\t\t\tsortOrder\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Set a custom cell formatter for a given data type.\n\t *\n\t * @param {String} type - The data type to apply the filter function to.\n\t * @param {formatFunction} formatFunction - Callback to format a table cell to a sort value.\n\t * @see {@link CellFormatter~setFormatter} for `formatFunction` details.\n\t * @access public\n\t */\n\tsetCellFormatterForType(type, formatFunction) {\n\t\tthis._cellFormatter.setFormatter(type, formatFunction);\n\t}\n}\n\nexport default TableSorter;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/BaseTable.js",
      "contents": "import Delegate from 'dom-delegate';\n\nclass BaseTable {\n\n\t/**\n\t * The shared functionality of all `o-table` variants.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {BaseTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tthis._listeners = [];\n\t\tthis._sorter = sorter;\n\t\tthis.rootEl = rootEl;\n\t\tthis._opts = Object.assign({\n\t\t\tsortable: this.rootEl.getAttribute('data-o-table-sortable') !== 'false'\n\t\t}, opts);\n\t\tthis.thead = this.rootEl.querySelector('thead');\n\t\tthis.tbody = this.rootEl.querySelector('tbody');\n\t\tthis.tableHeaders = this.thead ? Array.from(this.thead.querySelectorAll('th')) : [];\n\t\tthis.tableRows = this.tbody ? Array.from(this.tbody.getElementsByTagName('tr')) : [];\n\t\tthis.wrapper = this.rootEl.closest('.o-table-scroll-wrapper');\n\t\tthis.container = this.rootEl.closest('.o-table-container');\n\t\tthis.overlayWrapper = this.rootEl.closest('.o-table-overlay-wrapper');\n\t\tthis._rootElDomDelegate = new Delegate(this.rootEl);\n\t}\n\n\t/**\n\t * Gets a table header for a given column index.\n\t *\n\t * @access public\n\t * @param {Number} columnIndex - The index of the table column to get the header for.\n\t * @throws When no header is not found.\n\t * @returns {HTMLElement}\n\t */\n\tgetTableHeader(columnIndex) {\n\t\tconst th = this.tableHeaders[columnIndex];\n\t\tif (!th) {\n\t\t\tthrow new Error(`Could not find header for column index \"${columnIndex}\".`);\n\t\t}\n\t\treturn th;\n\t}\n\n\t/**\n\t * Sort the table.\n\t *\n\t * @access public\n\t * @param {Number} columnIndex - The index of the table column to sort.\n\t * @param {Number} sortOrder - How to sort the column, \"ascending\" or \"descending\"\n\t * @returns {undefined}\n\t */\n\tsortRowsByColumn(columnIndex, sortOrder) {\n\t\t/**\n\t\t * Fires an \"oTable.sorting\" event. The sorting event can be cancelled to\n\t\t * provide a totally custom method of sorting the table.\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n\t\t */\n\t\tconst defaultSort = this._dispatchEvent('sorting', {\n\t\t\tsort: sortOrder,\n\t\t\tcolumnIndex\n\t\t}, { cancelable: true });\n\n\t\tif (defaultSort) {\n\t\t\tthis._sorter.sortRowsByColumn(this, columnIndex, sortOrder);\n\t\t}\n\t}\n\n\t/**\n\t * Add sort buttons to the DOM within the table header.\n\t * @returns {undefined}\n\t */\n\taddSortButtons() {\n\t\tif (!this._opts.sortable) {\n\t\t\treturn;\n\t\t}\n\t\tthis.rootEl.classList.add('o-table--sortable');\n\t\tthis.tableHeaders.forEach(function (th) {\n\t\t\t// Don't add sort buttons to unsortable columns.\n\t\t\tif (th.hasAttribute('data-o-table-heading-disable-sort')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Move heading text into button.\n\t\t\tconst sortButton = document.createElement('button');\n\t\t\tconst heading = th.textContent;\n\t\t\tsortButton.textContent = heading;\n\t\t\t// In VoiceOver, button `aria-label` is repeated when moving from one column of tds to the next.\n\t\t\t// Using `title` avoids this, but risks not being announced by other screen readers.\n\t\t\tsortButton.classList.add('o-table__sort');\n\t\t\tsortButton.setAttribute('title', `sort table by ${heading}`);\n\t\t\tth.innerHTML = '';\n\t\t\tth.appendChild(sortButton);\n\t\t\t// Add click event to buttons.\n\t\t\tconst listener = this._sortButtonHandler.bind(this);\n\t\t\tthis._rootElDomDelegate.on('click', '.o-table__sort', listener);\n\t\t}.bind(this));\n\t}\n\n\t/**\n\t * Indicate that the table has been sorted after intercepting the sorting event.\n\t *\n\t * @access public\n\t * @param {Object} sortDetails - Details of the current sort state.\n\t * @param {Number|Null} sortDetails.columnIndex - The index of the currently sorted column.\n\t * @param {String|Null} sortDetails.sortOrder - The type of sort, \"ascending\" or \"descending\"\n\t */\n\tsorted({ columnIndex, sortOrder }) {\n\t\tif (isNaN(columnIndex)) {\n\t\t\tthrow new Error(`Expected a numerical column index but received \"${columnIndex}\".`);\n\t\t}\n\t\tif (!sortOrder) {\n\t\t\tthrow new Error(`Expected a sort order e.g. \"ascending\" or \"descending\".`);\n\t\t}\n\t\tthis._dispatchEvent('sorted', {\n\t\t\tsortOrder,\n\t\t\tcolumnIndex\n\t\t});\n\t}\n\n\t/**\n\t * Gets the instance ready for deletion.\n\t * Removes event listeners that were added during instatiation of the component.\n\t * @access public\n\t * @returns {undefined}\n\t */\n\tdestroy() {\n\t\tthis._rootElDomDelegate.destroy();\n\t\tthis._listeners.forEach(({ type, listener, element }) => {\n\t\t\telement.removeEventListener(type, listener);\n\t\t});\n\t}\n\n\t/**\n\t * Indicate that the table has been constructed successfully.\n\t * @returns {undefined}\n\t */\n\t_ready() {\n\t\tthis._dispatchEvent('ready');\n\t}\n\n\t/**\n\t * Handles a sort button click event. Toggles column sort.\n\t * @param {MouseEvent} event - The click event.\n\t * @returns {undefined}\n\t */\n\t_sortButtonHandler(event) {\n\t\tconst sortButton = event.target;\n\t\tconst th = sortButton.closest('th');\n\t\tconst columnIndex = this.tableHeaders.indexOf(th);\n\t\tif (th && !isNaN(columnIndex)) {\n\t\t\tconst currentSort = th.getAttribute('aria-sort');\n\t\t\tconst sortOrder = [null, 'none', 'descending'].indexOf(currentSort) !== -1 ? 'ascending' : 'descending';\n\t\t\tthis.sortRowsByColumn(columnIndex, sortOrder);\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to dispatch namespaced events.\n\t *\n\t * @param {String} event - The event name within `oTable` e.g. \"sorted\".\n\t * @param {Object} data={} - Event data. `insatnce` is added automatically.\n\t * @param {Object} opts={} - [Event options]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event/Event#Values} (o-table events bubble by default).\n\t */\n\t_dispatchEvent(event, data = {}, opts = {}) {\n\t\tObject.assign(data , {\n\t\t\tinstance: this\n\t\t});\n\t\treturn this.rootEl.dispatchEvent(new CustomEvent(`oTable.${event}`, Object.assign({\n\t\t\tdetail: data,\n\t\t\tbubbles: true\n\t\t}, opts)));\n\t}\n}\n\nexport default BaseTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/BasicTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass BasicTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component without responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {BasicTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n}\n\nexport default BasicTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/FlatTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass FlatTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component with \"flat\" responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {FlatTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\t// Flat table can only work given headers.\n\t\tif (this.tableHeaders.length > 0) {\n\t\t\tthis._duplicateHeaders(rootEl);\n\t\t} else {\n\t\t\tconsole.warn('Could not create a \"flat\" table as no headers were found. Ensure table headers are placed within \"<thead>\". Removing class \"o-table--responsive-flat\".', rootEl);\n\t\t\trootEl.classList.remove('o-table--responsive-flat');\n\t\t}\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Duplicate table headers for each tabel row.\n\t */\n\t_duplicateHeaders() {\n\t\tthis.tableRows.forEach((row) => {\n\t\t\tconst data = Array.from(row.getElementsByTagName('td'));\n\t\t\tdata.forEach((td, dataIndex) => {\n\t\t\t\tconst clonedHeader = this.tableHeaders[dataIndex].cloneNode(true);\n\t\t\t\tclonedHeader.setAttribute('scope', 'row');\n\t\t\t\tclonedHeader.setAttribute('role', 'rowheader');\n\t\t\t\tclonedHeader.classList.add('o-table__duplicate-heading');\n\t\t\t\ttd.parentNode.insertBefore(clonedHeader, td);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default FlatTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/OverflowTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass OverflowTable extends BaseTable {\n\n\t/**\n\t * Initialises an `o-table` component with \"overflow\" responsive behaviour.\n\t *\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @param {Undefined | Bool} opts.expanded\n\t * @param {Number} opts.minimumRowCount [20]\n\t * @access public\n\t * @returns {OverflowTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\tthis._opts = Object.assign({\n\t\t\texpanded: this.rootEl.hasAttribute('data-o-table-expanded') ? this.rootEl.getAttribute('data-o-table-expanded') !== 'false' : null,\n\t\t\tminimumRowCount: this.rootEl.getAttribute('data-o-table-minimum-row-count')\n\t\t}, this._opts);\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\twindow.requestAnimationFrame(this._setupScroll.bind(this));\n\t\twindow.requestAnimationFrame(this._setupExpander.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check if the table is expanded (true) or collapsed (false).\n\t * @access public\n\t * @returns {Bool}\n\t */\n\tisExpanded() {\n\t\tconst value = this.rootEl.getAttribute('data-o-table-expanded');\n\t\treturn Boolean(value !== 'false');\n\t}\n\n\t/**\n\t * Check if the table supports the expand/contract feature.\n\t * @access public\n\t * @returns {Bool}\n\t */\n\tcanExpand() {\n\t\treturn typeof this._opts.expanded === 'boolean' && (this._minimumRowCount < this.tableRows.length);\n\t}\n\n\t/**\n\t * Hides table rows if the table can be expanded.\n\t * @access public\n\t * @returns undefined\n\t */\n\tcontractTable() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\t\t// Expander not setup until next frame. Update options.\n\t\tif (!this.controls) {\n\t\t\tthis._opts.expanded = false;\n\t\t\treturn;\n\t\t}\n\t\tconst expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n\t\tconst rowsToHide = this._rowsToHide;\n\t\tconst originalButtonTopOffset = this.controls.expanderButton.getBoundingClientRect().top;\n\t\t// Calculate contracted table height.\n\t\t// Extra height to tease half of the first hidden row.\n\t\tconst tableHeight = this.rootEl.getBoundingClientRect().height;\n\t\tconst rowsToHideHeight = rowsToHide.reduce((accumulatedHeight, row) => {\n\t\t\treturn accumulatedHeight + row.getBoundingClientRect().height;\n\t\t}, 0);\n\t\tconst extraHeight = (rowsToHide[0] ? rowsToHide[0].getBoundingClientRect().height / 2 : 0);\n\t\tconst contractedHeight = tableHeight + extraHeight - rowsToHideHeight;\n\t\t// Contract table.\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis._updateRowVisibility(false);\n\t\t\tthis.rootEl.setAttribute('aria-expanded', false);\n\t\t\tthis.rootEl.setAttribute('data-o-table-expanded', false);\n\t\t\tthis.wrapper.style.height = `${contractedHeight}px`;\n\t\t\tthis.container.classList.remove('o-table-container--expanded');\n\t\t\tthis.container.classList.add('o-table-container--contracted');\n\t\t\tif (expanderButton) {\n\t\t\t\texpanderButton.textContent = 'Show more';\n\t\t\t\t// Keep more/fewer button in viewport when contracting table.\n\t\t\t\t// Using `window.scroll(x-coord, y-coord)` as IE11 did not scroll\n\t\t\t\t// correctly with `window.scroll(options)`.\n\t\t\t\tconst top = window.pageYOffset + this.controls.expanderButton.getBoundingClientRect().top - originalButtonTopOffset;\n\t\t\t\twindow.scroll(null, top);\n\t\t\t}\n\t\t\tthis._updateControls();\n\t\t});\n\t}\n\n\t/**\n\t * Expands the table, revealing hidden table rows, if it can be expanded and has been contracted.\n\t * @access public\n\t * @returns undefined\n\t */\n\texpandTable() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\t\t// Expander not setup until next frame. Update options.\n\t\tif (!this.controls) {\n\t\t\tthis._opts.expanded = true;\n\t\t\treturn;\n\t\t}\n\t\tconst expanderButton = this.controls ? this.controls.expanderButton.querySelector('button') : null;\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis.container.classList.remove('o-table-container--contracted');\n\t\t\tthis.container.classList.add('o-table-container--expanded');\n\t\t\tif (expanderButton) {\n\t\t\t\texpanderButton.textContent = 'Show fewer';\n\t\t\t}\n\t\t\tthis.wrapper.style.height = '';\n\t\t\tthis._updateRowVisibility(true);\n\t\t\tthis.rootEl.setAttribute('aria-expanded', true);\n\t\t\tthis.rootEl.setAttribute('data-o-table-expanded', true);\n\t\t\tthis._updateControls();\n\t\t});\n\t}\n\n\t/**\n\t * Performs post-sort actions such as updating row visibility and firing a `oTable.sorted` event.\n\t * Required as the sort event can be intercepted for a custom implementation.\n\t *\n\t * @access public\n\t * @param {Object} sortDetail An object containing information about the sort.\n\t * @param {Number} sortDetail.columnIndex The index of the column which has been sorted.\n\t * @param {String} sortDetail.sortAscending The order of the sort i.e. ascending or descending.\n\t * @returns undefined\n\t */\n\tsorted({columnIndex, sortOrder}) {\n\t\twindow.requestAnimationFrame(() => {\n\t\t\tthis._updateRowVisibility(this.isExpanded());\n\t\t\tsuper.sorted({ columnIndex, sortOrder });\n\t\t});\n\t}\n\n\t/**\n\t * Update row aria attributes to show/hide them.\n\t * E.g. After performing a sort, rows which where hidden in the colapsed table may have become visible.\n\t * @param {boolean} expanded - Update row visibility for an expanded or contracted table.\n\t * @returns {undefined}\n\t */\n\t_updateRowVisibility(expanded) {\n\t\tconst visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n\t\tconst hiddenRows = expanded ? [] : this.tableRows.slice(visibleRowCount, this.tableRows.length);\n\t\tthis.tableRows.forEach((row) => {\n\t\t\trow.setAttribute('aria-hidden', hiddenRows && hiddenRows.indexOf(row) !== -1 ? 'true' : 'false');\n\t\t});\n\t}\n\n\t/**\n\t * Add controls such as the back, forward, \"show more\" buttons to DOM,\n\t * plus wrappers needed for them to function.\n\t * @returns {undefined}\n\t */\n\t_addControlsToDom() {\n\t\tif (this.overlayWrapper && !this.controls) {\n\t\t\tconst supportsArrows = OverflowTable._supportsArrows();\n\t\t\tthis.overlayWrapper.insertAdjacentHTML('beforeend', `\n\t\t\t\t${this.wrapper ? `\n\t\t\t\t\t<div class=\"o-table-overflow-fade-overlay\" style=\"display: none;\"></div>\n\t\t\t\t` : ''}\n\t\t\t\t<div class=\"o-table-overflow-control-overlay\" style=\"display: none;\">\n\t\t\t\t\t${this.wrapper && supportsArrows ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--back o-table-control--hide\">\n\t\t\t\t\t\t\t<button aria-label=\"visually scroll table back\" disabled=\"true\" class=\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-left\"></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\n\t\t\t\t\t${this.wrapper && supportsArrows ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--forward o-table-control--hide\">\n\t\t\t\t\t\t\t<button aria-label=\"visually scroll table forward\" disabled=\"true\" class=\"o-buttons o-buttons--primary o-buttons--big o-buttons-icon o-buttons-icon--icon-only o-buttons-icon--arrow-right\"></button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\n\t\t\t\t\t${this.canExpand() ? `\n\t\t\t\t\t\t<div class=\"o-table-control o-table-control--expander\">\n\t\t\t\t\t\t\t<button class=\"o-buttons o-buttons--primary o-buttons--big\">Show fewer</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t` : ''}\n\t\t\t\t</div>\n\t\t\t`);\n\n\t\t\tthis.controls = {\n\t\t\t\tcontrolsOverlay: this.overlayWrapper.querySelector('.o-table-overflow-control-overlay'),\n\t\t\t\tfadeOverlay: this.overlayWrapper.querySelector('.o-table-overflow-fade-overlay'),\n\t\t\t\texpanderButton: this.overlayWrapper.querySelector('.o-table-control--expander'),\n\t\t\t\tforwardButton: this.overlayWrapper.querySelector('.o-table-control--forward'),\n\t\t\t\tbackButton: this.overlayWrapper.querySelector('.o-table-control--back')\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Add functionality to improve the experience when scrolling a table,\n\t * such as showing forward/back buttons to indicate that scroll is possible.\n\t * @returns {undefined}\n\t */\n\t_setupScroll() {\n\t\t// Does not warn of a missing wrapper: assumes no overflow is desired.\n\t\tif (this.container && this.overlayWrapper && !this.wrapper) {\n\t\t\tconsole.warn(\n\t\t\t\t'Controls to scroll table left/right could not be added to \"o-table\" as it is missing markup. ' +\n\t\t\t\t'Please add the container and wrapper elements according to the documentation https://registry.origami.ft.com/components/o-table.',\n\t\t\t\t{ table: this.rootEl }\n\t\t\t);\n\t\t}\n\n\t\t// Can not add controls without a container or wrapper.\n\t\tif (!this.container || !this.overlayWrapper || !this.wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add table controls (e.g. left/right button).\n\t\tif (!this.controls) {\n\t\t\tthis._addControlsToDom();\n\t\t}\n\n\t\t// Add forward button behaviour.\n\t\tif (this.controls.forwardButton) {\n\t\t\tconst scrollForward = function () {\n\t\t\t\tthis.wrapper.scrollBy({\n\t\t\t\t\tleft: (document.body.clientWidth / 2),\n\t\t\t\t\tbehavior: 'smooth'\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t\tthis.controls.forwardButton.addEventListener('click', scrollForward);\n\t\t\tthis._listeners.push({\n\t\t\t\telement: this.controls.forwardButton,\n\t\t\t\tscrollForward,\n\t\t\t\ttype: 'click'\n\t\t\t});\n\t\t}\n\n\t\t// Add back button behaviour.\n\t\tif (this.controls.backButton) {\n\t\t\tconst scrollBackward = function () {\n\t\t\t\tthis.wrapper.scrollBy({\n\t\t\t\t\tleft: -(document.body.clientWidth / 2),\n\t\t\t\t\tbehavior: 'smooth'\n\t\t\t\t});\n\t\t\t}.bind(this);\n\t\t\tthis.controls.backButton.addEventListener('click', scrollBackward);\n\t\t\tthis._listeners.push({\n\t\t\t\telement: this.controls.backButton,\n\t\t\t\tscrollBackward,\n\t\t\t\ttype: 'click'\n\t\t\t});\n\t\t}\n\n\t\t// Set scroll position and update controls.\n\t\tconst updateScroll = function () {\n\t\t\tthis._setScrollPosition();\n\t\t\tthis._updateControls();\n\t\t}.bind(this);\n\t\tupdateScroll();\n\n\t\t// Observe controls scrolling beyond table and update.\n\t\tif (this.controls.controlsOverlay && window.IntersectionObserver) {\n\t\t\t// Fade forward/back buttons at start and end of table.\n\t\t\tconst arrowFadeObserverConfig = {\n\t\t\t\troot: this.controls.controlsOverlay,\n\t\t\t\tthreshold: 1.0,\n\t\t\t\trootMargin: `-50px 0px ${this.controls.expanderButton ? '0px' : '-10px'} 0px`\n\t\t\t};\n\t\t\tconst arrowFadeObserver = new IntersectionObserver(function(entries) {\n\t\t\t\tentries.forEach(function(entry) {\n\t\t\t\t\tentry.target.setAttribute('data-o-table-intersection', entry.intersectionRatio !== 1);\n\t\t\t\t\tupdateScroll();\n\t\t\t\t});\n\t\t\t}, arrowFadeObserverConfig);\n\t\t\tif (this.controls.backButton) {\n\t\t\t\tarrowFadeObserver.observe(this.controls.backButton);\n\t\t\t}\n\t\t\tif (this.controls.forwardButton) {\n\t\t\t\tarrowFadeObserver.observe(this.controls.forwardButton);\n\t\t\t}\n\t\t}\n\n\t\t// Add other event listeners to update controls.\n\t\tthis.wrapper.addEventListener('scroll', updateScroll);\n\t\twindow.addEventListener('resize', updateScroll);\n\t\twindow.addEventListener('load', updateScroll);\n\t\tthis._listeners.push({ element: this.wrapper, updateScroll, type: 'scroll' });\n\t\tthis._listeners.push({element: window, updateScroll, type: 'resize'});\n\t\tthis._listeners.push({element: window, updateScroll, type: 'load'});\n\t}\n\n\t/**\n\t * Add hide/show functionality for long tables.\n\t * @returns {undefined}\n\t */\n\t_setupExpander() {\n\t\tif (!this.canExpand()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.container || !this.overlayWrapper || !this.wrapper) {\n\t\t\tthrow new Error(\n\t\t\t\t'Controls to expand/contract the table could not be added to \"o-table\" as it is missing markup.' +\n\t\t\t\t'Please add the container and wrapper element according to the documentation https://registry.origami.ft.com/components/o-table.'\n\t\t\t);\n\t\t}\n\n\t\t// Add table controls (e.g. \"more\" button).\n\t\tif (!this.controls) {\n\t\t\tthis._addControlsToDom();\n\t\t}\n\n\t\tif (this.controls.expanderButton) {\n\t\t\tconst toggleExpanded = function () {\n\t\t\t\tif (this.isExpanded()) {\n\t\t\t\t\tthis.contractTable();\n\t\t\t\t} else {\n\t\t\t\t\tthis.expandTable();\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\tthis.controls.expanderButton.addEventListener('click', toggleExpanded);\n\t\t\tthis._listeners.push({element: this.controls.expanderButton, toggleExpanded, type: 'click'});\n\t\t}\n\n\t\tif (this._opts.expanded){\n\t\t\tthis.expandTable();\n\t\t} else {\n\t\t\tthis.contractTable();\n\t\t}\n\t}\n\n\t/**\n\t * Set table scroll position in wrapper.\n\t * @returns {undefined}\n\t */\n\t_setScrollPosition() {\n\t\tthis._fromEnd = this.wrapper.scrollWidth - this.wrapper.clientWidth - this.wrapper.scrollLeft;\n\t\tthis._fromStart = this.wrapper.scrollLeft;\n\t}\n\n\t/**\n\t * Update all controls and their overlays,\n\t * e.g. forward/back arrow visibility, visibility of arrow dock, overlay fade.\n\t * @returns {undefined}\n\t */\n\t_updateControls() {\n\t\tif (!this._controlUpdateScheduled) {\n\t\t\tthis._controlUpdateScheduled = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\t// Toggle fade.\n\t\t\t\tthis.controls.fadeOverlay.classList.toggle('o-table-overflow-fade-overlay--scroll', this._canScrollTable);\n\t\t\t\tthis.controls.fadeOverlay.style.setProperty('--o-table-fade-from-end', `${Math.min(this._fromEnd, 10)}px`);\n\t\t\t\tthis.controls.fadeOverlay.style.setProperty('--o-table-fade-from-start', `${Math.min(this._fromStart, 10)}px`);\n\n\t\t\t\t// Toggle arrow dock.\n\t\t\t\tthis.controls.controlsOverlay.classList.toggle('o-table-overflow-control-overlay--arrow-dock', this._showArrowDock);\n\n\t\t\t\t// Update forward/back scroll controls.\n\t\t\t\tif (OverflowTable._supportsArrows()) {\n\t\t\t\t\tthis._updateScrollControl(this.controls.forwardButton);\n\t\t\t\t\tthis._updateScrollControl(this.controls.backButton);\n\t\t\t\t}\n\n\t\t\t\t// Make controls visible.\n\t\t\t\tthis.controls.controlsOverlay.style.display = '';\n\t\t\t\tthis.controls.fadeOverlay.style.display = '';\n\t\t\t\tthis._controlUpdateScheduled = false;\n\t\t\t}.bind(this), 33);\n\t\t}\n\t}\n\n\t/**\n\t * Update the visibility of a scroll forward/back button.\n\t * @param {HTMLElement} element - The button wrapper.\n\t * @returns {undefined}\n\t */\n\t_updateScrollControl(element) {\n\t\t// Make arrows sticky if table is tall and can be scrolled past.\n\t\telement.classList.toggle('o-table-control--sticky', this._stickyArrows);\n\t\t// Place the arrows in the doc if they are not sticky.\n\t\tconst arrowsDocked = this._showArrowDock && !this._stickyArrows;\n\t\telement.classList.toggle('o-table-control--dock', arrowsDocked);\n\t\t// Hide scroll buttons if the table fits within the viewport.\n\t\tif (this._canScrollTable) {\n\t\t\telement.style.display = '';\n\t\t} else {\n\t\t\telement.style.display = 'none';\n\t\t}\n\t\t// Disable forward button if the table is scrolled to the end.\n\t\tconst scrolledToBoundary = (this._fromEnd <= 0 && element === this.controls.forwardButton) || (this._fromStart <= 0 && element === this.controls.backButton);\n\t\tconst outsideTable = element.getAttribute('data-o-table-intersection') === 'true';\n\t\tif (outsideTable) {\n\t\t\telement.querySelector('button').setAttribute('disabled', true);\n\t\t\telement.classList.add('o-table-control--hide');\n\t\t}\n\n\t\tif (!scrolledToBoundary && !outsideTable) {\n\t\t\telement.querySelector('button').removeAttribute('disabled');\n\t\t\telement.classList.remove('o-table-control--hide');\n\t\t}\n\n\t\tif (scrolledToBoundary && !outsideTable) {\n\t\t\telement.querySelector('button').setAttribute('disabled', true);\n\t\t\tconst hideControl = !arrowsDocked && (!this._stickyArrows || this._stickyArrows && !this._canScrollPastTable);\n\t\t\telement.classList.toggle('o-table-control--hide', hideControl);\n\t\t}\n\t}\n\n\t/**\n\t * The number of rows to display if the table is collapsed.\n\t * @returns {Number}\n\t */\n\tget _minimumRowCount() {\n\t\tconst minimumRowCount = this._opts.minimumRowCount;\n\t\treturn isNaN(parseInt(minimumRowCount, 10)) ? 20 : parseInt(minimumRowCount, 10);\n\t}\n\n\t/**\n\t * The number rows which will be hidden if the table is collapsed.\n\t * @returns {Number}\n\t */\n\tget _rowsToHide() {\n\t\tconst visibleRowCount = Math.min(this.tableRows.length, this._minimumRowCount);\n\t\treturn this.tableRows.slice(visibleRowCount, this.tableRows.length);\n\t}\n\n\t/**\n\t * Check if the table can be scrolled.\n\t * @returns {Boolean}\n\t */\n\tget _canScrollTable() {\n\t\treturn this._fromEnd > 0 || this._fromStart > 0;\n\t}\n\n\t/**\n\t * Check if the table can fit within the viewport vertically.\n\t * @returns {Boolean}\n\t */\n\tget _tableTallerThanViewport() {\n\t\treturn this.container.getBoundingClientRect().height > document.documentElement.clientHeight;\n\t}\n\n\t/**\n\t * Check if the document is long enough to scroll beyond the table enough for sticky arrows to dock at the bottom.\n\t * I.e. Scroll past the table by at least 50% of the viewport.\n\t * @returns {Boolean}\n\t */\n\tget _canScrollPastTable() {\n\t\treturn this.container.getBoundingClientRect().bottom + (document.documentElement.clientHeight / 2) < document.documentElement.getBoundingClientRect().bottom;\n\t}\n\n\t/**\n\t * Check if the \"dock\" at the bottom of the table should be shown.\n\t * After scrolling past the table, sticky arrows sit within the dock at the bottom of the table.\n\t * @returns {Boolean}\n\t */\n\tget _showArrowDock() {\n\t\treturn OverflowTable._supportsArrows() && this._canScrollTable && this._canScrollPastTable && this.canExpand() && this._rowsToHide.length !== 0;\n\t}\n\n\t/**\n\t * Check if left/right controls should be sticky.\n\t * @returns {Boolean}\n\t */\n\tget _stickyArrows() {\n\t\treturn OverflowTable._supportsArrows() && this._tableTallerThanViewport;\n\t}\n\n\t/**\n\t * Check if sticky buttons are supported.\n\t * @returns {Boolean}\n\t */\n\tstatic _supportsArrows() {\n\t\treturn typeof CSS !== 'undefined' && (CSS.supports(\"position\", \"sticky\") || CSS.supports('position', '-webkit-sticky'));\n\t}\n}\n\nexport default OverflowTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/Tables/ScrollTable.js",
      "contents": "import BaseTable from './BaseTable';\n\nclass ScrollTable extends BaseTable {\n\t/**\n\t * Initialises an `o-table` component with \"scroll\" responsive behaviour.\n\t *\n\t * @access public\n\t * @param {HTMLElement} rootEl - The `o-table` element.\n\t * @param {TableSorter} sorter\n\t * @param {Object} opts [{}]\n\t * @param {Bool} opts.sortable [true]\n\t * @returns {ScrollTable}\n\t */\n\tconstructor(rootEl, sorter, opts = {}) {\n\t\tsuper(rootEl, sorter, opts);\n\t\tthis._duplicateRowsWithAddedHeader();\n\t\twindow.requestAnimationFrame(this.addSortButtons.bind(this));\n\t\tthis._ready();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Duplicate the table headers into a one tbody row.\n\t * @returns {undefined}\n\t */\n\t_duplicateRowsWithAddedHeader() {\n\t\tthis.tableHeaders.forEach((header, index) => {\n\t\t\tconst headerRow = document.createElement('tr');\n\t\t\theaderRow.classList.add('o-table__duplicate-row');\n\t\t\t// Clone column heading and turn into a row heading.\n\t\t\tconst clonedHeader = header.cloneNode(true);\n\t\t\tclonedHeader.setAttribute('scope', 'row');\n\t\t\tclonedHeader.setAttribute('role', 'rowheader');\n\t\t\theaderRow.appendChild(clonedHeader);\n\t\t\t// Clone data for the column into the new row.\n\t\t\tthis.tableRows.forEach(row => {\n\t\t\t\tconst data = row.querySelectorAll('td')[index];\n\t\t\t\theaderRow.appendChild(data.cloneNode(true));\n\t\t\t});\n\t\t\tthis.tbody.appendChild(headerRow);\n\t\t});\n\t}\n}\n\nexport default ScrollTable;\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/js/oTable.js",
      "contents": "import FlatTable from './Tables/FlatTable';\nimport ScrollTable from './Tables/ScrollTable';\nimport OverflowTable from './Tables/OverflowTable';\nimport BasicTable from './Tables/BasicTable';\n\nimport TableSorter from './Sort/TableSorter';\nconst sorter = new TableSorter();\n\n\nclass OTable {\n\n\t/**\n\t * Table options.\n\t * @typedef {Object} OTable~opts - Table options.\n\t * @property {Bool} sortable [true] - Disable the table's sort feature.\n\t * @property {Undefined | Bool} expanded [Undefined] - Allow the \"OverflowTable\" to hide results behind a \"show more\" button. The table is expanded by default when \"true\", contracted when \"false\", or not expandable if not set.\n\t * @property {Number} minimumRowCount [20] - When the `expanded` option is set, the number of rows to show when the table is not expanded.\n\t */\n\n\t/**\n\t * Constructs an o-table component.\n\t *\n\t * @param {HTMLElement} - An o-table element.\n\t * @param {...OTable~opts} opts - A table options object.\n\t * @returns {FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance.\n\t */\n\tconstructor(rootEl, opts = {}) {\n\t\tconst tableType = rootEl.getAttribute('data-o-table-responsive');\n\t\tlet Table;\n\t\tswitch (tableType) {\n\t\t\tcase 'flat':\n\t\t\t\tTable = FlatTable;\n\t\t\t\tbreak;\n\t\t\tcase 'scroll':\n\t\t\t\tTable = ScrollTable;\n\t\t\t\tbreak;\n\t\t\tcase 'overflow':\n\t\t\t\tTable = OverflowTable;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tTable = BasicTable;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn new Table(rootEl, sorter, opts);\n\t}\n\n\t/**\n\t * Constructs all o-table components inside the element passed as the first parameter.\n\t *\n\t * @access public\n\t * @param {(HTMLElement|string)} [el=document.body] - Element where to search for o-table components. You can pass an HTMLElement or a selector string.\n\t * @param {...OTable~opts} opts - A table options object.\n\t * @returns {Array<FlatTable | ScrollTable | OverflowTable | BasicTable> | FlatTable | ScrollTable | OverflowTable | BasicTable} - A table instance or array of table instances.\n\t */\n\tstatic init(el = document.body, opts = {}) {\n\t\tif (!(el instanceof HTMLElement)) {\n\t\t\tel = document.querySelector(el);\n\t\t}\n\t\tif (/\\bo-table\\b/.test(el.getAttribute('data-o-component'))) {\n\t\t\treturn new OTable(el, opts);\n\t\t}\n\t\tconst tableEls = Array.from(el.querySelectorAll('[data-o-component~=\"o-table\"]'));\n\t\treturn tableEls.map(el => {\n\t\t\treturn new OTable(el, opts);\n\t\t});\n\t}\n\n\n\t/**\n\t * The custom formatter accepts a table cell and returns a sort value for that cell.\n\t * This could be used to define a custom sort order for an unsupported format, such as emoji's, or a new date format.\n\t *\n\t * @callback formatFunction\n\t * @param {HTMLElement} cell\n\t */\n\n\t/**\n\t * Set a custom sort formatter for a given data type.\n\t *\n\t * @example <caption>Mapping table cells which contain emojis to a numerical sort value.</caption>\n\t *\tconst OTable = require('o-table');\n\t *\t// Set a filter for custom data type \"emoji-time\".\n\t *\t// The return value may be a string or number.\n\t *\tOTable.setSortFormatterForType('emoji-time', (cell) => {\n\t *\t\tconst text = cell.textContent.trim();\n\t *\t\tif (text === '🌑') {\n\t *\t\t\treturn 1;\n\t *\t\t}\n\t *\t\tif (text === '🌤️️') {\n\t *\t\t\treturn 2;\n\t *\t\t}\n\t *\t\treturn 0;\n\t *\t});\n\t *\tOTable.init();\n\t *\n\t * @param {String} type - The data type to apply the filter function to.\n\t * @param {formatFunction} formatFunction\n\t * @access public\n\t */\n\tstatic setSortFormatterForType(type, formatFunction) {\n\t\tsorter.setCellFormatterForType(type, formatFunction);\n\t}\n}\n\nmodule.exports = OTable;\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_base.scss",
      "contents": "/// Base tables styles and simple utility classes.\n/// @access private\n@mixin _oTableBase() {\n\t.o-table {\n\t\tborder-collapse: collapse;\n\t\tborder-spacing: 0;\n\t\tmargin: 0;\n\t\twidth: 100%;\n\n\t\tthead {\n\t\t\tborder-bottom: 2px solid _oTableGet('table-data-color');\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 10px;\n\t\t\ttext-align: left;\n\t\t\tvertical-align: top;\n\t\t\tcolor: _oTableGet('table-data-color');\n\t\t}\n\n\t\tth {\n\t\t\t@include oTypographySansBold(1);\n\t\t\tbackground-color: _oTableGet('header-background');\n\t\t\t&:not([scope=row]) {\n\t\t\t\tvertical-align: bottom;\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(1);\n\t\t\tscroll-snap-align: none center;\n\t\t\t&:empty:before {\n\t\t\t\t@include oIconsGetIcon('minus', $container-width: 15,  $container-height: 15, $iconset-version: 1);\n\t\t\t\tcontent: '';\n\t\t\t\tvertical-align: middle;\n\t\t\t}\n\t\t}\n\n\t\t.o-table__caption {\n\t\t\ttext-align: left;\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0 10px;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.o-table__cell--numeric {\n\t\t\ttext-align: right;\n\t\t\tfont-feature-settings: \"tnum\" 1;\n\t\t}\n\n\t\t.o-table__cell--content-secondary {\n\t\t\t@include oTypographySize(0);\n\t\t\tfont-weight: normal;\n\t\t}\n\n\t\t.o-table__cell--vertically-center {\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t.o-table .o-table-footnote,\n\t.o-table-footnote {\n\t\t@include oTypographyCaption();\n\t}\n\n\t.o-table-container > .o-table-footnote {\n\t\tmargin-left: 10px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_borders.scss",
      "contents": "/// Horizontal borders\n/// @access private\n@mixin _oTableHorizontalBorders {\n\t.o-table--horizontal-borders {\n\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\n\t\tth:not([scope=row]) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n/// Vertical borders\n/// @access private\n@mixin _oTableVerticalBorders {\n\t.o-table--vertical-borders {\n\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\n\t\t// sass-lint:disable no-qualifying-elements\n\t\tth[scope=row] {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t\t// sass-lint:enable no-qualifying-elements\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_brand.scss",
      "contents": "/// Helper for `o-brand` function.\n/// @access private\n@function _oTableGet($variables, $from: null) {\n    @return oBrandGet($component: 'o-table', $variables: $variables, $from: $from);\n}\n\n/// Helper for `o-brand` function.\n/// @access private\n@function _oTableSupports($variant) {\n    @return oBrandSupportsVariant($component: 'o-table', $variant: $variant);\n}\n\n@if oBrandGetCurrentBrand() == 'master' {\n\t@include oBrandDefine('o-table', 'master', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('paper'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('wheat'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsMix('wheat', 'paper', 40)\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'internal' {\n\t@include oBrandDefine('o-table', 'internal', (\n\t\t'variables': (\n\t\t\ttable-background: oColorsGetPaletteColor('white'),\n\t\t\ttable-alternate-background: oColorsGetPaletteColor('slate-white-5'),\n\t\t\ttable-border-color: oColorsGetPaletteColor('black-20'),\n\t\t\ttable-data-color: oColorsGetColorFor(body, text),\n\t\t\ttable-footnote-color: oColorsGetPaletteColor('black-60'),\n\t\t\t'flat': (\n\t\t\t\ttable-item-alternate-background: oColorsGetPaletteColor('slate-white-5')\n\t\t\t)\n\t\t),\n\t\t'supports-variants': (\n\t\t\t'stripes',\n\t\t\t'compact',\n\t\t\t'row-headings'\n\t\t)\n\t));\n}\n\n@if oBrandGetCurrentBrand() == 'whitelabel' {\n\t@include oBrandDefine('o-table', 'whitelabel', (\n\t\t'variables': (),\n\t\t'supports-variants': (\n\t\t\t'compact'\n\t\t)\n\t));\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_compact.scss",
      "contents": "/// Make a table 'compact'\n/// @access private\n@mixin _oTableCompact {\n\t.o-table--compact {\n\t\tth {\n\t\t\t@include oTypographySansBold(0);\n\t\t}\n\n\t\ttd {\n\t\t\t@include oTypographySans(0);\n\t\t}\n\n\t\tth,\n\t\ttd {\n\t\t\tpadding: 4px 10px;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_container.scss",
      "contents": "/// Styles for a table container, the parent of all other table elements.\n/// Enables child overlays such as to indicate the ability to scroll a table.\n/// Includes standard table margin.\n/// @access private\n@mixin _oTableContainer {\n\t.o-table-container {\n\t\tposition: relative;\n\t}\n\t// Leave space for controls such as \"show more\" when expanded/contracted.\n\t.o-table-container--expanded,\n\t.o-table-container--contracted {\n\t\tpadding-bottom: 40px;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_lines.scss",
      "contents": "/// Add horizontal lines to a table\n/// @access private\n@mixin _oTableHorizontalLines {\n\t.o-table--horizontal-lines {\n\t\ttr:not(:first-child) {\n\t\t\tborder-top: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n\n\n/// Add verticle lines to a table\n/// @access private\n@mixin _oTableVerticalLines {\n\t.o-table--vertical-lines {\n\t\tth:not(:last-child):not(:first-child),\n\t\ttd:not(:last-child):not(:first-child) {\n\t\t\tborder-left: 1px solid _oTableGet('table-border-color');\n\t\t\tborder-right: 1px solid _oTableGet('table-border-color');\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_mixins.scss",
      "contents": "/// Outputs all features and styles available.\n/// @param $opts {list} [('responsive-overflow', 'responsive-flat', 'responsive-scroll', 'lines', 'compact', 'stripes', 'row-headings')] - Table features to output. Defaults to all table features.\n/// @access public\n@mixin oTable($opts: (\n\t'responsive-overflow',\n\t'responsive-flat',\n\t'responsive-scroll',\n\t'lines',\n\t'compact',\n\t'stripes',\n\t'row-headings',\n)) {\n\t$overflow-enabled: index($opts, 'responsive-overflow');\n\t$flat-enabled: index($opts, 'responsive-flat');\n\t$scroll-enabled: index($opts, 'responsive-scroll');\n\t$lines-enabled: index($opts, 'lines');\n\t$compact-enabled: index($opts, 'compact');\n\t$stripes-enabled: index($opts, 'stripes');\n\t$row-headings-enabled: index($opts, 'row-headings');\n\n\t// Basic styles and simple utilities.\n\t@include _oTableBase;\n\n\t// Sortable columns.\n\t@include _oTableSort;\n\n\t// Respnsive solutions.\n\t@if $flat-enabled or $scroll-enabled or $overflow-enabled {\n\t\t@include _oTableWrapper;\n\t\t@include _oTableContainer;\n\t}\n\t@if $overflow-enabled {\n\t\t@include _oTableResponsiveOverflow;\n\t}\n\t@if $flat-enabled {\n\t\t@include _oTableResponsiveFlat;\n\t}\n\t@if $scroll-enabled {\n\t\t@include _oTableResponsiveScroll;\n\t}\n\n\t// Lines.\n\t@if $lines-enabled {\n\t\t@include _oTableHorizontalLines;\n\t\t@include _oTableVerticalLines;\n\t\t@include _oTableHorizontalBorders;\n\t\t@include _oTableVerticalBorders;\n\t}\n\n\t// Compact.\n\t@if $compact-enabled and _oTableSupports('compact') {\n\t\t@include _oTableCompact;\n\t}\n\n\t// Stripes.\n\t@if $stripes-enabled and _oTableSupports('stripes') {\n\t\t@include _oTableRowStripes;\n\t}\n\n\t// Row headings.\n\t@if $row-headings-enabled and _oTableSupports('row-headings') {\n\t\t@include _oTableRowHeadings;\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-flat.scss",
      "contents": "/// Styles for a 'FlatTable'\n/// @access private\n@mixin _oTableResponsiveFlat {\n\t.o-table.o-table--responsive-flat {\n\t\twidth: 100%;\n\n\t\t.o-table__duplicate-heading {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\tdisplay: block;\n\n\t\t\ttd,\n\t\t\tth,\n\t\t\ttr {\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\ttr {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-flow: row wrap;\n\t\t\t\twidth: 100%;\n\t\t\t}\n\n\t\t\ttd {\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\tthead th {\n\t\t\t\tdisplay: none;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\tthead tr {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\ttbody tr:not(:first-child) {\n\t\t\t\tborder-top: 1px solid _oTableGet('table-data-color');\n\t\t\t}\n\n\t\t\t&.o-table--row-stripes tbody tr:nth-child(even) th, // Remove stripes when flat.\n\t\t\ttbody tr:nth-child(even) {\n\t\t\t\tbackground-color: _oTableGet('table-item-alternate-background', 'flat');\n\t\t\t}\n\n\t\t\t&.o-table--horizontal-lines th:not(:last-of-type),\n\t\t\t&.o-table--horizontal-lines td:not(:last-of-type), {\n\t\t\t\t// When flat, only show row border if a colour is defined.\n\t\t\t\t// Else the browser will use a black border.\n\t\t\t\t@if _oTableGet('table-border-color') {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__duplicate-heading {\n\t\t\t\tdisplay: block;\n\t\t\t\tfloat: left;\n\t\t\t\tpadding: 10px;\n\t\t\t\twidth: 50%;\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-overflow.scss",
      "contents": "/// Styles for an 'OverflowTable'\n/// @require _oTableContainer\n/// @require _oTableWrapper\n/// @access private\n@mixin _oTableResponsiveOverflow {\n\t@include _oTableOverflowControlsOverlay;\n\t@include _oTableOverflowFadeOverlay;\n}\n\n/// Styles for controls which overlay the table. Such as scroll forward/back buttons,\n/// and a \"show more\" button to expand/contract a table with many items.\n@mixin _oTableOverflowControlsOverlay {\n\t.o-table-overflow-control-overlay {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tpointer-events: none;\n\n\n\t\t.o-table-control {\n\t\t\tdisplay: inline-block;\n\t\t\tbackground: _oTableGet('table-background');\n\t\t\tpointer-events: all;\n\t\t\ttransition: 1s opacity ease-in-out;\n\t\t\tbutton {\n\t\t\t\t@include oButtons($size: 'big', $theme: 'primary');\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--expander {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\ttext-align: center;\n\t\t\tbutton {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward,\n\t\t.o-table-control--back {\n\t\t\t@supports (pointer-events: none)  {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: calc(50% - 20px);\n\t\t\t\ttransition: opacity 0.3s $o-visual-effects-transition-fade;\n\t\t\t}\n\t\t\tz-index: 1;\n\t\t}\n\n\t\t.o-table-control--back {\n\t\t\tleft: 0; //absolute\n\t\t\tfloat: left; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-left',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--forward {\n\t\t\tright: 0; //absolute\n\t\t\tfloat: right; //sticky\n\t\t\tmargin: 0 10px;\n\t\t\tbutton {\n\t\t\t\t@include oButtonsIconButton(\n\t\t\t\t\t$icon-name: 'arrow-right',\n\t\t\t\t\t$size: 'big',\n\t\t\t\t\t$theme: 'primary',\n\t\t\t\t\t$is-icon-only: true\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t.o-table-control--hide {\n\t\t\topacity: 0;\n\t\t}\n\n\t\t.o-table-control--sticky {\n\t\t\tposition: sticky;\n\t\t}\n\t}\n\n\t.o-table-overflow-control-overlay--arrow-dock {\n\t\t// Create area left/right for arrows to scroll into (\"dock\").\n\t\t&:after,\n\t\t&:before {\n\t\t\tposition: absolute;\n\t\t\tcontent: '';\n\t\t\tbottom: 0;\n\t\t\theight: 40px;\n\t\t\tpointer-events: none;\n\t\t\tborder-color: oButtonsGetColor('default', 'background', $theme: 'primary');\n\t\t\tborder-style: solid;\n\t\t\twidth: 1px;\n\t\t}\n\n\t\t&:before {\n\t\t\tleft: 0;\n\t\t\tborder-width: 0 40px 0 9px;\n\t\t}\n\n\t\t&:after {\n\t\t\tright: 0;\n\t\t\tborder-width: 0 9px 0 40px;\n\t\t}\n\n\t\t// Make more control leave space for arrows to dock left/right.\n\t\t.o-table-control--expander {\n\t\t\tleft: 51px;\n\t\t\tright: 51px;\n\t\t}\n\n\t\t// A modifier class which forces arrows to \"dock\" at the bottom of the overlay.\n\t\t.o-table-control--dock {\n\t\t\ttop: auto;\n\t\t\tbottom: 0;\n\t\t}\n\t}\n}\n\n/// Styles to show scroll and expander fade out.\n@mixin _oTableOverflowFadeOverlay {\n\t.o-table-overflow-fade-overlay {\n\t\t@supports (pointer-events: none) {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n\n\t// Show horizontal fade when the table is scrolled.\n\t.o-table-overflow-fade-overlay--scroll {\n\t\t@if _oTableGet('table-background') {\n\t\t\tbackground: linear-gradient(to right, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-start)),\n\t\t\tlinear-gradient(to left, _oTableGet('table-background') 2px, rgba(_oTableGet('table-background'), 0) var(--o-table-fade-from-end));\n\t\t}\n\t}\n\n\t// Show vertical fade when the table is contracted.\n\t.o-table-container--contracted .o-table-overflow-fade-overlay:after {\n\t\t@if _oTableGet('table-background') {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\theight: 80px;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\tbackground: linear-gradient(to top, _oTableGet('table-background') 30px, rgba(_oTableGet('table-background'), 0) 80px);\n\t\t\tpointer-events: none;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_responsive-scroll.scss",
      "contents": "/// Styles for a 'ScrollTable'\n/// @access private\n@mixin _oTableResponsiveScroll {\n\t.o-table--responsive-scroll {\n\n\t\t.o-table__duplicate-row {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t@include oGridRespondTo($until: S) {\n\t\t\t// Remove standard border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:first-child) {\n\t\t\t\tborder: 0;\n\t\t\t}\n\n\t\t\t// Add responsive border.\n\t\t\t&.o-table--horizontal-lines .o-table__duplicate-row:not(:last-child) {\n\t\t\t\ttd {\n\t\t\t\t\tborder-bottom: 1px solid _oTableGet('table-border-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttr:not(.o-table__duplicate-row) {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.o-table__duplicate-row {\n\t\t\t\tdisplay: table-row;\n\t\t\t}\n\n\t\t\tth {\n\t\t\t\tposition: sticky;\n\t\t\t\tleft: 0;\n\t\t\t\tbackground-color: _oTableGet('table-background');\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.o-table__cell--numeric {\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_row-headings.scss",
      "contents": "/// @brand internal\n/// @outputs Highlights table headings.\n/// @access private\n@mixin _oTableRowHeadings() {\n\t.o-table--row-headings > tbody th {\n\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\tborder-right: 2px solid _oTableGet('table-data-color');\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_row-stripes.scss",
      "contents": "/// Add this to the table element to get row stripes\n/// @access private\n@mixin _oTableRowStripes() {\n\t.o-table--row-stripes {\n\t\tbackground-color: _oTableGet('table-background');\n\n\t\tcaption {\n\t\t\tbackground-color: _oTableGet('table-background');\n\t\t}\n\n\t\ttbody tr:nth-child(even) {\n\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\tth {\n\t\t\t\t// For sticky \"responsive-scroll\" headers.\n\t\t\t\tbackground-color: _oTableGet('table-alternate-background');\n\t\t\t}\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_sort.scss",
      "contents": "/// Tables styles to support sort buttons.\n/// @access private\n@mixin _oTableSort {\n\n\t.o-table--sortable thead th:not([data-o-table-heading-disable-sort]) {\n\t\tpadding-right: 0; // No header padding with a child sort icon.\n\t}\n\n\t// Sort button.\n\t.o-table__sort {\n\t\t// sass-lint:disable no-vendor-prefixes\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-moz-appearance: none;\n\t\t-webkit-appearance: none;\n\t\t// sass-lint:enable no-vendor-prefixes\n\t\tbackground: none;\n\t\tcolor: inherit;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tfont: inherit;\n\t\tcursor: pointer;\n\t\tuser-select: none;\n\t\tpadding-right: 20px;\n\t\tmin-width: 60px;\n\t\ttext-align: left;\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrows-up-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tcontent: '';\n\t\t\tmargin-right: -20px;\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show descending icon in sort button with DSC sort applied.\n\t[aria-sort].o-table-sorting-descending .o-table__sort,\n\t[aria-sort='descending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-down', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n\n\t// Show ascending icon in sort button with ascending sort applied or on hover with no sort.\n\t[aria-sort].o-table-sorting-ascending .o-table__sort,\n\tth[aria-sort='none']:hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\tth:not([aria-sort]):hover .o-table__sort, // sass-lint:disable-line no-qualifying-elements\n\t[aria-sort='ascending'] .o-table__sort {\n\t\t&:after {\n\t\t\t@include oIconsGetIcon('arrow-up', $container-width: 20,  $container-height: 20, $iconset-version: 1);\n\t\t\tvertical-align: middle;\n\t\t}\n\t}\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "src/scss/_wrapper.scss",
      "contents": "/// Styles for a table wrapper to allow table to overflow.\n/// The wrapped table becomes scrollable on small viewports.\n/// @access private\n@mixin _oTableWrapper {\n\t.o-table-scroll-wrapper {\n\t\toverflow-y: hidden;\n\t\toverflow-x: auto;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\t-webkit-overflow-scrolling: touch; //sass-lint:disable-line no-vendor-prefixes\n\t}\n\n\t.o-table-overlay-wrapper {\n\t\tposition: relative;\n\t}\n}\n\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/BaseTable.test.js",
      "contents": "/* eslint-env mocha, sinon */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BaseTable\", () => {\n  let oTableEl;\n  let table;\n\n  const click = element => {\n    const click = document.createEvent('MouseEvent');\n    click.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    oTableEl.querySelector(element).dispatchEvent(click);\n  };\n\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    table = new BaseTable(oTableEl, sorter);\n  });\n  describe('addSortButtons', () => {\n    it('adds buttons in the table column headers', done => {\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const thead = oTableEl.querySelector('thead');\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.equal(sortButtons.length, 5, 'Expected 5 buttons, 1 within each of the 5 column headers.');\n          sortButtons.forEach(button => {\n            proclaim.include(button.getAttribute('title'), 'sort', 'Expected each header sort button to have a \"title\" which indicates sort. \"title\" is currently used over \"aria-label\" as \"aria-label\" is read in VoiceOver when moving across columns of the body.');\n            proclaim.notEqual(button.textContent, '', 'Expected each header sort button to have content.');\n          });\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('does not add sort button to column header with attribute \"data-o-table-heading-disable-sort\"', done => {\n      const thead = oTableEl.querySelector('thead'); // Disable sort on first column.\n\n      const firstColumnHeading = thead.querySelector('th');\n      firstColumnHeading.setAttribute('data-o-table-heading-disable-sort', true); // Add buttons.\n\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.isNull(firstColumnHeading.querySelector('button'), 'Found a sort button within a column heading with sort disabled.');\n          proclaim.equal(sortButtons.length, 4, 'Expected 4 buttons, 1 within each of the 5 column headers except for the first column which has sort disabled.');\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('does not add any sort button to column headers when table has \"data-o-table-sortable\" set to false', done => {\n      // Disable sort.\n      oTableEl.setAttribute('data-o-table-sortable', false); // Try to add sort buttons.\n\n      table = new BaseTable(oTableEl, sorter); // re-init table now data att is set\n\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          const thead = oTableEl.querySelector('thead');\n          const sortButtons = thead.querySelectorAll('button');\n          proclaim.equal(sortButtons.length, 0, 'Expected to find no sort buttons when table has been set to non-sortable.');\n        } catch (error) {\n          done(error);\n        } finally {\n          done();\n        }\n      }, 100);\n    });\n    it('buttons toggle column sort with header button click (ascending first)', done => {\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.addSortButtons();\n      setTimeout(() => {\n        try {\n          click('thead th button');\n          proclaim.isTrue(sorterSpy.calledWith(table, 0, 'ascending'), 'Expected the table to be sorted \"ascending\" on first click of the header button.');\n        } catch (error) {\n          sorterSpy.restore();\n          done(error);\n        }\n\n        setTimeout(() => {\n          try {\n            click('thead th button');\n            proclaim.isTrue(sorterSpy.calledWith(table, 0, 'descending'), 'Expected the table to be sorted \"descending\" on second click of the header button.');\n          } catch (error) {\n            sorterSpy.restore();\n            done(error);\n          } finally {\n            sorterSpy.restore();\n            done();\n          }\n        }, 100);\n      }, 100);\n    });\n  });\n  describe('sortRowsByColumn', () => {\n    it('sorts a given column in descending order', () => {\n      const columnIndex = 1;\n      const sortOrder = 'descending';\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(columnIndex, sortOrder);\n      proclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n      sorterSpy.restore();\n    });\n    it('sorts a given column in ascending order', () => {\n      const columnIndex = 1;\n      const sortOrder = 'ascending';\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(columnIndex, sortOrder);\n      proclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n      sorterSpy.restore();\n    });\n    it('can be intercepted using the `oTable.sorting` event for a custom sort implementation', () => {\n      // Prevent sorting for custom implementation.\n      oTableEl.addEventListener('oTable.sorting', event => {\n        event.preventDefault();\n      }); // Check sort is intercepted performed.\n\n      const sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n      table.sortRowsByColumn(0, 'ascending');\n      proclaim.isTrue(sorterSpy.notCalled, 'Default table sorter was called.');\n      sorterSpy.restore();\n    });\n    it('errors if no column index is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(undefined, 'descending');\n      }, /Could not find header for column index/);\n    });\n    it('errors if an invalid column index is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn('not a column index', 'descending');\n      }, /Could not find header for column index/);\n    });\n    it('errors if no sort order is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(1, undefined);\n      }, /Sort order/);\n    });\n    it('errors if an invalid sort order is provided', () => {\n      proclaim.throws(() => {\n        table.sortRowsByColumn(1, 'not a sort order');\n      }, /Sort order/);\n    });\n  });\n  describe('getTableHeader', () => {\n    it('gets a th element for a given column index', () => {\n      const thead = oTableEl.querySelector('thead');\n      const tableHeaders = thead.querySelectorAll('th');\n      tableHeaders.forEach((expectedHeader, index) => {\n        const actualHeader = table.getTableHeader(index);\n        proclaim.equal(actualHeader, expectedHeader, `Did not get the expected th element for column index \"${index}\".`);\n      });\n    });\n    it('errors when getting a th element for a non-existent column', () => {\n      proclaim.throws(() => {\n        table.getTableHeader(1001);\n      }, /Could not find header for column index/);\n    });\n  });\n  describe('sorted', () => {\n    it('fires the oTable.sorted event with column index and sort order', done => {\n      const columnIndex = 1;\n      const sortOrder = 'ascending'; // Expecting a sorted event.\n\n      document.addEventListener('oTable.sorted', event => {\n        try {\n          proclaim.equal(event.detail.instance, table, 'Expected event detail to include the o-table instance which fired the event.');\n          proclaim.equal(event.detail.sortOrder, sortOrder, `Expected event detail to include the sort order.`);\n          proclaim.equal(event.detail.columnIndex, columnIndex, `Expected event detail to include the column index.`);\n        } catch (error) {\n          done(error);\n        }\n\n        done();\n      });\n\n      try {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      } catch (error) {\n        done(error);\n      }\n    });\n    it('errors if no column index is provided', () => {\n      const columnIndex = undefined;\n      const sortOrder = 'ascending';\n      proclaim.throws(() => {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      }, /column index/);\n    });\n    it('errors if no sort order is provided', () => {\n      const columnIndex = 1;\n      const sortOrder = undefined;\n      proclaim.throws(() => {\n        table.sorted({\n          columnIndex,\n          sortOrder\n        });\n      }, /sort order/);\n    });\n  });\n  describe('destroy', () => {\n    it('removes sort button event listeners', () => {\n      // Mock removeEventListener\n      const realRemoveEventListener = Element.prototype.removeEventListener;\n      const removeEventListenerSpy = sinon.spy();\n      Element.prototype.removeEventListener = removeEventListenerSpy; // Call destroy\n\n      table.destroy(); // Test sort button event listeners removed.\n\n      try {\n        const thead = document.querySelector('thead');\n        const buttons = thead.querySelectorAll('button');\n        buttons.forEach(button => {\n          proclaim.isTrue(removeEventListenerSpy.calledOn(button), 'Remove event listener was not called on all heading sort buttons.');\n        });\n      } finally {\n        // Restore mocks before calling done.\n        Element.prototype.removeEventListener = realRemoveEventListener;\n      }\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/BasicTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport BasicTable from \"../dist/js/Tables/BasicTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BasicTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new BasicTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new BasicTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('adds sort buttons', done => {\n    const addSortSpy = sinon.spy(BasicTable.prototype, \"addSortButtons\");\n    new BasicTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        proclaim.isTrue(addSortSpy.calledOnce);\n      } catch (error) {\n        done(error);\n      }\n\n      addSortSpy.restore();\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/FlatTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport FlatTable from \"../dist/js/Tables/FlatTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"FlatTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    oTableEl.classList.add('o-table--responsive-flat');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new FlatTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new FlatTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('clones all headings into each row, so each cell has a row heading', done => {\n    const table = new FlatTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        proclaim.equal(table.tableRows.length, 5, `Expected to find 5 table rows.`);\n        table.tableRows.forEach(row => {\n          const duplicateHeadingClass = '.o-table__duplicate-heading';\n          const duplicateHeadings = row.querySelectorAll(`${duplicateHeadingClass}[scope=\"row\"][role=\"rowheader\"]`);\n          proclaim.equal(duplicateHeadings.length, 5, `Expected table rows to contain a clone of all headings,  with class \"${duplicateHeadingClass}\", scope=\"row\", and role=\"rowheader\".`);\n        });\n      } catch (error) {\n        done(error);\n      }\n\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/OverflowTable.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport OverflowTable from \"../dist/js/Tables/OverflowTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\n\nfunction expandable(oTableEl, {\n  minimumRowCount,\n  expanded\n}) {\n  oTableEl.setAttribute('data-o-table-expanded', expanded);\n  oTableEl.setAttribute('data-o-table-minimum-row-count', minimumRowCount);\n}\n\nfunction noTableWrapperOrContainer(oTableEl) {\n  sandbox.setContents(oTableEl.outerHTML);\n  return document.querySelector('[data-o-component=o-table]');\n}\n\nfunction canScrollTable() {\n  document.documentElement.style.width = '340px';\n}\n\nfunction scrollTable(oTableEl, {\n  toEnd\n}) {\n  const wrapper = oTableEl.closest('.o-table-scroll-wrapper');\n  const scrollTo = toEnd ? oTableEl.getBoundingClientRect().width : 0;\n  setTimeout(() => {\n    wrapper.scrollLeft = scrollTo;\n  }, 50);\n}\n\nfunction canScrollPastTable() {\n  document.documentElement.style['padding-bottom'] = '10000px';\n}\n\nfunction scrollPastTable() {\n  document.documentElement.scrollTop = document.documentElement.getBoundingClientRect().height;\n}\n\nfunction forceExpandedTableTallerThanViewport(oTableEl) {\n  const viewportHeight = document.documentElement.clientHeight;\n  const tableHeight = oTableEl.getBoundingClientRect().height;\n\n  if (tableHeight < viewportHeight) {\n    oTableEl.style.height = `${viewportHeight * 2}px`;\n  }\n\n  return oTableEl;\n}\n\nfunction assertBackButton({\n  disabled,\n  visuallyHidden,\n  sticky,\n  docked\n}) {\n  const backElement = document.querySelector('.o-table-control--back');\n  const backButton = backElement.querySelector('button');\n  proclaim.equal(backElement.classList.contains('o-table-control--hide'), visuallyHidden, `Back button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n  proclaim.equal(backButton.hasAttribute('disabled'), disabled, `Back button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\n  if (sticky !== undefined) {\n    proclaim.equal(backElement.classList.contains('o-table-control--sticky'), sticky, `Back button is ${sticky ? 'not sticky' : 'sticky'}.`);\n  }\n\n  if (docked !== undefined) {\n    proclaim.equal(backElement.classList.contains('o-table-control--dock'), sticky, `Back button is ${docked ? 'not docked' : 'docked'}.`);\n  }\n}\n\nfunction assertForwardButton({\n  disabled,\n  visuallyHidden,\n  sticky,\n  docked\n}) {\n  const forwardElement = document.querySelector('.o-table-control--forward');\n  const forwardButton = forwardElement.querySelector('button');\n  proclaim.equal(forwardElement.classList.contains('o-table-control--hide'), visuallyHidden, `Forward button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n  proclaim.equal(forwardButton.hasAttribute('disabled'), disabled, `Forward button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\n  if (sticky !== undefined) {\n    proclaim.equal(forwardElement.classList.contains('o-table-control--sticky'), sticky, `Forward button is ${sticky ? 'not sticky' : 'sticky'}.`);\n  }\n\n  if (docked !== undefined) {\n    proclaim.equal(forwardElement.classList.contains('o-table-control--dock'), sticky, `Forward button is ${docked ? 'not docked' : 'docked'}.`);\n  }\n}\n\nfunction assertExpanded(table, {\n  expanded,\n  minimumRowCount\n}) {\n  expanded = typeof expanded === 'boolean' ? expanded : true;\n  minimumRowCount = minimumRowCount || 20;\n  const expectedButtonContent = expanded ? 'show fewer' : 'show more';\n  const expectedAriaExpanded = expanded ? 'true' : 'false';\n  const expectedHidden = expanded ? 0 : table.tableRows.length - minimumRowCount;\n  const wrapperHeightCorrect = table.wrapper.style.height === '' && expanded || table.wrapper.style.height !== '' && !expanded;\n  proclaim.include(table.container.innerHTML.toLowerCase(), expectedButtonContent, `Expected to see \"${expectedButtonContent}\" within an expanded table.`);\n  proclaim.isTrue(table.rootEl.getAttribute('aria-expanded') === expectedAriaExpanded, `Expected to see \\'aria-expanded=\"${expectedAriaExpanded}\"\\' on an expanded table.`);\n  proclaim.equal(table.tbody.querySelectorAll('tr[aria-hidden=\"true\"]').length, expectedHidden, `Expected ${expectedHidden} table rows to be hidden in an expanded table,`);\n  proclaim.isTrue(wrapperHeightCorrect, `Expect the table wrapper to ${expanded ? 'not have' : 'have'} a set height to hide rows visually.`);\n}\n\ndescribe(\"OverflowTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    document.documentElement.style['padding-bottom'] = '';\n    document.documentElement.style.width = '';\n    sandbox.setContents(fixtures.longTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new OverflowTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new OverflowTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  describe(\"expandable feature\", () => {\n    it(\"errors if there is not a container element and expander enabled\", done => {\n      oTableEl = noTableWrapperOrContainer(oTableEl);\n      expandable(oTableEl, {\n        expanded: false\n      });\n\n      window.onerror = function (message, file, line, col, error) {\n        proclaim.include(error.message, 'container', 'Expected an error when a table is configured to be expandable but has no container element.');\n        window.onerror = null;\n        done();\n        return true;\n      };\n\n      new OverflowTable(oTableEl, sorter);\n    });\n    it(\"is not enabled by default\", () => {\n      const table = new OverflowTable(oTableEl, sorter);\n      proclaim.isFalse(table.canExpand());\n    });\n    it(\"can be configured to be expanded by default\", done => {\n      expandable(oTableEl, {\n        expanded: true\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"can be configured to be contracted by default\", done => {\n      expandable(oTableEl, {\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"can toggle between expanded and contracted programmatically when expandable\", done => {\n      expandable(oTableEl, {\n        expanded: true\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      table.contractTable();\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false\n        });\n        table.expandTable();\n        setTimeout(() => {\n          assertExpanded(table, {\n            expanded: true\n          });\n          done();\n        }, 500);\n      }, 500);\n    });\n    it(\"can configure the number of rows to contract to\", done => {\n      expandable(oTableEl, {\n        minimumRowCount: 2,\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertExpanded(table, {\n          expanded: false,\n          minimumRowCount: 2\n        });\n        done();\n      }, 100);\n    });\n    it(\"is not used if the number of rows to contract to is larger than the table\", done => {\n      expandable(oTableEl, {\n        minimumRowCount: 200,\n        expanded: false\n      });\n      const table = new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isFalse(table.canExpand());\n        proclaim.isFalse(table.rootEl.hasAttribute('aria-expanded'), `Did not expect \"aria-expanded\" on a table which can not expand.`);\n        done();\n      }, 100);\n    });\n  });\n  describe(\"scroll controls\", () => {\n    beforeEach(() => {\n      canScrollTable();\n    });\n    it(\"are not added if there are no wrapper and container elements\", done => {\n      oTableEl = noTableWrapperOrContainer(oTableEl);\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isNull(oTableEl.querySelector('.o-table-control--forward'), 'Did not expect to find a forward button.');\n        proclaim.isNull(oTableEl.querySelector('.o-table-control--back'), 'Did not expect to find a back button.');\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are added given wrapper and container elements\", done => {\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        proclaim.isNotNull(document.querySelector('.o-table-control--forward'), 'Did not find forward button.');\n        proclaim.isNotNull(document.querySelector('.o-table-control--back'), 'Did not find back button.');\n        done();\n      }, 100);\n    });\n    it(\"backward button is disabled and visualy hidden at the start of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.init();\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward button is disabled and visualy hidden at the end of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      scrollTable(oTableEl, {\n        toEnd: true\n      });\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"backward button is disabled but visible at the start of the table, when the table can be scrolled past\", done => {\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward button is disabled but visible at the end of the table, when the table can be scrolled past\", done => {\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      scrollTable(oTableEl, {\n        toEnd: true\n      });\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are sticky and hidden when the table is scrolled past\", done => {\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          visuallyHidden: true,\n          sticky: true\n        });\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true,\n          sticky: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"forward / backward buttons are not sticky when the table can not be scrolled past\", done => {\n      // reset sandbox to use a table smaller than the viewport\n      sandbox.setContents(fixtures.shortTableWithContainer);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start of the table\n          visuallyHidden: true,\n          // hidden as at the start of the table\n          sticky: false\n        });\n        assertForwardButton({\n          disabled: false,\n          visuallyHidden: false,\n          sticky: false\n        });\n        done();\n      }, 100);\n    });\n  });\n  describe(\"control dock\", () => {\n    function assertDock(hasDock) {\n      const controlOverlay = document.querySelector('.o-table-overflow-control-overlay');\n      proclaim.equal(controlOverlay.classList.contains('o-table-overflow-control-overlay--arrow-dock'), hasDock, `Table control overlay does ${hasDock ? 'not have a control dock' : 'has a control dock'}.`);\n    }\n\n    it(\"is added given the table is scrollable, expandable, and can be scrolled past\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: true\n      });\n      forceExpandedTableTallerThanViewport(oTableEl);\n      canScrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(true);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is smaller than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes a contracted table is smaller than the viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"is added if the table is smaller than the viewport and can be scrolled past\", done => {\n      canScrollTable();\n      canScrollPastTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes a contracted table is smaller than the viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(true);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is not scrollable\", done => {\n      expandable(oTableEl, {\n        expanded: false\n      });\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"is not added given the table is not expandable\", done => {\n      canScrollTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertDock(false);\n        done();\n      }, 100);\n    });\n    it(\"scroll controls are not sticky and instead \\\"dock\\\" given the dock exists and the table is shorter than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        minimumRowCount: 3,\n        expanded: false\n      }); // assumes non-expanded table is shorter than viewport\n\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: false,\n          visuallyHidden: false,\n          sticky: false,\n          dock: true\n        });\n        done();\n      }, 100);\n    });\n    it(\"scroll controls do not \\\"dock\\\" if the dock does not exist\", done => {\n      canScrollTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: true,\n          // hidden as at the start and not in a dock\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"scroll controls do not \\\"dock\\\" when the table is taller than the viewport\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: true\n      });\n      forceExpandedTableTallerThanViewport(oTableEl);\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: true,\n          // hidden as at the start and not in a dock\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"sticky scroll controls are visually hidden when scrolling past a table with no \\\"dock\\\".\", done => {\n      canScrollTable();\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertForwardButton({\n          disabled: true,\n          visuallyHidden: true,\n          // hidden as scrolled past the table\n          sticky: true,\n          dock: false\n        });\n        done();\n      }, 100);\n    });\n    it(\"sticky scroll controls remain visible when scrolling past a table with a \\\"dock\\\".\", done => {\n      canScrollTable();\n      expandable(oTableEl, {\n        expanded: false\n      });\n      canScrollPastTable();\n      scrollPastTable();\n      new OverflowTable(oTableEl, sorter);\n      setTimeout(() => {\n        assertBackButton({\n          disabled: true,\n          // disabled as at the start\n          visuallyHidden: false,\n          // visible in dock (does not scroll off table)\n          sticky: true,\n          dock: true\n        });\n        done();\n      }, 100);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/ScrollTable.test.js",
      "contents": "/* eslint-env mocha */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport ScrollTable from \"../dist/js/Tables/ScrollTable\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport TableSorter from \"../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"ScrollTable\", () => {\n  let oTableEl;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n    oTableEl.classList.add('o-table--responsive-scroll');\n  });\n  it('it fires an \"oTable.ready\" event when constructed', done => {\n    window.addEventListener('oTable.ready', function () {\n      done();\n    });\n    new ScrollTable(oTableEl, sorter);\n  });\n  it('it extends BaseTable', () => {\n    const table = new ScrollTable(oTableEl, sorter);\n    proclaim.isInstanceOf(table, BaseTable);\n  });\n  it('clones column data into a new row with row header', done => {\n    new ScrollTable(oTableEl, sorter);\n    setTimeout(() => {\n      try {\n        const duplicateRowClass = '.o-table__duplicate-row';\n        const duplicateRows = document.querySelectorAll(duplicateRowClass);\n        proclaim.equal(duplicateRows.length, 5, `Expected to find 5 rows with duplicate data and class \"${duplicateRowClass}\".`);\n        duplicateRows.forEach(row => {\n          const duplicateHeadings = row.querySelectorAll('th[scope=\"row\"][role=\"rowheader\"]');\n          proclaim.equal(duplicateHeadings.length, 1, `Expected to find a row heading within the rows of duplicate data, with scope=\"row\" and role=\"rowheader\".`);\n        });\n      } catch (error) {\n        done(error);\n      }\n\n      done();\n    }, 2); // wait for window.requestAnimationFrame\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/Sort/TableSorter.test.js",
      "contents": "/* eslint-env mocha, sinon */\nimport proclaim from \"proclaim\";\nimport sinon from \"sinon/pkg/sinon\";\nimport * as sandbox from \"../helpers/sandbox\";\nimport BaseTable from \"../../dist/js/Tables/BaseTable\";\nimport FlatTable from \"../../dist/js/Tables/FlatTable\";\nimport TableSorter from \"../../dist/js/Sort/TableSorter\";\nconst sorter = new TableSorter();\ndescribe(\"BaseTable\", () => {\n  let oTableEl;\n  let table;\n  beforeEach(() => {\n    sandbox.init();\n  });\n\n  function assertSortOrder({\n    sortOrder,\n    columnIndex,\n    expected\n  }) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        try {\n          const tbody = oTableEl.querySelector('tbody');\n          const thead = oTableEl.querySelector('thead'); // Assert correct sort order.\n\n          const tableRows = tbody.querySelectorAll('tr');\n\n          if (tableRows.length === 0) {\n            throw new Error('Could not find rows to test against.');\n          }\n\n          tableRows.forEach((row, index) => {\n            const cells = row.querySelectorAll('td,th:not(.o-table__duplicate-heading)');\n            proclaim.equal(cells[columnIndex].innerHTML, expected[index], `Expected a sort order of \"${expected}\".`);\n          }); // Assert correct aria labels.\n\n          const tableHeaders = thead.querySelectorAll('th');\n\n          if (tableHeaders.length === 0) {\n            throw new Error('Could not find column headers to test against.');\n          }\n\n          tableHeaders.forEach((tableHeader, index) => {\n            if (index === columnIndex) {\n              proclaim.equal(tableHeader.getAttribute('aria-sort'), sortOrder, `Expected column header to have aria-sort=\"${sortOrder}\".`);\n            } else {\n              proclaim.equal(tableHeader.getAttribute('aria-sort'), 'none', `Expected the non-sorted column headers to have aria-sort=\"none\".`);\n            }\n          });\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }, 100); // wait for sort and window.requestAnimationFrame to update sort order\n    });\n  }\n\n  describe('sortRowsByColumn', () => {\n    function getTableElementWithData(type, dataArray) {\n      const markup = `\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"${type}\">Test Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t${dataArray.map(data => `<tr><td>${data}</td></tr>`).join('')}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n      sandbox.setContents(markup);\n      return document.querySelector('[data-o-component=o-table]');\n    }\n\n    it('sorts strings alphabetically with no type specified ascending', done => {\n      oTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Apple', 'Dragonfruit', 'Durian', 'Naseberry', 'Strawberry'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts strings alphabetically with no type specified descending', done => {\n      oTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['Strawberry', 'Naseberry', 'Durian', 'Dragonfruit', 'Apple'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts localised strings alphabetically', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Æ', 'apple', 'café', 'caffeine'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts localised strings alphabetically when the Intl.Collator API is not available', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['Æ', 'apple', 'café', 'caffeine']; // Remove global.Intl\n\n      const intlBackup = Intl;\n      delete global.Intl;\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      let error;\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(err => {\n        error = err;\n      }).finally(() => {\n        global.Intl = intlBackup; // Retore global.Intl\n\n        done(error);\n      });\n    });\n    it('sorts \"number\" type ascending', done => {\n      oTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5', '1.5', '1.75', '2', '3'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"number\" type descending', done => {\n      oTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['3', '2', '1.75', '1.5', '0.5'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"numeric\" type ascending', done => {\n      oTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5', '1.5', '1.75', '2', '3'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"numeric\" type descending', done => {\n      oTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['3', '2', '1.75', '1.5', '0.5'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"percent\" type descending', done => {\n      oTableEl = getTableElementWithData('percent', ['1.5%', '0.5%', '2%', '50%']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['50%', '2%', '1.5%', '0.5%'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"date\" type with FT style time descending', done => {\n      oTableEl = getTableElementWithData('date', ['7pm', '7am', '6.30am', '6.30pm']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'descending';\n      const expected = ['7pm', '6.30pm', '7am', '6.30am'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"date\" type with FT style dates and time ascending', done => {\n      // assumes current year where not specified\n      oTableEl = getTableElementWithData('date', ['August 17', 'September 12 2012', 'January 2012', 'March 12 2015 1am', 'April 20 2014 3.30am', 'April 20 2014 2.30pm']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['January 2012', 'September 12 2012', 'April 20 2014 3.30am', 'April 20 2014 2.30pm', 'March 12 2015 1am', 'August 17'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts abbreviated type \"currency\" ascending', done => {\n      // assumes current year where not specified\n      oTableEl = getTableElementWithData('currency', ['E£5', '€5.46', 'CFA Fr830', 'DKr10', '£4', 'HK$12', '$140', '￥155', 'Rmb100bn', '13 colons', 'Rp3,400']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['£4', 'E£5', '€5.46', 'DKr10', 'HK$12', '13 colons', '$140', '￥155', 'CFA Fr830', 'Rp3,400', 'Rmb100bn'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts from \"<span>\", \"<a>\", \"<i>\" tags and \"<img>\" tag \"alt\" attributes', done => {\n      oTableEl = getTableElementWithData('', ['<a href=\"#\">y</a>', '<span><a href=\"#\">v</a></span>', '<i class=\"o-icons-icon\">x</i>', '<img src=\"#\" alt=\"w\">', '<span>z</span>']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['<span><a href=\"#\">v</a></span>', '<img src=\"#\" alt=\"w\">', '<i class=\"o-icons-icon\">x</i>', '<a href=\"#\">y</a>', '<span>z</span>'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts from \"aria-label\" or \"title\" of \"<span>\", \"<a>\", or \"<i>\" tags if they have no content', done => {\n      oTableEl = getTableElementWithData('', ['<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>', '<span class=\"o-icons-icon o-icons-icon--tick\">e</span>', '<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>', '<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>', '<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>', '<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>', '<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>', '<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>', '<span class=\"o-icons-icon o-icons-icon--tick\">e</span>'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts \"n/a\" and \"-\" as if empty cells (first in ascending order)', done => {\n      oTableEl = getTableElementWithData('', ['café', 'apple', 'N/A', 'n.a.', '-', '', 'caffeine', 'Æ']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['N/A', 'n.a.', '-', '', 'Æ', 'apple', 'café', 'caffeine'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts non-numeric fields in a \"numeric\" column first when ascending', done => {\n      oTableEl = getTableElementWithData('numeric', ['9', '', '0.5', 'Some Non-Numeric Text', 'N/A', '300', '-']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['', 'N/A', '-', 'Some Non-Numeric Text', '0.5', '9', '300'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts ranges, using the value before a dash or en-dash', done => {\n      oTableEl = getTableElementWithData('numeric', ['1-3', '10-21', '0.5-200']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['0.5-200', '1-3', '10-21'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts ignoring any duplicate headings of the FlatTable', done => {\n      // Issue: https://github.com/Financial-Times/o-table/pull/106\n      oTableEl = getTableElementWithData('numeric', ['3', '1', '999', '2']);\n      table = new FlatTable(oTableEl, sorter); // Flat table duplicates headings within rows.\n\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['1', '2', '3', '999'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts by attribute \"data-o-table-sort-value\" value if set', done => {\n      sandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"c\">snowman</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"a\">42</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"b\">pangea</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['42', 'pangea', 'snowman'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts row headers', done => {\n      sandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t\t<th>Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">c</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">a</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">b</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n      oTableEl = document.querySelector('[data-o-component=o-table]');\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['a', 'b', 'c'];\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('sorts custom data types according to a given formatter', done => {\n      oTableEl = getTableElementWithData('emoji-time', ['🌑', '🌤', '🌑', '🌤']);\n      table = new BaseTable(oTableEl, sorter);\n      const columnIndex = 0;\n      const sortOrder = 'ascending';\n      const expected = ['🌑', '🌑', '🌤', '🌤'];\n      sorter.setCellFormatterForType('emoji-time', cell => {\n        const text = cell.textContent.trim();\n\n        if (text === '🌑') {\n          return 1;\n        }\n\n        if (text === '🌤') {\n          return 2;\n        }\n\n        return 0;\n      });\n      sorter.sortRowsByColumn(table, columnIndex, sortOrder);\n      assertSortOrder({\n        sortOrder,\n        columnIndex,\n        expected\n      }).catch(done).finally(done);\n    });\n    it('calls the table\\'s \"sorted\" method', done => {\n      oTableEl = getTableElementWithData('numeric', ['1', '3', '2']);\n      table = new BaseTable(oTableEl, sorter);\n      const sortedSpy = sinon.spy(table, 'sorted');\n      sorter.sortRowsByColumn(table, 0, 'ascending');\n      setTimeout(() => {\n        let error;\n\n        try {\n          proclaim.isTrue(sortedSpy.calledWith({\n            columnIndex: 0,\n            sortOrder: 'ascending'\n          }));\n          sortedSpy.restore();\n        } catch (err) {\n          error = err;\n        } finally {\n          done(error);\n        }\n      }, 100);\n    });\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/fixtures.js",
      "contents": "const longTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\nconst shortTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\nexport { longTableWithContainer, shortTableWithContainer };"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/helpers/sandbox.js",
      "contents": "let sandboxEl;\nexport function init() {\n  if (document.querySelector('.sandbox')) {\n    sandboxEl = document.querySelector('.sandbox');\n  } else {\n    sandboxEl = document.createElement('div');\n    sandboxEl.classList.add('sandbox');\n    document.body.appendChild(sandboxEl);\n  }\n}\nexport function reset() {\n  while (sandboxEl.firstChild) {\n    sandboxEl.removeChild(sandboxEl.firstChild);\n  }\n}\nexport function setContents(html) {\n  sandboxEl.innerHTML = html;\n}"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test/oTable.test.js",
      "contents": "/* eslint-env mocha, proclaim */\nimport proclaim from \"proclaim\";\nimport * as sandbox from \"./helpers/sandbox\";\nimport * as fixtures from \"./helpers/fixtures\";\nimport OTable from \"../browser\";\nimport BaseTable from \"../dist/js/Tables/BaseTable\";\nimport OverflowTable from \"../dist/js/Tables/OverflowTable\";\nimport FlatTable from \"../dist/js/Tables/FlatTable\";\nimport ScrollTable from \"../dist/js/Tables/ScrollTable\";\nimport BasicTable from \"../dist/js/Tables/BasicTable\";\ndescribe('OTable constructs', () => {\n  let oTableEl;\n  let testOTable;\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(fixtures.shortTableWithContainer);\n    oTableEl = document.querySelector('[data-o-component=o-table]');\n  });\n  afterEach(() => {\n    testOTable = undefined;\n    sandbox.reset();\n    oTableEl = undefined;\n  });\n  it('a ScrollTable when the table has attribute data-o-table-responsive=\"scroll\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'scroll');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, ScrollTable);\n  });\n  it('an OverflowTable when the table has attribute data-o-table-responsive=\"overflow\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'overflow');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, OverflowTable);\n  });\n  it('a FlatTable when the table has attribute data-o-table-responsive=\"flat\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', 'flat');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, FlatTable);\n  });\n  it('a BasicTable when the table has attribute data-o-table-responsive=\"\"', () => {\n    oTableEl.setAttribute('data-o-table-responsive', '');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, BasicTable);\n  });\n  it('a BasicTable when the table does not have the data-o-table-responsive attribute', () => {\n    oTableEl.removeAttribute('data-o-table-responsive');\n    testOTable = new OTable(oTableEl);\n    proclaim.isInstanceOf(testOTable, BasicTable);\n  });\n});\ndescribe('Init', () => {\n  beforeEach(() => {\n    sandbox.init();\n    sandbox.setContents(`\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t`);\n  });\n  afterEach(() => {\n    sandbox.reset();\n  });\n  it('instantiates every o-table in the document', () => {\n    const tables = OTable.init();\n    proclaim.equal(tables instanceof Array, true, 'init did not return an array of tables.');\n    proclaim.equal(tables.length, 3, 'init did not return the expected number of tables.');\n    proclaim.equal(tables[0] instanceof BaseTable, true, 'a table returned did not extend BaseTable.');\n  });\n  it('instantiates a single o-table for a given selector which returns one table', () => {\n    const firstTable = document.querySelector('.o-table');\n    firstTable.setAttribute('id', 'test-table');\n    const otable = OTable.init('#test-table');\n    proclaim.equal(otable instanceof BaseTable, true, 'Did not return an instance of BaseTable.');\n  });\n});"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/BaseTable.test.js",
      "contents": "/* eslint-env mocha, sinon */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BaseTable\", () => {\n\tlet oTableEl;\n\tlet table;\n\n\tconst click = element => {\n\t\tconst click = document.createEvent('MouseEvent');\n\t\tclick.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t\toTableEl.querySelector(element).dispatchEvent(click);\n\t};\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\ttable = new BaseTable(oTableEl, sorter);\n\t});\n\n\tdescribe('addSortButtons', () => {\n\t\tit('adds buttons in the table column headers', done => {\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 5, 'Expected 5 buttons, 1 within each of the 5 column headers.');\n\t\t\t\t\tsortButtons.forEach(button => {\n\t\t\t\t\t\tproclaim.include(button.getAttribute('title'), 'sort', 'Expected each header sort button to have a \"title\" which indicates sort. \"title\" is currently used over \"aria-label\" as \"aria-label\" is read in VoiceOver when moving across columns of the body.');\n\t\t\t\t\t\tproclaim.notEqual(button.textContent, '', 'Expected each header sort button to have content.');\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('does not add sort button to column header with attribute \"data-o-table-heading-disable-sort\"', done => {\n\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t// Disable sort on first column.\n\t\t\tconst firstColumnHeading = thead.querySelector('th');\n\t\t\tfirstColumnHeading.setAttribute('data-o-table-heading-disable-sort', true);\n\t\t\t// Add buttons.\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.isNull(firstColumnHeading.querySelector('button'),'Found a sort button within a column heading with sort disabled.');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 4, 'Expected 4 buttons, 1 within each of the 5 column headers except for the first column which has sort disabled.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('does not add any sort button to column headers when table has \"data-o-table-sortable\" set to false', done => {\n\t\t\t// Disable sort.\n\t\t\toTableEl.setAttribute('data-o-table-sortable', false);\n\t\t\t// Try to add sort buttons.\n\t\t\ttable = new BaseTable(oTableEl, sorter); // re-init table now data att is set\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\tconst sortButtons = thead.querySelectorAll('button');\n\t\t\t\t\tproclaim.equal(sortButtons.length, 0, 'Expected to find no sort buttons when table has been set to non-sortable.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t} finally {\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\n\t\tit('buttons toggle column sort with header button click (ascending first)', done => {\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.addSortButtons();\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tclick('thead th button');\n\t\t\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, 0, 'ascending'), 'Expected the table to be sorted \"ascending\" on first click of the header button.');\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclick('thead th button');\n\t\t\t\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, 0, 'descending'), 'Expected the table to be sorted \"descending\" on second click of the header button.');\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tsorterSpy.restore();\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\tdescribe('sortRowsByColumn', () => {\n\t\tit('sorts a given column in descending order', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(columnIndex, sortOrder);\n\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('sorts a given column in ascending order', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(columnIndex, sortOrder);\n\t\t\tproclaim.isTrue(sorterSpy.calledWith(table, columnIndex, sortOrder));\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('can be intercepted using the `oTable.sorting` event for a custom sort implementation', () => {\n\t\t\t// Prevent sorting for custom implementation.\n\t\t\toTableEl.addEventListener('oTable.sorting', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\t\t\t// Check sort is intercepted performed.\n\t\t\tconst sorterSpy = sinon.spy(sorter, \"sortRowsByColumn\");\n\t\t\ttable.sortRowsByColumn(0, 'ascending');\n\t\t\tproclaim.isTrue(sorterSpy.notCalled, 'Default table sorter was called.');\n\t\t\tsorterSpy.restore();\n\t\t});\n\n\t\tit('errors if no column index is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(undefined, 'descending');\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\n\t\tit('errors if an invalid column index is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn('not a column index', 'descending');\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\n\t\tit('errors if no sort order is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(1, undefined);\n\t\t\t}, /Sort order/);\n\t\t});\n\n\t\tit('errors if an invalid sort order is provided', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sortRowsByColumn(1, 'not a sort order');\n\t\t\t}, /Sort order/);\n\t\t});\n\t});\n\n\tdescribe('getTableHeader', () => {\n\t\tit('gets a th element for a given column index', () => {\n\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\tconst tableHeaders = thead.querySelectorAll('th');\n\t\t\ttableHeaders.forEach((expectedHeader, index) => {\n\t\t\t\tconst actualHeader = table.getTableHeader(index);\n\t\t\t\tproclaim.equal(actualHeader, expectedHeader, `Did not get the expected th element for column index \"${index}\".`);\n\t\t\t});\n\t\t});\n\t\tit('errors when getting a th element for a non-existent column', () => {\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.getTableHeader(1001);\n\t\t\t}, /Could not find header for column index/);\n\t\t});\n\t});\n\n\tdescribe('sorted', () => {\n\t\tit('fires the oTable.sorted event with column index and sort order', done => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\t// Expecting a sorted event.\n\t\t\tdocument.addEventListener('oTable.sorted', (event) => {\n\t\t\t\ttry {\n\t\t\t\t\tproclaim.equal(event.detail.instance, table, 'Expected event detail to include the o-table instance which fired the event.');\n\t\t\t\t\tproclaim.equal(event.detail.sortOrder, sortOrder, `Expected event detail to include the sort order.`);\n\t\t\t\t\tproclaim.equal(event.detail.columnIndex, columnIndex, `Expected event detail to include the column index.`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t\tdone();\n\t\t\t});\n\t\t\ttry {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t});\n\n\t\tit('errors if no column index is provided', () => {\n\t\t\tconst columnIndex = undefined;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t}, /column index/);\n\t\t});\n\n\t\tit('errors if no sort order is provided', () => {\n\t\t\tconst columnIndex = 1;\n\t\t\tconst sortOrder = undefined;\n\t\t\tproclaim.throws(() => {\n\t\t\t\ttable.sorted({ columnIndex, sortOrder });\n\t\t\t}, /sort order/);\n\t\t});\n\t});\n\n\tdescribe('destroy', () => {\n\t\tit('removes sort button event listeners', () => {\n\t\t\t// Mock removeEventListener\n\t\t\tconst realRemoveEventListener = Element.prototype.removeEventListener;\n\t\t\tconst removeEventListenerSpy = sinon.spy();\n\t\t\tElement.prototype.removeEventListener = removeEventListenerSpy;\n\t\t\t// Call destroy\n\t\t\ttable.destroy();\n\t\t\t// Test sort button event listeners removed.\n\t\t\ttry {\n\t\t\t\tconst thead = document.querySelector('thead');\n\t\t\t\tconst buttons = thead.querySelectorAll('button');\n\t\t\t\tbuttons.forEach(button => {\n\t\t\t\t\tproclaim.isTrue(removeEventListenerSpy.calledOn(button), 'Remove event listener was not called on all heading sort buttons.');\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\t// Restore mocks before calling done.\n\t\t\t\tElement.prototype.removeEventListener = realRemoveEventListener;\n\t\t\t}\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/BasicTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport BasicTable from './../src/js/Tables/BasicTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BasicTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew BasicTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new BasicTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('adds sort buttons', (done) => {\n\t\tconst addSortSpy = sinon.spy(BasicTable.prototype, \"addSortButtons\");\n\t\tnew BasicTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tproclaim.isTrue(addSortSpy.calledOnce);\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\taddSortSpy.restore();\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/FlatTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport FlatTable from './../src/js/Tables/FlatTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"FlatTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\toTableEl.classList.add('o-table--responsive-flat');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew FlatTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new FlatTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('clones all headings into each row, so each cell has a row heading', (done) => {\n\t\tconst table = new FlatTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tproclaim.equal(table.tableRows.length, 5, `Expected to find 5 table rows.`);\n\t\t\t\ttable.tableRows.forEach(row => {\n\t\t\t\t\tconst duplicateHeadingClass = '.o-table__duplicate-heading';\n\t\t\t\t\tconst duplicateHeadings = row.querySelectorAll(`${duplicateHeadingClass}[scope=\"row\"][role=\"rowheader\"]`);\n\t\t\t\t\tproclaim.equal(duplicateHeadings.length, 5, `Expected table rows to contain a clone of all headings,  with class \"${duplicateHeadingClass}\", scope=\"row\", and role=\"rowheader\".`);\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/OverflowTable.test.js",
      "contents": "/* eslint-env mocha, sinon, proclaim */\n\nimport proclaim from 'proclaim';\n\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport OverflowTable from './../src/js/Tables/OverflowTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\nfunction expandable(oTableEl, { minimumRowCount, expanded }) {\n\toTableEl.setAttribute('data-o-table-expanded', expanded);\n\toTableEl.setAttribute('data-o-table-minimum-row-count', minimumRowCount);\n}\n\nfunction noTableWrapperOrContainer(oTableEl) {\n\tsandbox.setContents(oTableEl.outerHTML);\n\treturn document.querySelector('[data-o-component=o-table]');\n}\n\nfunction canScrollTable() {\n\tdocument.documentElement.style.width = '340px';\n}\n\nfunction scrollTable(oTableEl, { toEnd }) {\n\tconst wrapper = oTableEl.closest('.o-table-scroll-wrapper');\n\tconst scrollTo = toEnd ? oTableEl.getBoundingClientRect().width : 0;\n\tsetTimeout(() => {\n\t\twrapper.scrollLeft = scrollTo;\n\t}, 50);\n}\n\nfunction canScrollPastTable() {\n\tdocument.documentElement.style['padding-bottom'] = '10000px';\n}\n\nfunction scrollPastTable() {\n\tdocument.documentElement.scrollTop = document.documentElement.getBoundingClientRect().height;\n}\n\nfunction forceExpandedTableTallerThanViewport(oTableEl) {\n\tconst viewportHeight = document.documentElement.clientHeight;\n\tconst tableHeight = oTableEl.getBoundingClientRect().height;\n\tif (tableHeight < viewportHeight) {\n\t\toTableEl.style.height = `${viewportHeight * 2}px`;\n\t}\n\treturn oTableEl;\n}\n\nfunction assertBackButton({ disabled, visuallyHidden, sticky, docked }) {\n\tconst backElement = document.querySelector('.o-table-control--back');\n\tconst backButton = backElement.querySelector('button');\n\tproclaim.equal(backElement.classList.contains('o-table-control--hide'), visuallyHidden, `Back button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n\tproclaim.equal(backButton.hasAttribute('disabled'), disabled, `Back button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\tif (sticky !== undefined) {\n\t\tproclaim.equal(backElement.classList.contains('o-table-control--sticky'), sticky, `Back button is ${sticky ? 'not sticky' : 'sticky'}.`);\n\t}\n\tif (docked !== undefined) {\n\t\tproclaim.equal(backElement.classList.contains('o-table-control--dock'), sticky, `Back button is ${docked ? 'not docked' : 'docked'}.`);\n\t}\n}\n\nfunction assertForwardButton({ disabled, visuallyHidden, sticky, docked }) {\n\tconst forwardElement = document.querySelector('.o-table-control--forward');\n\tconst forwardButton = forwardElement.querySelector('button');\n\tproclaim.equal(forwardElement.classList.contains('o-table-control--hide'), visuallyHidden, `Forward button is ${visuallyHidden ? 'visible' : 'not visible'}.`);\n\tproclaim.equal(forwardButton.hasAttribute('disabled'), disabled, `Forward button is ${disabled ? 'not disabled' : 'disabled'}.`);\n\tif (sticky !== undefined) {\n\t\tproclaim.equal(forwardElement.classList.contains('o-table-control--sticky'), sticky, `Forward button is ${sticky ? 'not sticky' : 'sticky'}.`);\n\t}\n\tif (docked !== undefined) {\n\t\tproclaim.equal(forwardElement.classList.contains('o-table-control--dock'), sticky, `Forward button is ${docked ? 'not docked' : 'docked'}.`);\n\t}\n}\n\nfunction assertExpanded(table, { expanded, minimumRowCount }) {\n\texpanded = typeof expanded === 'boolean' ? expanded : true;\n\tminimumRowCount = minimumRowCount || 20;\n\tconst expectedButtonContent = expanded ? 'show fewer' : 'show more';\n\tconst expectedAriaExpanded = expanded ? 'true' : 'false';\n\tconst expectedHidden = expanded ? 0 : table.tableRows.length - minimumRowCount;\n\tconst wrapperHeightCorrect = (table.wrapper.style.height === '' && expanded) || (table.wrapper.style.height !== '' && !expanded);\n\tproclaim.include(table.container.innerHTML.toLowerCase(), expectedButtonContent, `Expected to see \"${expectedButtonContent}\" within an expanded table.`);\n\tproclaim.isTrue(table.rootEl.getAttribute('aria-expanded') === expectedAriaExpanded, `Expected to see \\'aria-expanded=\"${expectedAriaExpanded}\"\\' on an expanded table.`);\n\tproclaim.equal(table.tbody.querySelectorAll('tr[aria-hidden=\"true\"]').length, expectedHidden, `Expected ${expectedHidden} table rows to be hidden in an expanded table,`);\n\tproclaim.isTrue(wrapperHeightCorrect, `Expect the table wrapper to ${expanded ? 'not have' : 'have'} a set height to hide rows visually.`);\n}\n\ndescribe(\"OverflowTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tdocument.documentElement.style['padding-bottom'] = '';\n\t\tdocument.documentElement.style.width = '';\n\t\tsandbox.setContents(fixtures.longTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew OverflowTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tdescribe(\"expandable feature\", () => {\n\n\t\tit(\"errors if there is not a container element and expander enabled\", (done) => {\n\t\t\toTableEl = noTableWrapperOrContainer(oTableEl);\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\twindow.onerror = function (message, file, line, col, error) {\n\t\t\t\tproclaim.include(error.message, 'container', 'Expected an error when a table is configured to be expandable but has no container element.');\n\t\t\t\twindow.onerror = null;\n\t\t\t\tdone();\n\t\t\t\treturn true;\n\t\t\t};\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t});\n\n\t\tit(\"is not enabled by default\", () => {\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tproclaim.isFalse(table.canExpand());\n\t\t});\n\n\t\tit(\"can be configured to be expanded by default\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: true });\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"can be configured to be contracted by default\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false });\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"can toggle between expanded and contracted programmatically when expandable\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\ttable.contractTable();\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false });\n\t\t\t\ttable.expandTable();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tassertExpanded(table, { expanded: true });\n\t\t\t\t\tdone();\n\t\t\t\t}, 500);\n\t\t\t}, 500);\n\t\t});\n\n\t\tit(\"can configure the number of rows to contract to\", (done) => {\n\t\t\texpandable(oTableEl, { minimumRowCount: 2, expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertExpanded(table, { expanded: false, minimumRowCount: 2});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"is not used if the number of rows to contract to is larger than the table\", (done) => {\n\t\t\texpandable(oTableEl, { minimumRowCount: 200, expanded: false });\n\t\t\tconst table = new OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isFalse(table.canExpand());\n\t\t\t\tproclaim.isFalse(table.rootEl.hasAttribute('aria-expanded'), `Did not expect \"aria-expanded\" on a table which can not expand.`);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\n\tdescribe(\"scroll controls\", () => {\n\t\tbeforeEach(() => {\n\t\t\tcanScrollTable();\n\t\t});\n\n\t\tit(\"are not added if there are no wrapper and container elements\", (done) => {\n\t\t\toTableEl = noTableWrapperOrContainer(oTableEl);\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isNull(oTableEl.querySelector('.o-table-control--forward'), 'Did not expect to find a forward button.');\n\t\t\t\tproclaim.isNull(oTableEl.querySelector('.o-table-control--back'), 'Did not expect to find a back button.');\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward / backward buttons are added given wrapper and container elements\", (done) => {\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tproclaim.isNotNull(document.querySelector('.o-table-control--forward'), 'Did not find forward button.');\n\t\t\t\tproclaim.isNotNull(document.querySelector('.o-table-control--back'), 'Did not find back button.');\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"backward button is disabled and visualy hidden at the start of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.init();\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward button is disabled and visualy hidden at the end of the table, if the table is shorter than the viewport and scrolling past the table is not possible\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tscrollTable(oTableEl, { toEnd: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"backward button is disabled but visible at the start of the table, when the table can be scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\n\t\tit(\"forward button is disabled but visible at the end of the table, when the table can be scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tscrollTable(oTableEl, { toEnd: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"forward / backward buttons are sticky and hidden when the table is scrolled past\", (done) => {\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true,\n\t\t\t\t\tsticky: true\n\t\t\t\t});\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true,\n\t\t\t\t\tsticky: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"forward / backward buttons are not sticky when the table can not be scrolled past\", (done) => {\n\t\t\t// reset sandbox to use a table smaller than the viewport\n\t\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start of the table\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start of the table\n\t\t\t\t\tsticky: false\n\t\t\t\t});\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tvisuallyHidden: false,\n\t\t\t\t\tsticky: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n\n\tdescribe(\"control dock\", () => {\n\t\tfunction assertDock(hasDock) {\n\t\t\tconst controlOverlay = document.querySelector('.o-table-overflow-control-overlay');\n\t\t\tproclaim.equal(controlOverlay.classList.contains('o-table-overflow-control-overlay--arrow-dock'), hasDock, `Table control overlay does ${hasDock ? 'not have a control dock' : 'has a control dock'}.`);\n\t\t}\n\t\tit(\"is added given the table is scrollable, expandable, and can be scrolled past\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tforceExpandedTableTallerThanViewport(oTableEl);\n\t\t\tcanScrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(true);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is smaller than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes a contracted table is smaller than the viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is added if the table is smaller than the viewport and can be scrolled past\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tcanScrollPastTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes a contracted table is smaller than the viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(true);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is not scrollable\", (done) => {\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"is not added given the table is not expandable\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertDock(false);\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls are not sticky and instead \\\"dock\\\" given the dock exists and the table is shorter than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { minimumRowCount: 3, expanded: false }); // assumes non-expanded table is shorter than viewport\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tvisuallyHidden: false,\n\t\t\t\t\tsticky: false,\n\t\t\t\t\tdock: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls do not \\\"dock\\\" if the dock does not exist\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start and not in a dock\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"scroll controls do not \\\"dock\\\" when the table is taller than the viewport\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: true });\n\t\t\tforceExpandedTableTallerThanViewport(oTableEl);\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: true, // hidden as at the start and not in a dock\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"sticky scroll controls are visually hidden when scrolling past a table with no \\\"dock\\\".\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertForwardButton({\n\t\t\t\t\tdisabled: true,\n\t\t\t\t\tvisuallyHidden: true, // hidden as scrolled past the table\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tdock: false\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t\tit(\"sticky scroll controls remain visible when scrolling past a table with a \\\"dock\\\".\", (done) => {\n\t\t\tcanScrollTable();\n\t\t\texpandable(oTableEl, { expanded: false });\n\t\t\tcanScrollPastTable();\n\t\t\tscrollPastTable();\n\t\t\tnew OverflowTable(oTableEl, sorter);\n\t\t\tsetTimeout(() => {\n\t\t\t\tassertBackButton({\n\t\t\t\t\tdisabled: true, // disabled as at the start\n\t\t\t\t\tvisuallyHidden: false, // visible in dock (does not scroll off table)\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tdock: true\n\t\t\t\t});\n\t\t\t\tdone();\n\t\t\t}, 100);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/ScrollTable.test.js",
      "contents": "/* eslint-env mocha */\n\nimport proclaim from 'proclaim';\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport ScrollTable from './../src/js/Tables/ScrollTable';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport TableSorter from './../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"ScrollTable\", () => {\n\tlet oTableEl;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\toTableEl.classList.add('o-table--responsive-scroll');\n\t});\n\n\tit('it fires an \"oTable.ready\" event when constructed', done => {\n\t\twindow.addEventListener('oTable.ready', function () {\n\t\t\tdone();\n\t\t});\n\t\tnew ScrollTable(oTableEl, sorter);\n\t});\n\n\tit('it extends BaseTable', () => {\n\t\tconst table = new ScrollTable(oTableEl, sorter);\n\t\tproclaim.isInstanceOf(table, BaseTable);\n\t});\n\n\tit('clones column data into a new row with row header', (done) => {\n\t\tnew ScrollTable(oTableEl, sorter);\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\tconst duplicateRowClass = '.o-table__duplicate-row';\n\t\t\t\tconst duplicateRows = document.querySelectorAll(duplicateRowClass);\n\t\t\t\tproclaim.equal(duplicateRows.length, 5, `Expected to find 5 rows with duplicate data and class \"${duplicateRowClass}\".`);\n\t\t\t\tduplicateRows.forEach(row => {\n\t\t\t\t\tconst duplicateHeadings = row.querySelectorAll('th[scope=\"row\"][role=\"rowheader\"]');\n\t\t\t\t\tproclaim.equal(duplicateHeadings.length, 1, `Expected to find a row heading within the rows of duplicate data, with scope=\"row\" and role=\"rowheader\".`);\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdone(error);\n\t\t\t}\n\t\t\tdone();\n\t\t}, 2); // wait for window.requestAnimationFrame\n\t});\n\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/Sort",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/Sort/TableSorter.test.js",
      "contents": "/* eslint-env mocha, sinon */\n\nimport proclaim from 'proclaim';\nimport sinon from 'sinon/pkg/sinon';\nimport * as sandbox from './../helpers/sandbox';\nimport BaseTable from './../../src/js/Tables/BaseTable';\nimport FlatTable from './../../src/js/Tables/FlatTable';\nimport TableSorter from './../../src/js/Sort/TableSorter';\nconst sorter = new TableSorter();\n\ndescribe(\"BaseTable\", () => {\n\tlet oTableEl;\n\tlet table;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t});\n\n\tfunction assertSortOrder({sortOrder, columnIndex, expected}) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst tbody = oTableEl.querySelector('tbody');\n\t\t\t\t\tconst thead = oTableEl.querySelector('thead');\n\t\t\t\t\t// Assert correct sort order.\n\t\t\t\t\tconst tableRows = tbody.querySelectorAll('tr');\n\t\t\t\t\tif (tableRows.length === 0) {\n\t\t\t\t\t\tthrow new Error('Could not find rows to test against.');\n\t\t\t\t\t}\n\t\t\t\t\ttableRows.forEach((row, index) => {\n\t\t\t\t\t\tconst cells = row.querySelectorAll('td,th:not(.o-table__duplicate-heading)');\n\t\t\t\t\t\tproclaim.equal(cells[columnIndex].innerHTML, expected[index], `Expected a sort order of \"${expected}\".`);\n\t\t\t\t\t});\n\t\t\t\t\t// Assert correct aria labels.\n\t\t\t\t\tconst tableHeaders = thead.querySelectorAll('th');\n\t\t\t\t\tif (tableHeaders.length === 0) {\n\t\t\t\t\t\tthrow new Error('Could not find column headers to test against.');\n\t\t\t\t\t}\n\t\t\t\t\ttableHeaders.forEach((tableHeader, index) => {\n\t\t\t\t\t\tif(index === columnIndex) {\n\t\t\t\t\t\t\tproclaim.equal(tableHeader.getAttribute('aria-sort'), sortOrder, `Expected column header to have aria-sort=\"${sortOrder}\".`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tproclaim.equal(tableHeader.getAttribute('aria-sort'), 'none', `Expected the non-sorted column headers to have aria-sort=\"none\".`);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t}, 100); // wait for sort and window.requestAnimationFrame to update sort order\n\t\t});\n\t}\n\n\tdescribe('sortRowsByColumn', () => {\n\n\t\tfunction getTableElementWithData(type, dataArray) {\n\t\t\tconst markup = `\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"${type}\">Test Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t${dataArray.map(data => `<tr><td>${data}</td></tr>`).join('')}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\tsandbox.setContents(markup);\n\t\t\treturn document.querySelector('[data-o-component=o-table]');\n\t\t}\n\n\t\tit('sorts strings alphabetically with no type specified ascending', done => {\n\t\t\toTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Apple', 'Dragonfruit', 'Durian', 'Naseberry', 'Strawberry'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts strings alphabetically with no type specified descending', done => {\n\t\t\toTableEl = getTableElementWithData('', ['Dragonfruit', 'Durian', 'Naseberry', 'Strawberry', 'Apple']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['Strawberry', 'Naseberry', 'Durian', 'Dragonfruit', 'Apple'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts localised strings alphabetically', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Æ', 'apple', 'café', 'caffeine'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts localised strings alphabetically when the Intl.Collator API is not available', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['Æ', 'apple', 'café', 'caffeine'];\n\t\t\t// Remove global.Intl\n\t\t\tconst intlBackup = Intl;\n\t\t\tdelete global.Intl;\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tlet error;\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected })\n\t\t\t\t.catch(err => {\n\t\t\t\t\terror = err;\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tglobal.Intl = intlBackup; // Retore global.Intl\n\t\t\t\t\tdone(error);\n\t\t\t\t});\n\t\t});\n\n\t\tit('sorts \"number\" type ascending', done => {\n\t\t\toTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5', '1.5', '1.75', '2', '3'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"number\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('number', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['3','2','1.75','1.5','0.5'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"numeric\" type ascending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5', '1.5', '1.75', '2', '3'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"numeric\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1.5', '0.5', '3', '2', '1.75']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['3','2','1.75','1.5','0.5'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"percent\" type descending', done => {\n\t\t\toTableEl = getTableElementWithData('percent', ['1.5%', '0.5%', '2%', '50%']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['50%','2%','1.5%','0.5%'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"date\" type with FT style time descending', done => {\n\t\t\toTableEl = getTableElementWithData('date', ['7pm', '7am', '6.30am', '6.30pm']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'descending';\n\t\t\tconst expected = ['7pm', '6.30pm', '7am', '6.30am'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"date\" type with FT style dates and time ascending', done => {\n\t\t\t// assumes current year where not specified\n\t\t\toTableEl = getTableElementWithData('date', ['August 17', 'September 12 2012', 'January 2012', 'March 12 2015 1am', 'April 20 2014 3.30am', 'April 20 2014 2.30pm']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['January 2012', 'September 12 2012', 'April 20 2014 3.30am', 'April 20 2014 2.30pm', 'March 12 2015 1am', 'August 17'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts abbreviated type \"currency\" ascending', done => {\n\t\t\t// assumes current year where not specified\n\t\t\toTableEl = getTableElementWithData('currency', ['E£5', '€5.46', 'CFA Fr830', 'DKr10', '£4', 'HK$12', '$140', '￥155', 'Rmb100bn', '13 colons', 'Rp3,400']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['£4', 'E£5', '€5.46', 'DKr10', 'HK$12', '13 colons', '$140', '￥155', 'CFA Fr830', 'Rp3,400', 'Rmb100bn'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts from \"<span>\", \"<a>\", \"<i>\" tags and \"<img>\" tag \"alt\" attributes', done => {\n\t\t\toTableEl = getTableElementWithData('', [\n\t\t\t\t'<a href=\"#\">y</a>',\n\t\t\t\t'<span><a href=\"#\">v</a></span>',\n\t\t\t\t'<i class=\"o-icons-icon\">x</i>',\n\t\t\t\t'<img src=\"#\" alt=\"w\">',\n\t\t\t\t'<span>z</span>'\n\t\t\t]);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = [\n\t\t\t\t'<span><a href=\"#\">v</a></span>',\n\t\t\t\t'<img src=\"#\" alt=\"w\">',\n\t\t\t\t'<i class=\"o-icons-icon\">x</i>',\n\t\t\t\t'<a href=\"#\">y</a>',\n\t\t\t\t'<span>z</span>'\n\t\t\t];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts from \"aria-label\" or \"title\" of \"<span>\", \"<a>\", or \"<i>\" tags if they have no content', done => {\n\t\t\toTableEl = getTableElementWithData('', [\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\">e</span>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>'\n\t\t\t]);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = [\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" title=\"a\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--tick\" title=\"z\" aria-label=\"b\"></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\" aria-label=\"c\"></span>',\n\t\t\t\t'<i class=\"o-icons-icon o-icons-icon--mail\"><a href=\"#\" title=\"d\"></a></i>',\n\t\t\t\t'<span class=\"o-icons-icon o-icons-icon--tick\">e</span>'\n\t\t\t];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts \"n/a\" and \"-\" as if empty cells (first in ascending order)', done => {\n\t\t\toTableEl = getTableElementWithData('', ['café', 'apple', 'N/A', 'n.a.', '-', '', 'caffeine', 'Æ']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['N/A', 'n.a.', '-', '', 'Æ', 'apple', 'café', 'caffeine'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts non-numeric fields in a \"numeric\" column first when ascending', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['9', '' ,'0.5', 'Some Non-Numeric Text', 'N/A', '300', '-']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['', 'N/A', '-', 'Some Non-Numeric Text', '0.5', '9', '300'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts ranges, using the value before a dash or en-dash', done => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1-3', '10-21', '0.5-200']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['0.5-200', '1-3', '10-21'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts ignoring any duplicate headings of the FlatTable', done => {\n\t\t\t// Issue: https://github.com/Financial-Times/o-table/pull/106\n\t\t\toTableEl = getTableElementWithData('numeric', ['3', '1', '999', '2']);\n\t\t\ttable = new FlatTable(oTableEl, sorter); // Flat table duplicates headings within rows.\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['1', '2', '3', '999'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({sortOrder, columnIndex, expected}).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts by attribute \"data-o-table-sort-value\" value if set', done => {\n\t\t\tsandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"c\">snowman</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"a\">42</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td data-o-table-sort-value=\"b\">pangea</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['42', 'pangea', 'snowman'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts row headers', done => {\n\t\t\tsandbox.setContents(`\n\t\t\t\t<div class=\"o-table-container\">\n\t\t\t\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Things</th>\n\t\t\t\t\t\t\t\t\t<th>Data</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">c</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">a</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\" role=\"rowheader\">b</th>\n\t\t\t\t\t\t\t\t\t<td>lorem</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['a', 'b', 'c'];\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('sorts custom data types according to a given formatter', done => {\n\t\t\toTableEl = getTableElementWithData('emoji-time', ['🌑', '🌤', '🌑', '🌤']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst columnIndex = 0;\n\t\t\tconst sortOrder = 'ascending';\n\t\t\tconst expected = ['🌑', '🌑', '🌤', '🌤'];\n\t\t\tsorter.setCellFormatterForType('emoji-time', cell => {\n\t\t\t\tconst text = cell.textContent.trim();\n\t\t\t\tif (text === '🌑') {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (text === '🌤') {\n\t\t\t\t\treturn 2;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tsorter.sortRowsByColumn(table, columnIndex, sortOrder);\n\t\t\tassertSortOrder({ sortOrder, columnIndex, expected }).catch(done).finally(done);\n\t\t});\n\n\t\tit('calls the table\\'s \"sorted\" method', (done) => {\n\t\t\toTableEl = getTableElementWithData('numeric', ['1','3','2']);\n\t\t\ttable = new BaseTable(oTableEl, sorter);\n\t\t\tconst sortedSpy = sinon.spy(table, 'sorted');\n\t\t\tsorter.sortRowsByColumn(table, 0, 'ascending');\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet error;\n\t\t\t\ttry {\n\t\t\t\t\tproclaim.isTrue(sortedSpy.calledWith({\n\t\t\t\t\t\tcolumnIndex: 0,\n\t\t\t\t\t\tsortOrder: 'ascending'\n\t\t\t\t\t}));\n\t\t\t\t\tsortedSpy.restore();\n\t\t\t\t} catch (err) {\n\t\t\t\t\terror = err;\n\t\t\t\t} finally {\n\t\t\t\t\tdone(error);\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n});\n"
    },
    {
      "stats": {
        "isDirectory": true,
        "isFile": false,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers",
      "contents": ""
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/fixtures.js",
      "contents": "\nconst longTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\n\nconst shortTableWithContainer = `\n<div class=\"o-table-container\">\n\t<div class=\"o-table-overlay-wrapper\">\n\t\t<div class=\"o-table-scroll-wrapper\">\n\t\t\t<table class=\"o-table\" data-o-component=\"o-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Fruit</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Genus</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\">Characteristic</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(GBP)</th>\n\t\t\t\t\t\t<th scope=\"col\" role=\"columnheader\" data-o-table-data-type=\"numeric\" class=\"o-table__cell--numeric\">Cost&nbsp;(EUR)</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Dragonfruit</td>\n\t\t\t\t\t\t<td>Stenocereus</td>\n\t\t\t\t\t\t<td>Juicy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">3</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2.72</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Durian</td>\n\t\t\t\t\t\t<td>Durio</td>\n\t\t\t\t\t\t<td>Smelly</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.75</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.33</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Naseberry</td>\n\t\t\t\t\t\t<td>Manilkara</td>\n\t\t\t\t\t\t<td>Chewy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">2</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.85</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Strawberry</td>\n\t\t\t\t\t\t<td>Fragaria</td>\n\t\t\t\t\t\t<td>Sweet</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">1.69</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Apple</td>\n\t\t\t\t\t\t<td>Malus</td>\n\t\t\t\t\t\t<td>Crunchy</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.5</td>\n\t\t\t\t\t\t<td class=\"o-table__cell--numeric\">0.56</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t</div>\n</div>\n`;\n\nexport {\n\tlongTableWithContainer,\n\tshortTableWithContainer,\n};\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/helpers/sandbox.js",
      "contents": "let sandboxEl;\n\nexport function init() {\n\tif (document.querySelector('.sandbox')) {\n\t\tsandboxEl = document.querySelector('.sandbox');\n\t} else {\n\t\tsandboxEl = document.createElement('div');\n\t\tsandboxEl.classList.add('sandbox');\n\t\tdocument.body.appendChild(sandboxEl);\n\t}\n}\n\nexport function reset() {\n\twhile (sandboxEl.firstChild) {\n\t\tsandboxEl.removeChild(sandboxEl.firstChild);\n\t}\n}\n\nexport function setContents(html) {\n\tsandboxEl.innerHTML = html;\n}\n"
    },
    {
      "stats": {
        "isDirectory": false,
        "isFile": true,
        "isSymbolicLink": false,
        "isSocket": false
      },
      "path": "test.src/oTable.test.js",
      "contents": "/* eslint-env mocha, proclaim */\n\nimport proclaim from 'proclaim';\n\nimport * as sandbox from './helpers/sandbox';\nimport * as fixtures from './helpers/fixtures';\nimport OTable from './../main';\nimport BaseTable from './../src/js/Tables/BaseTable';\nimport OverflowTable from './../src/js/Tables/OverflowTable';\nimport FlatTable from './../src/js/Tables/FlatTable';\nimport ScrollTable from './../src/js/Tables/ScrollTable';\nimport BasicTable from './../src/js/Tables/BasicTable';\n\ndescribe('OTable constructs', () => {\n\tlet oTableEl;\n\tlet testOTable;\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(fixtures.shortTableWithContainer);\n\t\toTableEl = document.querySelector('[data-o-component=o-table]');\n\t});\n\n\tafterEach(() => {\n\t\ttestOTable = undefined;\n\t\tsandbox.reset();\n\t\toTableEl = undefined;\n\t});\n\n\tit('a ScrollTable when the table has attribute data-o-table-responsive=\"scroll\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'scroll');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, ScrollTable);\n\t});\n\n\tit('an OverflowTable when the table has attribute data-o-table-responsive=\"overflow\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'overflow');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, OverflowTable);\n\t});\n\n\n\tit('a FlatTable when the table has attribute data-o-table-responsive=\"flat\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', 'flat');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, FlatTable);\n\t});\n\n\tit('a BasicTable when the table has attribute data-o-table-responsive=\"\"', () => {\n\t\toTableEl.setAttribute('data-o-table-responsive', '');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, BasicTable);\n\t});\n\n\tit('a BasicTable when the table does not have the data-o-table-responsive attribute', () => {\n\t\toTableEl.removeAttribute('data-o-table-responsive');\n\t\ttestOTable = new OTable(oTableEl);\n\t\tproclaim.isInstanceOf(testOTable, BasicTable);\n\t});\n});\n\ndescribe('Init', () => {\n\n\tbeforeEach(() => {\n\t\tsandbox.init();\n\t\tsandbox.setContents(`\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t\t${fixtures.shortTableWithContainer}\n\t\t`);\n\t});\n\n\tafterEach(() => {\n\t\tsandbox.reset();\n\t});\n\n\tit('instantiates every o-table in the document', () => {\n\t\tconst tables = OTable.init();\n\t\tproclaim.equal(tables instanceof Array, true, 'init did not return an array of tables.');\n\t\tproclaim.equal(tables.length, 3, 'init did not return the expected number of tables.');\n\t\tproclaim.equal(tables[0] instanceof BaseTable, true, 'a table returned did not extend BaseTable.');\n\t});\n\n\tit('instantiates a single o-table for a given selector which returns one table', () => {\n\t\tconst firstTable = document.querySelector('.o-table');\n\t\tfirstTable.setAttribute('id', 'test-table');\n\t\tconst otable = OTable.init('#test-table');\n\t\tproclaim.equal(otable instanceof BaseTable, true, 'Did not return an instance of BaseTable.');\n\t});\n});\n"
    }
  ]
}
